.TH "s2n/libcrypto-build/openssl/ssl/d1_both.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/ssl/d1_both.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <limits\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include 'ssl_locl\&.h'\fP
.br
\fC#include <openssl/buffer\&.h>\fP
.br
\fC#include <openssl/rand\&.h>\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRSMBLY_BITMASK_SIZE\fP(msg_len)   (((msg_len) + 7) / 8)"
.br
.ti -1c
.RI "#define \fBRSMBLY_BITMASK_MARK\fP(bitmask,  start,  end)"
.br
.ti -1c
.RI "#define \fBRSMBLY_BITMASK_IS_COMPLETE\fP(bitmask,  msg_len,  is_complete)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBdtls1_hm_fragment_free\fP (\fBhm_fragment\fP *frag)"
.br
.ti -1c
.RI "int \fBdtls1_do_write\fP (\fBSSL\fP *s, int \fBtype\fP)"
.br
.ti -1c
.RI "long \fBdtls1_get_message\fP (\fBSSL\fP *s, int st1, int stn, int mt, long \fBmax\fP, int *ok)"
.br
.ti -1c
.RI "int \fBdtls1_send_change_cipher_spec\fP (\fBSSL\fP *s, int \fBa\fP, int \fBb\fP)"
.br
.ti -1c
.RI "int \fBdtls1_read_failed\fP (\fBSSL\fP *s, int \fBcode\fP)"
.br
.ti -1c
.RI "int \fBdtls1_get_queue_priority\fP (unsigned short seq, int is_ccs)"
.br
.ti -1c
.RI "int \fBdtls1_retransmit_buffered_messages\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBdtls1_buffer_message\fP (\fBSSL\fP *s, int is_ccs)"
.br
.ti -1c
.RI "int \fBdtls1_retransmit_message\fP (\fBSSL\fP *s, unsigned short seq, unsigned long frag_off, int *found)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdtls1_clear_record_buffer\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "unsigned char * \fBdtls1_set_message_header\fP (\fBSSL\fP *s, unsigned char *\fBp\fP, unsigned char mt, unsigned long \fBlen\fP, unsigned long frag_off, unsigned long frag_len)"
.br
.ti -1c
.RI "unsigned int \fBdtls1_link_min_mtu\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "unsigned int \fBdtls1_min_mtu\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdtls1_get_message_header\fP (unsigned char *\fBdata\fP, struct \fBhm_header_st\fP *msg_hdr)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdtls1_get_ccs_header\fP (unsigned char *\fBdata\fP, struct \fBccs_header_st\fP *ccs_hdr)"
.br
.ti -1c
.RI "int \fBdtls1_shutdown\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBdtls1_process_heartbeat\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBdtls1_heartbeat\fP (\fBSSL\fP *s)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define RSMBLY_BITMASK_IS_COMPLETE(bitmask, msg_len, is_complete)"
\fBValue:\fP
.PP
.nf
{ \
                        long ii; \
                        OPENSSL_assert((msg_len) > 0); \
                        is_complete = 1; \
                        if (bitmask[(((msg_len) - 1) >> 3)] != bitmask_end_values[((msg_len) & 7)]) is_complete = 0; \
                        if (is_complete) for (ii = (((msg_len) - 1) >> 3) - 1; ii >= 0 ; ii--) \
                                if (bitmask[ii] != 0xff) { is_complete = 0; break; } }
.fi
.PP
Definition at line 139 of file d1_both\&.c\&.
.SS "#define RSMBLY_BITMASK_MARK(bitmask, start, end)"
\fBValue:\fP
.PP
.nf
{ \
                        if ((end) - (start) <= 8) { \
                                long ii; \
                                for (ii = (start); ii < (end); ii++) bitmask[((ii) >> 3)] |= (1 << ((ii) & 7)); \
                        } else { \
                                long ii; \
                                bitmask[((start) >> 3)] |= bitmask_start_values[((start) & 7)]; \
                                for (ii = (((start) >> 3) + 1); ii < ((((end) - 1)) >> 3); ii++) bitmask[ii] = 0xff; \
                                bitmask[(((end) - 1) >> 3)] |= bitmask_end_values[((end) & 7)]; \
                        } }
.fi
.PP
Definition at line 128 of file d1_both\&.c\&.
.SS "#define RSMBLY_BITMASK_SIZE(msg_len)   (((msg_len) + 7) / 8)"

.PP
Definition at line 126 of file d1_both\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int dtls1_buffer_message (\fBSSL\fP * s, int is_ccs)"

.PP
Definition at line 1136 of file d1_both\&.c\&.
.SS "\fBvoid\fP dtls1_clear_record_buffer (\fBSSL\fP * s)"

.PP
Definition at line 1300 of file d1_both\&.c\&.
.SS "int dtls1_do_write (\fBSSL\fP * s, int type)"

.PP
Definition at line 264 of file d1_both\&.c\&.
.SS "\fBvoid\fP dtls1_get_ccs_header (unsigned char * data, struct \fBccs_header_st\fP * ccs_hdr)"

.PP
Definition at line 1390 of file d1_both\&.c\&.
.SS "long dtls1_get_message (\fBSSL\fP * s, int st1, int stn, int mt, long max, int * ok)"

.PP
Definition at line 484 of file d1_both\&.c\&.
.SS "\fBvoid\fP dtls1_get_message_header (unsigned char * data, struct \fBhm_header_st\fP * msg_hdr)"

.PP
Definition at line 1379 of file d1_both\&.c\&.
.SS "int dtls1_get_queue_priority (unsigned short seq, int is_ccs)"

.PP
Definition at line 1096 of file d1_both\&.c\&.
.SS "int dtls1_heartbeat (\fBSSL\fP * s)"

.PP
Definition at line 1506 of file d1_both\&.c\&.
.SS "\fBvoid\fP dtls1_hm_fragment_free (\fBhm_fragment\fP * frag)"

.PP
Definition at line 214 of file d1_both\&.c\&.
.SS "unsigned int dtls1_link_min_mtu (\fBvoid\fP)"

.PP
Definition at line 1367 of file d1_both\&.c\&.
.SS "unsigned int dtls1_min_mtu (\fBSSL\fP * s)"

.PP
Definition at line 1373 of file d1_both\&.c\&.
.SS "int dtls1_process_heartbeat (\fBSSL\fP * s)"

.PP
Definition at line 1423 of file d1_both\&.c\&.
.SS "int dtls1_read_failed (\fBSSL\fP * s, int code)"

.PP
Definition at line 1053 of file d1_both\&.c\&.
.SS "int dtls1_retransmit_buffered_messages (\fBSSL\fP * s)"

.PP
Definition at line 1111 of file d1_both\&.c\&.
.SS "int dtls1_retransmit_message (\fBSSL\fP * s, unsigned short seq, unsigned long frag_off, int * found)"

.PP
Definition at line 1204 of file d1_both\&.c\&.
.SS "int dtls1_send_change_cipher_spec (\fBSSL\fP * s, int a, int b)"

.PP
Definition at line 1022 of file d1_both\&.c\&.
.SS "unsigned char* dtls1_set_message_header (\fBSSL\fP * s, unsigned char * p, unsigned char mt, unsigned long len, unsigned long frag_off, unsigned long frag_len)"

.PP
Definition at line 1311 of file d1_both\&.c\&.
.SS "int dtls1_shutdown (\fBSSL\fP * s)"

.PP
Definition at line 1397 of file d1_both\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

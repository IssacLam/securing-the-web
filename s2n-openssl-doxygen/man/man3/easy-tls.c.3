.TH "s2n/libcrypto-build/openssl/demos/easy_tls/easy-tls.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/demos/easy_tls/easy-tls.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <assert\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <limits\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/select\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <sys/utsname\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <openssl/crypto\&.h>\fP
.br
\fC#include <openssl/dh\&.h>\fP
.br
\fC#include <openssl/dsa\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/opensslv\&.h>\fP
.br
\fC#include <openssl/pem\&.h>\fP
.br
\fC#include <openssl/rand\&.h>\fP
.br
\fC#include <openssl/rsa\&.h>\fP
.br
\fC#include <openssl/ssl\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/x509_vfy\&.h>\fP
.br
\fC#include 'easy\-tls\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBtls_x509_name_string\fP"
.br
.ti -1c
.RI "struct \fBtunnelbuf\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTLS_APP_PROCESS_INIT\fP(fd,  client_p,  apparg)   ((\fBvoid\fP) 0)"
.br
.ti -1c
.RI "#define \fBTLS_ERROR_BUFSIZ\fP   (10*160)"
.br
.ti -1c
.RI "#define \fBTLS_APP_ERRFLUSH\fP   tls_app_errflush"
.br
.ti -1c
.RI "#define \fBDEBUG_MSG\fP(\fBx\fP)   (\fBvoid\fP)0"
.br
.ti -1c
.RI "#define \fBDEBUG_MSG2\fP(\fBx\fP,  y)   (\fBvoid\fP)0"
.br
.ti -1c
.RI "#define \fBmy_MIN_SEED_BYTES\fP   256   /* struct stat can be larger than 128 */"
.br
.ti -1c
.RI "#define \fBTUNNELBUFSIZE\fP   (16*1024)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBtls_start_proxy_args\fP \fBtls_start_proxy_defaultargs\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBtls_start_proxy\fP (struct \fBtls_start_proxy_args\fP \fBa\fP, \fBvoid\fP *apparg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBtls_rand_seed\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBtls_rand_seed_from_file\fP (const char *\fBfilename\fP, size_t n, \fBvoid\fP *apparg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBtls_rand_seed_from_memory\fP (const \fBvoid\fP *buf, size_t n)"
.br
.ti -1c
.RI "\fBvoid\fP \fBtls_set_dhe1024\fP (int i, \fBvoid\fP *apparg)"
.br
.ti -1c
.RI "struct \fBtls_create_ctx_args\fP \fBtls_create_ctx_defaultargs\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSSL_CTX\fP * \fBtls_create_ctx\fP (struct \fBtls_create_ctx_args\fP \fBa\fP, \fBvoid\fP *apparg)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEBUG_MSG(\fBx\fP)   (\fBvoid\fP)0"

.PP
Definition at line 164 of file easy\-tls\&.c\&.
.SS "#define DEBUG_MSG2(\fBx\fP, y)   (\fBvoid\fP)0"

.PP
Definition at line 165 of file easy\-tls\&.c\&.
.SS "#define my_MIN_SEED_BYTES   256   /* struct stat can be larger than 128 */"

.PP
Definition at line 473 of file easy\-tls\&.c\&.
.SS "#define TLS_APP_ERRFLUSH   tls_app_errflush"

.PP
Definition at line 148 of file easy\-tls\&.c\&.
.SS "#define TLS_APP_PROCESS_INIT(fd, client_p, apparg)   ((\fBvoid\fP) 0)"

.PP
Definition at line 137 of file easy\-tls\&.c\&.
.SS "#define TLS_ERROR_BUFSIZ   (10*160)"

.PP
Definition at line 141 of file easy\-tls\&.c\&.
.SS "#define TUNNELBUFSIZE   (16*1024)"

.PP
Definition at line 902 of file easy\-tls\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBSSL_CTX\fP* tls_create_ctx (struct \fBtls_create_ctx_args\fP a, \fBvoid\fP * apparg)"

.PP
Definition at line 660 of file easy\-tls\&.c\&.
.SS "struct \fBtls_create_ctx_args\fP tls_create_ctx_defaultargs (\fBvoid\fP)"

.PP
Definition at line 645 of file easy\-tls\&.c\&.
.SS "\fBvoid\fP tls_rand_seed (\fBvoid\fP)"

.PP
Definition at line 447 of file easy\-tls\&.c\&.
.SS "int tls_rand_seed_from_file (const char * filename, size_t n, \fBvoid\fP * apparg)"

.PP
Definition at line 474 of file easy\-tls\&.c\&.
.SS "\fBvoid\fP tls_rand_seed_from_memory (const \fBvoid\fP * buf, size_t n)"

.PP
Definition at line 512 of file easy\-tls\&.c\&.
.SS "\fBvoid\fP tls_set_dhe1024 (int i, \fBvoid\fP * apparg)"

.PP
Definition at line 605 of file easy\-tls\&.c\&.
.SS "int tls_start_proxy (struct \fBtls_start_proxy_args\fP a, \fBvoid\fP * apparg)"

.PP
Definition at line 198 of file easy\-tls\&.c\&.
.SS "struct \fBtls_start_proxy_args\fP tls_start_proxy_defaultargs (\fBvoid\fP)"

.PP
Definition at line 176 of file easy\-tls\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

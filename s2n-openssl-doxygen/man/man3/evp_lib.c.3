.TH "s2n/libcrypto-build/openssl/crypto/evp/evp_lib.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/evp/evp_lib.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBEVP_CIPHER_param_to_asn1\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP, \fBASN1_TYPE\fP *\fBtype\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_asn1_to_param\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP, \fBASN1_TYPE\fP *\fBtype\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_get_asn1_iv\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP, \fBASN1_TYPE\fP *\fBtype\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_set_asn1_iv\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP, \fBASN1_TYPE\fP *\fBtype\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_type\fP (const \fBEVP_CIPHER\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_block_size\fP (const \fBEVP_CIPHER\fP *\fBe\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_block_size\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_Cipher\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, const unsigned char *\fBin\fP, unsigned int inl)"
.br
.ti -1c
.RI "const \fBEVP_CIPHER\fP * \fBEVP_CIPHER_CTX_cipher\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "unsigned long \fBEVP_CIPHER_flags\fP (const \fBEVP_CIPHER\fP *cipher)"
.br
.ti -1c
.RI "unsigned long \fBEVP_CIPHER_CTX_flags\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBEVP_CIPHER_CTX_get_app_data\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_CIPHER_CTX_set_app_data\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, \fBvoid\fP *\fBdata\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_iv_length\fP (const \fBEVP_CIPHER\fP *cipher)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_iv_length\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_key_length\fP (const \fBEVP_CIPHER\fP *cipher)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_key_length\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_nid\fP (const \fBEVP_CIPHER\fP *cipher)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_nid\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_MD_block_size\fP (const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "int \fBEVP_MD_type\fP (const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "int \fBEVP_MD_pkey_type\fP (const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "int \fBEVP_MD_size\fP (const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "unsigned long \fBEVP_MD_flags\fP (const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "const \fBEVP_MD\fP * \fBEVP_MD_CTX_md\fP (const \fBEVP_MD_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_MD_CTX_set_flags\fP (\fBEVP_MD_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_MD_CTX_clear_flags\fP (\fBEVP_MD_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.ti -1c
.RI "int \fBEVP_MD_CTX_test_flags\fP (const \fBEVP_MD_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_CIPHER_CTX_set_flags\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_CIPHER_CTX_clear_flags\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_test_flags\fP (const \fBEVP_CIPHER_CTX\fP *\fBctx\fP, int \fBflags\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int EVP_Cipher (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, const unsigned char * in, unsigned int inl)"

.PP
Definition at line 224 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_asn1_to_param (\fBEVP_CIPHER_CTX\fP * c, \fBASN1_TYPE\fP * type)"

.PP
Definition at line 96 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_block_size (const \fBEVP_CIPHER\fP * e)"

.PP
Definition at line 214 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_CTX_block_size (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 219 of file evp_lib\&.c\&.
.SS "const \fBEVP_CIPHER\fP* EVP_CIPHER_CTX_cipher (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 230 of file evp_lib\&.c\&.
.SS "\fBvoid\fP EVP_CIPHER_CTX_clear_flags (\fBEVP_CIPHER_CTX\fP * ctx, int flags)"

.PP
Definition at line 383 of file evp_lib\&.c\&.
.SS "unsigned long EVP_CIPHER_CTX_flags (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 246 of file evp_lib\&.c\&.
.SS "\fBvoid\fP* EVP_CIPHER_CTX_get_app_data (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 255 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_CTX_iv_length (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 270 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_CTX_key_length (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 280 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_CTX_nid (const \fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 290 of file evp_lib\&.c\&.
.SS "\fBvoid\fP EVP_CIPHER_CTX_set_app_data (\fBEVP_CIPHER_CTX\fP * ctx, \fBvoid\fP * data)"

.PP
Definition at line 260 of file evp_lib\&.c\&.
.SS "\fBvoid\fP EVP_CIPHER_CTX_set_flags (\fBEVP_CIPHER_CTX\fP * ctx, int flags)"

.PP
Definition at line 378 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_CTX_test_flags (const \fBEVP_CIPHER_CTX\fP * ctx, int flags)"

.PP
Definition at line 388 of file evp_lib\&.c\&.
.SS "unsigned long EVP_CIPHER_flags (const \fBEVP_CIPHER\fP * cipher)"

.PP
Definition at line 235 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_get_asn1_iv (\fBEVP_CIPHER_CTX\fP * c, \fBASN1_TYPE\fP * type)"

.PP
Definition at line 124 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_iv_length (const \fBEVP_CIPHER\fP * cipher)"

.PP
Definition at line 265 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_key_length (const \fBEVP_CIPHER\fP * cipher)"

.PP
Definition at line 275 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_nid (const \fBEVP_CIPHER\fP * cipher)"

.PP
Definition at line 285 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_param_to_asn1 (\fBEVP_CIPHER_CTX\fP * c, \fBASN1_TYPE\fP * type)"

.PP
Definition at line 68 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_set_asn1_iv (\fBEVP_CIPHER_CTX\fP * c, \fBASN1_TYPE\fP * type)"

.PP
Definition at line 141 of file evp_lib\&.c\&.
.SS "int EVP_CIPHER_type (const \fBEVP_CIPHER\fP * ctx)"

.PP
Definition at line 155 of file evp_lib\&.c\&.
.SS "int EVP_MD_block_size (const \fBEVP_MD\fP * md)"

.PP
Definition at line 295 of file evp_lib\&.c\&.
.SS "\fBvoid\fP EVP_MD_CTX_clear_flags (\fBEVP_MD_CTX\fP * ctx, int flags)"

.PP
Definition at line 368 of file evp_lib\&.c\&.
.SS "const \fBEVP_MD\fP* EVP_MD_CTX_md (const \fBEVP_MD_CTX\fP * ctx)"

.PP
Definition at line 356 of file evp_lib\&.c\&.
.SS "\fBvoid\fP EVP_MD_CTX_set_flags (\fBEVP_MD_CTX\fP * ctx, int flags)"

.PP
Definition at line 363 of file evp_lib\&.c\&.
.SS "int EVP_MD_CTX_test_flags (const \fBEVP_MD_CTX\fP * ctx, int flags)"

.PP
Definition at line 373 of file evp_lib\&.c\&.
.SS "unsigned long EVP_MD_flags (const \fBEVP_MD\fP * md)"

.PP
Definition at line 345 of file evp_lib\&.c\&.
.SS "int EVP_MD_pkey_type (const \fBEVP_MD\fP * md)"

.PP
Definition at line 305 of file evp_lib\&.c\&.
.SS "int EVP_MD_size (const \fBEVP_MD\fP * md)"

.PP
Definition at line 310 of file evp_lib\&.c\&.
.SS "int EVP_MD_type (const \fBEVP_MD\fP * md)"

.PP
Definition at line 300 of file evp_lib\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

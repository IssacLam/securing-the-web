.TH "s2n/libcrypto-build/openssl/test/bntest.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/test/bntest.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'e_os\&.h'\fP
.br
\fC#include <openssl/bio\&.h>\fP
.br
\fC#include <openssl/bn\&.h>\fP
.br
\fC#include <openssl/rand\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBtest_add\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_sub\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_lshift1\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_lshift\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP, \fBBIGNUM\fP *a_)"
.br
.ti -1c
.RI "int \fBtest_rshift1\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_rshift\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_div\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_div_word\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_div_recp\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mul\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_sqr\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mont\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mod\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mod_mul\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mod_exp\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mod_exp_mont_consttime\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_mod_exp_mont5\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_exp\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_add\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod\fP (\fBBIO\fP *\fBbp\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_mul\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_sqr\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_inv\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_div\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_exp\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_sqrt\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_gf2m_mod_solve_quad\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_kron\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBtest_sqrt\fP (\fBBIO\fP *\fBbp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBrand_neg\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBnum0\fP = 100"
.br
.ti -1c
.RI "const int \fBnum1\fP = 50"
.br
.ti -1c
.RI "const int \fBnum2\fP = 5"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int main (int argc, char * argv[])"

.PP
Definition at line 143 of file bntest\&.c\&.
.SS "int rand_neg (\fBvoid\fP)"

.PP
Definition at line 2154 of file bntest\&.c\&.
.SS "int test_add (\fBBIO\fP * bp)"

.PP
Definition at line 348 of file bntest\&.c\&.
.SS "int test_div (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 433 of file bntest\&.c\&.
.SS "int test_div_recp (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 571 of file bntest\&.c\&.
.SS "int test_div_word (\fBBIO\fP * bp)"

.PP
Definition at line 514 of file bntest\&.c\&.
.SS "int test_exp (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1185 of file bntest\&.c\&.
.SS "int test_gf2m_add (\fBBIO\fP * bp)"

.PP
Definition at line 1232 of file bntest\&.c\&.
.SS "int test_gf2m_mod (\fBBIO\fP * bp)"

.PP
Definition at line 1281 of file bntest\&.c\&.
.SS "int test_gf2m_mod_div (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1509 of file bntest\&.c\&.
.SS "int test_gf2m_mod_exp (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1568 of file bntest\&.c\&.
.SS "int test_gf2m_mod_inv (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1458 of file bntest\&.c\&.
.SS "int test_gf2m_mod_mul (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1335 of file bntest\&.c\&.
.SS "int test_gf2m_mod_solve_quad (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1691 of file bntest\&.c\&.
.SS "int test_gf2m_mod_sqr (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1403 of file bntest\&.c\&.
.SS "int test_gf2m_mod_sqrt (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1636 of file bntest\&.c\&.
.SS "int test_kron (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1792 of file bntest\&.c\&.
.SS "int test_lshift (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx, \fBBIGNUM\fP * a_)"

.PP
Definition at line 1986 of file bntest\&.c\&.
.SS "int test_lshift1 (\fBBIO\fP * bp)"

.PP
Definition at line 2039 of file bntest\&.c\&.
.SS "int test_mod (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 863 of file bntest\&.c\&.
.SS "int test_mod_exp (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 978 of file bntest\&.c\&.
.SS "int test_mod_exp_mont5 (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1118 of file bntest\&.c\&.
.SS "int test_mod_exp_mont_consttime (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1051 of file bntest\&.c\&.
.SS "int test_mod_mul (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 905 of file bntest\&.c\&.
.SS "int test_mont (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 779 of file bntest\&.c\&.
.SS "int test_mul (\fBBIO\fP * bp)"

.PP
Definition at line 637 of file bntest\&.c\&.
.SS "int test_rshift (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 2076 of file bntest\&.c\&.
.SS "int test_rshift1 (\fBBIO\fP * bp)"

.PP
Definition at line 2118 of file bntest\&.c\&.
.SS "int test_sqr (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 688 of file bntest\&.c\&.
.SS "int test_sqrt (\fBBIO\fP * bp, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1893 of file bntest\&.c\&.
.SS "int test_sub (\fBBIO\fP * bp)"

.PP
Definition at line 388 of file bntest\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "const int num0 = 100"

.PP
Definition at line 92 of file bntest\&.c\&.
.SS "const int num1 = 50"

.PP
Definition at line 93 of file bntest\&.c\&.
.SS "const int num2 = 5"

.PP
Definition at line 94 of file bntest\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

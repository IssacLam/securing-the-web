.TH "s2n/libcrypto-build/openssl/crypto/evp/pmeth_fn.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/evp/pmeth_fn.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include 'evp_locl\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBM_check_autoarg\fP(\fBctx\fP,  \fBarg\fP,  arglen,  err)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBEVP_PKEY_sign_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_sign\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, unsigned char *sig, size_t *siglen, const unsigned char *tbs, size_t tbslen)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_verify_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_verify\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, const unsigned char *sig, size_t siglen, const unsigned char *tbs, size_t tbslen)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_verify_recover_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_verify_recover\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, unsigned char *rout, size_t *routlen, const unsigned char *sig, size_t siglen)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_encrypt_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_encrypt\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, size_t *outlen, const unsigned char *\fBin\fP, size_t inlen)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_decrypt_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_decrypt\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, size_t *outlen, const unsigned char *\fBin\fP, size_t inlen)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_derive_init\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_derive_set_peer\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, \fBEVP_PKEY\fP *peer)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_derive\fP (\fBEVP_PKEY_CTX\fP *\fBctx\fP, unsigned char *\fBkey\fP, size_t *pkeylen)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define M_check_autoarg(\fBctx\fP, \fBarg\fP, arglen, err)"
\fBValue:\fP
.PP
.nf
if (ctx->pmeth->flags & EVP_PKEY_FLAG_AUTOARGLEN) \
                { \
                size_t pksize = (size_t)EVP_PKEY_size(ctx->pkey); \
                if (!arg) \
                        { \
                        *arglen = pksize; \
                        return 1; \
                        } \
                else if (*arglen < pksize) \
                        { \
                        EVPerr(err, EVP_R_BUFFER_TOO_SMALL); /*ckerr_ignore*/\
                        return 0; \
                        } \
                }
.fi
.PP
Definition at line 67 of file pmeth_fn\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int EVP_PKEY_decrypt (\fBEVP_PKEY_CTX\fP * ctx, unsigned char * out, size_t * outlen, const unsigned char * in, size_t inlen)"

.PP
Definition at line 235 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_decrypt_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 218 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_derive (\fBEVP_PKEY_CTX\fP * ctx, unsigned char * key, size_t * pkeylen)"

.PP
Definition at line 333 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_derive_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 252 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_derive_set_peer (\fBEVP_PKEY_CTX\fP * ctx, \fBEVP_PKEY\fP * peer)"

.PP
Definition at line 269 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_encrypt (\fBEVP_PKEY_CTX\fP * ctx, unsigned char * out, size_t * outlen, const unsigned char * in, size_t inlen)"

.PP
Definition at line 201 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_encrypt_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 184 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_sign (\fBEVP_PKEY_CTX\fP * ctx, unsigned char * sig, size_t * siglen, const unsigned char * tbs, size_t tbslen)"

.PP
Definition at line 100 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_sign_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 83 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_verify (\fBEVP_PKEY_CTX\fP * ctx, const unsigned char * sig, size_t siglen, const unsigned char * tbs, size_t tbslen)"

.PP
Definition at line 134 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_verify_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 117 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_verify_recover (\fBEVP_PKEY_CTX\fP * ctx, unsigned char * rout, size_t * routlen, const unsigned char * sig, size_t siglen)"

.PP
Definition at line 167 of file pmeth_fn\&.c\&.
.SS "int EVP_PKEY_verify_recover_init (\fBEVP_PKEY_CTX\fP * ctx)"

.PP
Definition at line 150 of file pmeth_fn\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/error/s2n_errno.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/error/s2n_errno.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <s2n\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBS2N_DEBUG_STR_LEN\fP   128"
.br
.ti -1c
.RI "#define \fBTO_STRING\fP(s)   #s"
.br
.ti -1c
.RI "#define \fBSTRING_\fP(s)   \fBTO_STRING\fP(s)"
.br
.ti -1c
.RI "#define \fBSTRING__LINE__\fP   \fBSTRING_\fP(__LINE__)"
.br
.ti -1c
.RI "#define \fB_S2N_ERROR\fP(\fBx\fP)         \fBs2n_debug_str\fP = 'Error encountered \fBin\fP ' __FILE__ ' line ' STRING__LINE__ ; \fBs2n_errno\fP = ( \fBx\fP )"
.br
.ti -1c
.RI "#define \fBS2N_ERROR\fP(\fBx\fP)           \fB_S2N_ERROR\fP( ( \fBx\fP ) ); return \-1"
.br
.ti -1c
.RI "#define \fBS2N_ERROR_PTR\fP(\fBx\fP)   \fB_S2N_ERROR\fP( ( \fBx\fP ) ); return \fBNULL\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "__thread const char * \fBs2n_debug_str\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _S2N_ERROR(\fBx\fP)   \fBs2n_debug_str\fP = 'Error encountered \fBin\fP ' __FILE__ ' line ' STRING__LINE__ ; \fBs2n_errno\fP = ( \fBx\fP )"

.PP
Definition at line 27 of file s2n_errno\&.h\&.
.SS "#define S2N_DEBUG_STR_LEN   128"

.PP
Definition at line 20 of file s2n_errno\&.h\&.
.SS "#define S2N_ERROR(\fBx\fP)   \fB_S2N_ERROR\fP( ( \fBx\fP ) ); return \-1"

.PP
Definition at line 28 of file s2n_errno\&.h\&.
.SS "#define S2N_ERROR_PTR(\fBx\fP)   \fB_S2N_ERROR\fP( ( \fBx\fP ) ); return \fBNULL\fP"

.PP
Definition at line 29 of file s2n_errno\&.h\&.
.SS "#define STRING_(s)   \fBTO_STRING\fP(s)"

.PP
Definition at line 24 of file s2n_errno\&.h\&.
.SS "#define STRING__LINE__   \fBSTRING_\fP(__LINE__)"

.PP
Definition at line 25 of file s2n_errno\&.h\&.
.SS "#define TO_STRING(s)   #s"

.PP
Definition at line 23 of file s2n_errno\&.h\&.
.SH "Variable Documentation"
.PP 
.SS "__thread const char* s2n_debug_str"

.PP
Definition at line 24 of file s2n_errno\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

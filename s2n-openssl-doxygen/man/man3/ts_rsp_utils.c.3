.TH "s2n/libcrypto-build/openssl/crypto/ts/ts_rsp_utils.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/ts/ts_rsp_utils.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include <openssl/ts\&.h>\fP
.br
\fC#include <openssl/pkcs7\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBTS_RESP_set_status_info\fP (\fBTS_RESP\fP *\fBa\fP, \fBTS_STATUS_INFO\fP *status_info)"
.br
.ti -1c
.RI "\fBTS_STATUS_INFO\fP * \fBTS_RESP_get_status_info\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_set_tst_info\fP (\fBTS_RESP\fP *\fBa\fP, \fBPKCS7\fP *p7, \fBTS_TST_INFO\fP *tst_info)"
.br
.ti -1c
.RI "\fBPKCS7\fP * \fBTS_RESP_get_token\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBTS_RESP_get_tst_info\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_version\fP (\fBTS_TST_INFO\fP *\fBa\fP, long \fBversion\fP)"
.br
.ti -1c
.RI "long \fBTS_TST_INFO_get_version\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_policy_id\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBASN1_OBJECT\fP *policy)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBTS_TST_INFO_get_policy_id\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_msg_imprint\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBTS_MSG_IMPRINT\fP *msg_imprint)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBTS_TST_INFO_get_msg_imprint\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_serial\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_INTEGER\fP *serial)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_TST_INFO_get_serial\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_time\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_GENERALIZEDTIME\fP *gtime)"
.br
.ti -1c
.RI "const \fBASN1_GENERALIZEDTIME\fP * \fBTS_TST_INFO_get_time\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_accuracy\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBTS_ACCURACY\fP *accuracy)"
.br
.ti -1c
.RI "\fBTS_ACCURACY\fP * \fBTS_TST_INFO_get_accuracy\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_seconds\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *seconds)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_seconds\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_millis\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *millis)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_millis\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_micros\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *micros)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_micros\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_ordering\fP (\fBTS_TST_INFO\fP *\fBa\fP, int ordering)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ordering\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_nonce\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_INTEGER\fP *nonce)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_TST_INFO_get_nonce\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_tsa\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBGENERAL_NAME\fP *tsa)"
.br
.ti -1c
.RI "\fBGENERAL_NAME\fP * \fBTS_TST_INFO_get_tsa\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509_EXTENSION\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_TST_INFO_ext_free\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_count\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_NID\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBnid\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_OBJ\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBASN1_OBJECT\fP *\fBobj\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_critical\fP (\fBTS_TST_INFO\fP *\fBa\fP, int crit, int lastpos)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_TST_INFO_get_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_TST_INFO_delete_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_add_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBX509_EXTENSION\fP *\fBex\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBTS_TST_INFO_get_ext_d2i\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBnid\fP, int *crit, int *idx)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "STACK_OF (\fBX509_EXTENSION\fP)"

.PP
Definition at line 345 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_micros (const \fBTS_ACCURACY\fP * a)"

.PP
Definition at line 287 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_millis (const \fBTS_ACCURACY\fP * a)"

.PP
Definition at line 264 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_seconds (const \fBTS_ACCURACY\fP * a)"

.PP
Definition at line 241 of file ts_rsp_utils\&.c\&.
.SS "int TS_ACCURACY_set_micros (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * micros)"

.PP
Definition at line 269 of file ts_rsp_utils\&.c\&.
.SS "int TS_ACCURACY_set_millis (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * millis)"

.PP
Definition at line 246 of file ts_rsp_utils\&.c\&.
.SS "int TS_ACCURACY_set_seconds (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * seconds)"

.PP
Definition at line 225 of file ts_rsp_utils\&.c\&.
.SS "\fBTS_STATUS_INFO\fP* TS_RESP_get_status_info (\fBTS_RESP\fP * a)"

.PP
Definition at line 85 of file ts_rsp_utils\&.c\&.
.SS "\fBPKCS7\fP* TS_RESP_get_token (\fBTS_RESP\fP * a)"

.PP
Definition at line 100 of file ts_rsp_utils\&.c\&.
.SS "\fBTS_TST_INFO\fP* TS_RESP_get_tst_info (\fBTS_RESP\fP * a)"

.PP
Definition at line 105 of file ts_rsp_utils\&.c\&.
.SS "int TS_RESP_set_status_info (\fBTS_RESP\fP * a, \fBTS_STATUS_INFO\fP * status_info)"

.PP
Definition at line 68 of file ts_rsp_utils\&.c\&.
.SS "\fBvoid\fP TS_RESP_set_tst_info (\fBTS_RESP\fP * a, \fBPKCS7\fP * p7, \fBTS_TST_INFO\fP * tst_info)"

.PP
Definition at line 91 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_add_ext (\fBTS_TST_INFO\fP * a, \fBX509_EXTENSION\fP * ex, int loc)"

.PP
Definition at line 388 of file ts_rsp_utils\&.c\&.
.SS "\fBX509_EXTENSION\fP* TS_TST_INFO_delete_ext (\fBTS_TST_INFO\fP * a, int loc)"

.PP
Definition at line 383 of file ts_rsp_utils\&.c\&.
.SS "\fBvoid\fP TS_TST_INFO_ext_free (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 350 of file ts_rsp_utils\&.c\&.
.SS "\fBTS_ACCURACY\fP* TS_TST_INFO_get_accuracy (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 220 of file ts_rsp_utils\&.c\&.
.SS "\fBX509_EXTENSION\fP* TS_TST_INFO_get_ext (\fBTS_TST_INFO\fP * a, int loc)"

.PP
Definition at line 378 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_get_ext_by_critical (\fBTS_TST_INFO\fP * a, int crit, int lastpos)"

.PP
Definition at line 373 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_get_ext_by_NID (\fBTS_TST_INFO\fP * a, int nid, int lastpos)"

.PP
Definition at line 363 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_get_ext_by_OBJ (\fBTS_TST_INFO\fP * a, \fBASN1_OBJECT\fP * obj, int lastpos)"

.PP
Definition at line 368 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_get_ext_count (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 358 of file ts_rsp_utils\&.c\&.
.SS "\fBvoid\fP* TS_TST_INFO_get_ext_d2i (\fBTS_TST_INFO\fP * a, int nid, int * crit, int * idx)"

.PP
Definition at line 393 of file ts_rsp_utils\&.c\&.
.SS "\fBTS_MSG_IMPRINT\fP* TS_TST_INFO_get_msg_imprint (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 157 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_INTEGER\fP* TS_TST_INFO_get_nonce (const \fBTS_TST_INFO\fP * a)"

.PP
Definition at line 319 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_get_ordering (const \fBTS_TST_INFO\fP * a)"

.PP
Definition at line 298 of file ts_rsp_utils\&.c\&.
.SS "\fBASN1_OBJECT\fP* TS_TST_INFO_get_policy_id (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 136 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_INTEGER\fP* TS_TST_INFO_get_serial (const \fBTS_TST_INFO\fP * a)"

.PP
Definition at line 178 of file ts_rsp_utils\&.c\&.
.SS "const \fBASN1_GENERALIZEDTIME\fP* TS_TST_INFO_get_time (const \fBTS_TST_INFO\fP * a)"

.PP
Definition at line 199 of file ts_rsp_utils\&.c\&.
.SS "\fBGENERAL_NAME\fP* TS_TST_INFO_get_tsa (\fBTS_TST_INFO\fP * a)"

.PP
Definition at line 340 of file ts_rsp_utils\&.c\&.
.SS "long TS_TST_INFO_get_version (const \fBTS_TST_INFO\fP * a)"

.PP
Definition at line 115 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_accuracy (\fBTS_TST_INFO\fP * a, \fBTS_ACCURACY\fP * accuracy)"

.PP
Definition at line 204 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_msg_imprint (\fBTS_TST_INFO\fP * a, \fBTS_MSG_IMPRINT\fP * msg_imprint)"

.PP
Definition at line 141 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_nonce (\fBTS_TST_INFO\fP * a, const \fBASN1_INTEGER\fP * nonce)"

.PP
Definition at line 303 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_ordering (\fBTS_TST_INFO\fP * a, int ordering)"

.PP
Definition at line 292 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_policy_id (\fBTS_TST_INFO\fP * a, \fBASN1_OBJECT\fP * policy)"

.PP
Definition at line 120 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_serial (\fBTS_TST_INFO\fP * a, const \fBASN1_INTEGER\fP * serial)"

.PP
Definition at line 162 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_time (\fBTS_TST_INFO\fP * a, const \fBASN1_GENERALIZEDTIME\fP * gtime)"

.PP
Definition at line 183 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_tsa (\fBTS_TST_INFO\fP * a, \fBGENERAL_NAME\fP * tsa)"

.PP
Definition at line 324 of file ts_rsp_utils\&.c\&.
.SS "int TS_TST_INFO_set_version (\fBTS_TST_INFO\fP * a, long version)"

.PP
Definition at line 110 of file ts_rsp_utils\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

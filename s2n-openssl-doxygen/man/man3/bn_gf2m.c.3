.TH "s2n/libcrypto-build/openssl/crypto/bn/bn_gf2m.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/bn/bn_gf2m.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <assert\&.h>\fP
.br
\fC#include <limits\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include 'bn_lcl\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_ITERATIONS\fP   50"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBBN_GF2m_add\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const int \fBp\fP[])"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBp\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_mul_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_mul\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_sqr_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_sqr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_inv\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_inv_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *xx, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_div\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *y, const \fBBIGNUM\fP *\fBx\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_div_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *yy, const \fBBIGNUM\fP *xx, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_exp_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_exp\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_sqrt_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_sqrt\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_solve_quad_arr\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *a_, const int \fBp\fP[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_mod_solve_quad\fP (\fBBIGNUM\fP *r, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBp\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_poly2arr\fP (const \fBBIGNUM\fP *\fBa\fP, int \fBp\fP[], int \fBmax\fP)"
.br
.ti -1c
.RI "int \fBBN_GF2m_arr2poly\fP (const int \fBp\fP[], \fBBIGNUM\fP *\fBa\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX_ITERATIONS   50"

.PP
Definition at line 104 of file bn_gf2m\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int BN_GF2m_add (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b)"

.PP
Definition at line 331 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_arr2poly (const int p[], \fBBIGNUM\fP * a)"

.PP
Definition at line 1285 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * p)"

.PP
Definition at line 469 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const int p[])"

.PP
Definition at line 371 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_div (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * y, const \fBBIGNUM\fP * x, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 833 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_div_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * yy, const \fBBIGNUM\fP * xx, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 954 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_exp (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1028 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_exp_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 982 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_inv (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 633 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_inv_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * xx, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 807 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_mul (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 544 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_mul_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 489 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_solve_quad (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1220 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_solve_quad_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a_, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1116 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_sqr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 604 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_sqr_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 569 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_sqrt (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * p, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1090 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_mod_sqrt_arr (\fBBIGNUM\fP * r, const \fBBIGNUM\fP * a, const int p[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1056 of file bn_gf2m\&.c\&.
.SS "int BN_GF2m_poly2arr (const \fBBIGNUM\fP * a, int p[], int max)"

.PP
Definition at line 1250 of file bn_gf2m\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/libcrypto-build/openssl/demos/engines/zencod/hw_zencod.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/demos/engines/zencod/hw_zencod.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <openssl/crypto\&.h>\fP
.br
\fC#include <openssl/dso\&.h>\fP
.br
\fC#include <openssl/engine\&.h>\fP
.br
\fC#include 'vendor_defns/hw_zencod\&.h'\fP
.br
\fC#include 'hw_zencod_err\&.c'\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/sha\&.h>\fP
.br
\fC#include <openssl/md5\&.h>\fP
.br
\fC#include <openssl/rc4\&.h>\fP
.br
\fC#include <openssl/des\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBNEW_ZEN_RC4_KEY\fP"
.br
.ti -1c
.RI "struct \fBZEN_DES_KEY\fP"
.br
.ti -1c
.RI "struct \fBZEN_3DES_KEY\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBZENCOD_LIB_NAME\fP   'zencod engine'"
.br
.ti -1c
.RI "#define \fBFAIL_TO_SOFTWARE\fP   \-15"
.br
.ti -1c
.RI "#define \fBZEN_LIBRARY\fP   'zenbridge'"
.br
.ti -1c
.RI "#define \fBPERROR\fP(s)"
.br
.ti -1c
.RI "#define \fBCHEESE\fP()"
.br
.ti -1c
.RI "#define \fBBIGNUM2ZEN\fP(n,  bn)          "
.br
.ti -1c
.RI "#define \fBZEN_BITS\fP(n,  \fBbytes\fP)           (ptr_zencod_bytes2bits((unsigned char *) (n), (unsigned long) (\fBbytes\fP)))"
.br
.ti -1c
.RI "#define \fBZEN_BYTES\fP(\fBbits\fP)   (ptr_zencod_bits2bytes((unsigned long) (\fBbits\fP)))"
.br
.ti -1c
.RI "#define \fBZENCOD_CMD_SO_PATH\fP   \fBENGINE_CMD_BASE\fP"
.br
.ti -1c
.RI "#define \fBEVP_RC4_KEY_SIZE\fP   16"
.br
.ti -1c
.RI "#define \fBrc4_data\fP(\fBctx\fP)                                                     ( (\fBEVP_RC4_KEY\fP *) ( \fBctx\fP )\->cipher_data )"
.br
.ti -1c
.RI "#define \fBdes_data\fP(\fBctx\fP)                                                       ( (\fBDES_EDE_KEY\fP *) ( \fBctx\fP )\->cipher_data )"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBENGINE_load_zencod\fP (\fBvoid\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BIGNUM2ZEN(n, bn)"
\fBValue:\fP
.PP
.nf
(ptr_zencod_init_number((n), \
                                        (unsigned long) ((bn)->top * BN_BITS2), \
                                        (unsigned char *) ((bn)->d)))
.fi
.PP
Definition at line 126 of file hw_zencod\&.c\&.
.SS "#define CHEESE()"

.PP
Definition at line 90 of file hw_zencod\&.c\&.
.SS "#define des_data(\fBctx\fP)   ( (\fBDES_EDE_KEY\fP *) ( \fBctx\fP )\->cipher_data )"

.PP
Definition at line 1398 of file hw_zencod\&.c\&.
.SS "#define EVP_RC4_KEY_SIZE   16"

.PP
Definition at line 1326 of file hw_zencod\&.c\&.
.SS "#define FAIL_TO_SOFTWARE   \-15"

.PP
Definition at line 81 of file hw_zencod\&.c\&.
.SS "#define PERROR(s)"

.PP
Definition at line 89 of file hw_zencod\&.c\&.
.SS "#define rc4_data(\fBctx\fP)   ( (\fBEVP_RC4_KEY\fP *) ( \fBctx\fP )\->cipher_data )"

.PP
Definition at line 1335 of file hw_zencod\&.c\&.
.SS "#define ZEN_BITS(n, \fBbytes\fP)   (ptr_zencod_bytes2bits((unsigned char *) (n), (unsigned long) (\fBbytes\fP)))"

.PP
Definition at line 130 of file hw_zencod\&.c\&.
.SS "#define ZEN_BYTES(\fBbits\fP)   (ptr_zencod_bits2bytes((unsigned long) (\fBbits\fP)))"

.PP
Definition at line 131 of file hw_zencod\&.c\&.
.SS "#define ZEN_LIBRARY   'zenbridge'"

.PP
Definition at line 83 of file hw_zencod\&.c\&.
.SS "#define ZENCOD_CMD_SO_PATH   \fBENGINE_CMD_BASE\fP"

.PP
Definition at line 186 of file hw_zencod\&.c\&.
.SS "#define ZENCOD_LIB_NAME   'zencod engine'"

.PP
Definition at line 78 of file hw_zencod\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP ENGINE_load_zencod (\fBvoid\fP)"

.PP
Definition at line 404 of file hw_zencod\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

CBMC version 5.4 64-bit x86_64 macos
Parsing ./s2n/tls/s2n_record_write.c
Converting
Type-checking s2n_record_write
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
size of program expression: 118 steps
simple slicing removed 10 assignments
Generated 56 VCC(s), 56 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
131102 variables, 1303 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.063s
Building error trace

Counterexample:

State 18 file ./s2n/tls/s2n_record_write.c line 36 thread 0
----------------------------------------------------
  conn=INVALID (0000000100000000000000000000000000000000000000000000000000000000)

State 19 file ./s2n/tls/s2n_record_write.c line 38 function overhead thread 0
----------------------------------------------------
  active=((struct s2n_crypto_parameters { struct s2n_rsa_public_key { struct rsa_st *rsa; } server_rsa_public_key; struct s2n_dh_params { struct dh_st *dh; } server_dh_params; struct s2n_ecc_params { struct s2n_ecc_named_curve *negotiated_curve; struct ec_key_st *ec_key; } server_ecc_params; struct s2n_cert_chain_and_key *chosen_cert_chain; enum  signature_digest_alg; unsigned int $pad0; struct s2n_cipher_suite *cipher_suite; struct s2n_session_key { union { struct rc4_key_st { unsigned int x; unsigned int y; unsigned int data[256l]; } rc4; struct { struct DES_ks { union ks[16l]; } dks1; struct DES_ks { union ks[16l]; } dks2; struct DES_ks { union ks[16l]; } dks3; } des; struct evp_cipher_ctx_st { const struct evp_cipher_st *cipher; struct engine_st *engine; signed int encrypt; signed int buf_len; unsigned char oiv[16l]; unsigned char iv[16l]; unsigned char buf[32l]; signed int num; unsigned int $pad0; const void *app_data; signed int key_len; unsigned int $pad1; unsigned long int flags; const void *cipher_data; signed int final_used; signed int block_mask; unsigned char final[32l]; } evp_cipher_ctx; } native_format; } client_key; struct s2n_session_key { union { struct rc4_key_st { unsigned int x; unsigned int y; unsigned int data[256l]; } rc4; struct { struct DES_ks { union ks[16l]; } dks1; struct DES_ks { union ks[16l]; } dks2; struct DES_ks { union ks[16l]; } dks3; } des; struct evp_cipher_ctx_st { const struct evp_cipher_st *cipher; struct engine_st *engine; signed int encrypt; signed int buf_len; unsigned char oiv[16l]; unsigned char iv[16l]; unsigned char buf[32l]; signed int num; unsigned int $pad0; const void *app_data; signed int key_len; unsigned int $pad1; unsigned long int flags; const void *cipher_data; signed int final_used; signed int block_mask; unsigned char final[32l]; } evp_cipher_ctx; } native_format; } server_key; unsigned char rsa_premaster_secret[48l]; unsigned char master_secret[48l]; unsigned char client_random[32l]; unsigned char server_random[32l]; unsigned char client_implicit_iv[16l]; unsigned char server_implicit_iv[16l]; struct s2n_hmac_state { enum  alg; unsigned short int hash_block_size; unsigned short int $pad0; unsigned int currently_in_hash_block; unsigned short int block_size; unsigned char digest_size; unsigned char $pad1; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } inner; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } inner_just_key; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } outer; unsigned char xor_pad[128l]; unsigned char digest_pad[64l]; } client_record_mac; struct s2n_hmac_state { enum  alg; unsigned short int hash_block_size; unsigned short int $pad0; unsigned int currently_in_hash_block; unsigned short int block_size; unsigned char digest_size; unsigned char $pad1; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } inner; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } inner_just_key; struct s2n_hash_state { enum  alg; unsigned int $pad0; union { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha224; struct CC_SHA256state_st { unsigned int count[2l]; unsigned int hash[8l]; unsigned int wbuf[16l]; } sha256; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha384; struct CC_SHA512state_st { unsigned long int count[2l]; unsigned long int hash[8l]; unsigned long int wbuf[16l]; } sha512; struct { struct CC_MD5state_st { unsigned int A; unsigned int B; unsigned int C; unsigned int D; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } md5; struct CC_SHA1state_st { unsigned int h0; unsigned int h1; unsigned int h2; unsigned int h3; unsigned int h4; unsigned int Nl; unsigned int Nh; unsigned int data[16l]; signed int num; } sha1; } md5_sha1; } hash_ctx; } outer; unsigned char xor_pad[128l]; unsigned char digest_pad[64l]; } server_record_mac; unsigned char client_sequence_number[8l]; unsigned char server_sequence_number[8l]; } *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

Violated property:
  file ./s2n/tls/s2n_record_write.c line 38 function overhead
  dereference failure: pointer invalid in *conn
  !INVALID-POINTER(conn)

VERIFICATION FAILED

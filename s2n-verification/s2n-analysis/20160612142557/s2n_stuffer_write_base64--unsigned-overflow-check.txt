CBMC version 5.4 64-bit x86_64 macos
Parsing ./stuffer/s2n_stuffer_base64.c
Converting
Type-checking s2n_stuffer_base64
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop s2n_stuffer_write_base64.0 iteration 1 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 2 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 3 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 4 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 5 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 6 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 7 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 8 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Unwinding loop s2n_stuffer_write_base64.0 iteration 9 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
Not unwinding loop s2n_stuffer_write_base64.0 iteration 10 (10 max) file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64 thread 0
size of program expression: 814 steps
simple slicing removed 312 assignments
Generated 12 VCC(s), 12 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
12941 variables, 58723 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.168s
Building error trace

Counterexample:

State 20 file ./stuffer/s2n_stuffer_base64.c line 146 thread 0
----------------------------------------------------
  stuffer=((struct s2n_stuffer { struct s2n_blob { const unsigned char *data; unsigned int size; unsigned int allocated; unsigned int mlocked : 1; unsigned __CPROVER_bitvector[7] $bit_field_pad0 : 7; unsigned __CPROVER_bitvector[56] $pad0; } blob; unsigned int read_cursor; unsigned int write_cursor; unsigned int wiped : 1; unsigned int alloced : 1; unsigned int growable : 1; unsigned int tainted : 1; unsigned __CPROVER_bitvector[4] $bit_field_pad0 : 4; unsigned __CPROVER_bitvector[56] $pad0; } *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 21 file ./stuffer/s2n_stuffer_base64.c line 146 thread 0
----------------------------------------------------
  in=((struct s2n_stuffer { struct s2n_blob { const unsigned char *data; unsigned int size; unsigned int allocated; unsigned int mlocked : 1; unsigned __CPROVER_bitvector[7] $bit_field_pad0 : 7; unsigned __CPROVER_bitvector[56] $pad0; } blob; unsigned int read_cursor; unsigned int write_cursor; unsigned int wiped : 1; unsigned int alloced : 1; unsigned int growable : 1; unsigned int tainted : 1; unsigned __CPROVER_bitvector[4] $bit_field_pad0 : 4; unsigned __CPROVER_bitvector[56] $pad0; } *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 22 file ./stuffer/s2n_stuffer_base64.c line 148 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  outpad={ 0, 0, 0, 0 } ({ 00000000, 00000000, 00000000, 00000000 })

State 23 file ./stuffer/s2n_stuffer_base64.c line 149 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  inpad={ 48, 176, 84 } ({ 00110000, 10110000, 01010100 })

State 24 file ./stuffer/s2n_stuffer_base64.c line 150 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  o={ .data=((const unsigned char *)NULL), .size=0u, .allocated=0u,
    .mlocked=0u, .$bit_field_pad0=0, .$pad0=0 } ({ 0000000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

State 25 file ./stuffer/s2n_stuffer_base64.c line 150 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  o={ .data=outpad!0@1, .size=4u, .allocated=0u, .mlocked=0u,
    .$bit_field_pad0=0, .$pad0=0 } ({ 0000001000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000100, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

State 26 file ./stuffer/s2n_stuffer_base64.c line 151 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  i={ .data=((const unsigned char *)NULL), .size=0u, .allocated=0u,
    .mlocked=0u, .$bit_field_pad0=0, .$pad0=0 } ({ 0000000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

State 27 file ./stuffer/s2n_stuffer_base64.c line 151 function s2n_stuffer_write_base64 thread 0
----------------------------------------------------
  i={ .data=inpad!0@1, .size=3u, .allocated=0u, .mlocked=0u,
    .$bit_field_pad0=0, .$pad0=0 } ({ 0000001100000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000011, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

Violated property:
  file ./stuffer/s2n_stuffer_base64.c line 153 function s2n_stuffer_write_base64
  arithmetic overflow on unsigned - in in->write_cursor - in->read_cursor
  !overflow("-", unsigned int, in->write_cursor, in->read_cursor)

VERIFICATION FAILED

.TH "s2n/libcrypto-build/openssl/test/ectest.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/test/ectest.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include '\&.\&./e_os\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <openssl/ec\&.h>\fP
.br
\fC#include <openssl/engine\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include <openssl/obj_mac\&.h>\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include <openssl/rand\&.h>\fP
.br
\fC#include <openssl/bn\&.h>\fP
.br
\fC#include <openssl/opensslconf\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBnistp_test_params\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBABORT\fP"
.br
.ti -1c
.RI "#define \fBTIMING_BASE_PT\fP   0"
.br
.ti -1c
.RI "#define \fBTIMING_RAND_PT\fP   1"
.br
.ti -1c
.RI "#define \fBTIMING_SIMUL\fP   2"
.br
.ti -1c
.RI "#define \fBCHAR2_CURVE_TEST_INTERNAL\fP(_name,  _p,  _a,  _b,  _x,  _y,  _y_bit,  _order,  _cof,  _degree,  _variable)"
.br
.ti -1c
.RI "#define \fBCHAR2_CURVE_TEST\fP(_name,  _p,  _a,  _b,  _x,  _y,  _y_bit,  _order,  _cof,  _degree,  _variable)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ABORT"
\fBValue:\fP
.PP
.nf
do { \
        fflush(stdout); \
        fprintf(stderr, "%s:%d: ABORT\n", __FILE__, __LINE__); \
        ERR_print_errors_fp(stderr); \
        EXIT(1); \
} while (0)
.fi
.PP
Definition at line 106 of file ectest\&.c\&.
.SS "#define CHAR2_CURVE_TEST(_name, _p, _a, _b, _x, _y, _y_bit, _order, _cof, _degree, _variable)"
\fBValue:\fP
.PP
.nf
if (!BN_hex2bn(&p, _p)) ABORT; \
        if (!BN_hex2bn(&a, _a)) ABORT; \
        if (!BN_hex2bn(&b, _b)) ABORT; \
        if (!EC_GROUP_set_curve_GF2m(group, p, a, b, ctx)) ABORT; \
        CHAR2_CURVE_TEST_INTERNAL(_name, _p, _a, _b, _x, _y, _y_bit, _order, _cof, _degree, _variable) \
        fprintf(stdout, "verify degree \&.\&.\&."); \
        if (EC_GROUP_get_degree(group) != _degree) ABORT; \
        fprintf(stdout, " ok\n"); \
        group_order_tests(group); \
        if (!(_variable = EC_GROUP_new(EC_GROUP_method_of(group)))) ABORT; \
        if (!EC_GROUP_copy(_variable, group)) ABORT; \
.fi
.PP
Definition at line 1040 of file ectest\&.c\&.
.SS "#define CHAR2_CURVE_TEST_INTERNAL(_name, _p, _a, _b, _x, _y, _y_bit, _order, _cof, _degree, _variable)"
\fBValue:\fP
.PP
.nf
if (!BN_hex2bn(&x, _x)) ABORT; \
        if (!BN_hex2bn(&y, _y)) ABORT; \
        if (!EC_POINT_set_affine_coordinates_GF2m(group, P, x, y, ctx)) ABORT; \
        if (EC_POINT_is_on_curve(group, P, ctx) <= 0) ABORT; \
        if (!BN_hex2bn(&z, _order)) ABORT; \
        if (!BN_hex2bn(&cof, _cof)) ABORT; \
        if (!EC_GROUP_set_generator(group, P, z, cof)) ABORT; \
        fprintf(stdout, "\n%s -- Generator:\n     x = 0x", _name); \
        BN_print_fp(stdout, x); \
        fprintf(stdout, "\n     y = 0x"); \
        BN_print_fp(stdout, y); \
        fprintf(stdout, "\n");
.fi
.PP
Definition at line 1025 of file ectest\&.c\&.
.SS "#define TIMING_BASE_PT   0"

.PP
Definition at line 113 of file ectest\&.c\&.
.SS "#define TIMING_RAND_PT   1"

.PP
Definition at line 114 of file ectest\&.c\&.
.SS "#define TIMING_SIMUL   2"

.PP
Definition at line 115 of file ectest\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int main (int argc, char * argv[])"

.PP
Definition at line 1832 of file ectest\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

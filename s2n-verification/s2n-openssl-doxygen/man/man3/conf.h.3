.TH "s2n/libcrypto-root/include/openssl/conf.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-root/include/openssl/conf.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/bio\&.h>\fP
.br
\fC#include <openssl/lhash\&.h>\fP
.br
\fC#include <openssl/stack\&.h>\fP
.br
\fC#include <openssl/safestack\&.h>\fP
.br
\fC#include <openssl/e_os2\&.h>\fP
.br
\fC#include <openssl/ossl_typ\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBCONF_VALUE\fP"
.br
.ti -1c
.RI "struct \fBconf_method_st\fP"
.br
.ti -1c
.RI "struct \fBconf_st\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCONF_MFLAGS_IGNORE_ERRORS\fP   0x1"
.br
.ti -1c
.RI "#define \fBCONF_MFLAGS_IGNORE_RETURN_CODES\fP   0x2"
.br
.ti -1c
.RI "#define \fBCONF_MFLAGS_SILENT\fP   0x4"
.br
.ti -1c
.RI "#define \fBCONF_MFLAGS_NO_DSO\fP   0x8"
.br
.ti -1c
.RI "#define \fBCONF_MFLAGS_IGNORE_MISSING_FILE\fP   0x10"
.br
.ti -1c
.RI "#define \fBCONF_MFLAGS_DEFAULT_SECTION\fP   0x20"
.br
.ti -1c
.RI "#define \fBNCONF_get_number\fP(\fBc\fP,  g,  n,  r)   \fBNCONF_get_number_e\fP(\fBc\fP,g,n,r)"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_DUMP_FP\fP   104"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_LOAD\fP   100"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_LOAD_BIO\fP   102"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_LOAD_FP\fP   103"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_MODULES_LOAD\fP   116"
.br
.ti -1c
.RI "#define \fBCONF_F_CONF_PARSE_LIST\fP   119"
.br
.ti -1c
.RI "#define \fBCONF_F_DEF_LOAD\fP   120"
.br
.ti -1c
.RI "#define \fBCONF_F_DEF_LOAD_BIO\fP   121"
.br
.ti -1c
.RI "#define \fBCONF_F_MODULE_INIT\fP   115"
.br
.ti -1c
.RI "#define \fBCONF_F_MODULE_LOAD_DSO\fP   117"
.br
.ti -1c
.RI "#define \fBCONF_F_MODULE_RUN\fP   118"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_DUMP_BIO\fP   105"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_DUMP_FP\fP   106"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_GET_NUMBER\fP   107"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_GET_NUMBER_E\fP   112"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_GET_SECTION\fP   108"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_GET_STRING\fP   109"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_LOAD\fP   113"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_LOAD_BIO\fP   110"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_LOAD_FP\fP   114"
.br
.ti -1c
.RI "#define \fBCONF_F_NCONF_NEW\fP   111"
.br
.ti -1c
.RI "#define \fBCONF_F_STR_COPY\fP   101"
.br
.ti -1c
.RI "#define \fBCONF_R_ERROR_LOADING_DSO\fP   110"
.br
.ti -1c
.RI "#define \fBCONF_R_LIST_CANNOT_BE_NULL\fP   115"
.br
.ti -1c
.RI "#define \fBCONF_R_MISSING_CLOSE_SQUARE_BRACKET\fP   100"
.br
.ti -1c
.RI "#define \fBCONF_R_MISSING_EQUAL_SIGN\fP   101"
.br
.ti -1c
.RI "#define \fBCONF_R_MISSING_FINISH_FUNCTION\fP   111"
.br
.ti -1c
.RI "#define \fBCONF_R_MISSING_INIT_FUNCTION\fP   112"
.br
.ti -1c
.RI "#define \fBCONF_R_MODULE_INITIALIZATION_ERROR\fP   109"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_CLOSE_BRACE\fP   102"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_CONF\fP   105"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE\fP   106"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_SECTION\fP   107"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_SUCH_FILE\fP   114"
.br
.ti -1c
.RI "#define \fBCONF_R_NO_VALUE\fP   108"
.br
.ti -1c
.RI "#define \fBCONF_R_UNABLE_TO_CREATE_NEW_SECTION\fP   103"
.br
.ti -1c
.RI "#define \fBCONF_R_UNKNOWN_MODULE_NAME\fP   113"
.br
.ti -1c
.RI "#define \fBCONF_R_VARIABLE_HAS_NO_VALUE\fP   104"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBconf_method_st\fP \fBCONF_METHOD\fP"
.br
.ti -1c
.RI "typedef struct \fBconf_imodule_st\fP \fBCONF_IMODULE\fP"
.br
.ti -1c
.RI "typedef struct \fBconf_module_st\fP \fBCONF_MODULE\fP"
.br
.ti -1c
.RI "typedef int \fBconf_init_func\fP(\fBCONF_IMODULE\fP *md, const \fBCONF\fP *cnf)"
.br
.ti -1c
.RI "typedef \fBvoid\fP \fBconf_finish_func\fP(\fBCONF_IMODULE\fP *md)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDECLARE_LHASH_OF\fP (\fBCONF_VALUE\fP)"
.br
.ti -1c
.RI "int \fBCONF_set_default_method\fP (\fBCONF_METHOD\fP *meth)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_set_nconf\fP (\fBCONF\fP *conf, \fBLHASH_OF\fP(\fBCONF_VALUE\fP)*\fBhash\fP)"
.br
.ti -1c
.RI "\fBLHASH_OF\fP (\fBCONF_VALUE\fP)*CONF_load(LHASH_OF(\fBCONF_VALUE\fP)*conf"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBCONF_VALUE\fP)*CONF_get_section(\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf"
.br
.ti -1c
.RI "char * \fBCONF_get_string\fP (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf, const char *group, const char *name)"
.br
.ti -1c
.RI "long \fBCONF_get_number\fP (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf, const char *group, const char *name)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_free\fP (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf)"
.br
.ti -1c
.RI "int \fBCONF_dump_fp\fP (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf, FILE *\fBout\fP)"
.br
.ti -1c
.RI "int \fBCONF_dump_bio\fP (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)*conf, \fBBIO\fP *\fBout\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOPENSSL_config\fP (const char *config_name)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOPENSSL_no_config\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBCONF\fP * \fBNCONF_new\fP (\fBCONF_METHOD\fP *meth)"
.br
.ti -1c
.RI "\fBCONF_METHOD\fP * \fBNCONF_default\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBCONF_METHOD\fP * \fBNCONF_WIN32\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBNCONF_free\fP (\fBCONF\fP *conf)"
.br
.ti -1c
.RI "\fBvoid\fP \fBNCONF_free_data\fP (\fBCONF\fP *conf)"
.br
.ti -1c
.RI "int \fBNCONF_load\fP (\fBCONF\fP *conf, const char *\fBfile\fP, long *\fBeline\fP)"
.br
.ti -1c
.RI "int \fBNCONF_load_fp\fP (\fBCONF\fP *conf, FILE *\fBfp\fP, long *\fBeline\fP)"
.br
.ti -1c
.RI "int \fBNCONF_load_bio\fP (\fBCONF\fP *conf, \fBBIO\fP *\fBbp\fP, long *\fBeline\fP)"
.br
.ti -1c
.RI "char * \fBNCONF_get_string\fP (const \fBCONF\fP *conf, const char *group, const char *name)"
.br
.ti -1c
.RI "int \fBNCONF_get_number_e\fP (const \fBCONF\fP *conf, const char *group, const char *name, long *result)"
.br
.ti -1c
.RI "int \fBNCONF_dump_fp\fP (const \fBCONF\fP *conf, FILE *\fBout\fP)"
.br
.ti -1c
.RI "int \fBNCONF_dump_bio\fP (const \fBCONF\fP *conf, \fBBIO\fP *\fBout\fP)"
.br
.ti -1c
.RI "int \fBCONF_modules_load\fP (const \fBCONF\fP *cnf, const char *appname, unsigned long \fBflags\fP)"
.br
.ti -1c
.RI "int \fBCONF_modules_load_file\fP (const char *\fBfilename\fP, const char *appname, unsigned long \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_modules_unload\fP (int all)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_modules_finish\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_modules_free\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBCONF_module_add\fP (const char *name, \fBconf_init_func\fP *ifunc, \fBconf_finish_func\fP *ffunc)"
.br
.ti -1c
.RI "const char * \fBCONF_imodule_get_name\fP (const \fBCONF_IMODULE\fP *md)"
.br
.ti -1c
.RI "const char * \fBCONF_imodule_get_value\fP (const \fBCONF_IMODULE\fP *md)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBCONF_imodule_get_usr_data\fP (const \fBCONF_IMODULE\fP *md)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_imodule_set_usr_data\fP (\fBCONF_IMODULE\fP *md, \fBvoid\fP *usr_data)"
.br
.ti -1c
.RI "\fBCONF_MODULE\fP * \fBCONF_imodule_get_module\fP (const \fBCONF_IMODULE\fP *md)"
.br
.ti -1c
.RI "unsigned long \fBCONF_imodule_get_flags\fP (const \fBCONF_IMODULE\fP *md)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_imodule_set_flags\fP (\fBCONF_IMODULE\fP *md, unsigned long \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBCONF_module_get_usr_data\fP (\fBCONF_MODULE\fP *pmod)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCONF_module_set_usr_data\fP (\fBCONF_MODULE\fP *pmod, \fBvoid\fP *usr_data)"
.br
.ti -1c
.RI "char * \fBCONF_get1_default_config_file\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBCONF_parse_list\fP (const char *list, int sep, int nospc, int(*list_cb)(const char *elem, int \fBlen\fP, \fBvoid\fP *usr), \fBvoid\fP *\fBarg\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOPENSSL_load_builtin_modules\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBERR_load_CONF_strings\fP (\fBvoid\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBfile\fP"
.br
.ti -1c
.RI "const char long * \fBeline\fP"
.br
.ti -1c
.RI "FILE * \fBfp\fP"
.br
.ti -1c
.RI "\fBBIO\fP * \fBbp\fP"
.br
.ti -1c
.RI "const char * \fBsection\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CONF_F_CONF_DUMP_FP   104"

.PP
Definition at line 223 of file conf\&.h\&.
.SS "#define CONF_F_CONF_LOAD   100"

.PP
Definition at line 224 of file conf\&.h\&.
.SS "#define CONF_F_CONF_LOAD_BIO   102"

.PP
Definition at line 225 of file conf\&.h\&.
.SS "#define CONF_F_CONF_LOAD_FP   103"

.PP
Definition at line 226 of file conf\&.h\&.
.SS "#define CONF_F_CONF_MODULES_LOAD   116"

.PP
Definition at line 227 of file conf\&.h\&.
.SS "#define CONF_F_CONF_PARSE_LIST   119"

.PP
Definition at line 228 of file conf\&.h\&.
.SS "#define CONF_F_DEF_LOAD   120"

.PP
Definition at line 229 of file conf\&.h\&.
.SS "#define CONF_F_DEF_LOAD_BIO   121"

.PP
Definition at line 230 of file conf\&.h\&.
.SS "#define CONF_F_MODULE_INIT   115"

.PP
Definition at line 231 of file conf\&.h\&.
.SS "#define CONF_F_MODULE_LOAD_DSO   117"

.PP
Definition at line 232 of file conf\&.h\&.
.SS "#define CONF_F_MODULE_RUN   118"

.PP
Definition at line 233 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_DUMP_BIO   105"

.PP
Definition at line 234 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_DUMP_FP   106"

.PP
Definition at line 235 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_GET_NUMBER   107"

.PP
Definition at line 236 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_GET_NUMBER_E   112"

.PP
Definition at line 237 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_GET_SECTION   108"

.PP
Definition at line 238 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_GET_STRING   109"

.PP
Definition at line 239 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_LOAD   113"

.PP
Definition at line 240 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_LOAD_BIO   110"

.PP
Definition at line 241 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_LOAD_FP   114"

.PP
Definition at line 242 of file conf\&.h\&.
.SS "#define CONF_F_NCONF_NEW   111"

.PP
Definition at line 243 of file conf\&.h\&.
.SS "#define CONF_F_STR_COPY   101"

.PP
Definition at line 244 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_DEFAULT_SECTION   0x20"

.PP
Definition at line 117 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_IGNORE_ERRORS   0x1"

.PP
Definition at line 112 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_IGNORE_MISSING_FILE   0x10"

.PP
Definition at line 116 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_IGNORE_RETURN_CODES   0x2"

.PP
Definition at line 113 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_NO_DSO   0x8"

.PP
Definition at line 115 of file conf\&.h\&.
.SS "#define CONF_MFLAGS_SILENT   0x4"

.PP
Definition at line 114 of file conf\&.h\&.
.SS "#define CONF_R_ERROR_LOADING_DSO   110"

.PP
Definition at line 247 of file conf\&.h\&.
.SS "#define CONF_R_LIST_CANNOT_BE_NULL   115"

.PP
Definition at line 248 of file conf\&.h\&.
.SS "#define CONF_R_MISSING_CLOSE_SQUARE_BRACKET   100"

.PP
Definition at line 249 of file conf\&.h\&.
.SS "#define CONF_R_MISSING_EQUAL_SIGN   101"

.PP
Definition at line 250 of file conf\&.h\&.
.SS "#define CONF_R_MISSING_FINISH_FUNCTION   111"

.PP
Definition at line 251 of file conf\&.h\&.
.SS "#define CONF_R_MISSING_INIT_FUNCTION   112"

.PP
Definition at line 252 of file conf\&.h\&.
.SS "#define CONF_R_MODULE_INITIALIZATION_ERROR   109"

.PP
Definition at line 253 of file conf\&.h\&.
.SS "#define CONF_R_NO_CLOSE_BRACE   102"

.PP
Definition at line 254 of file conf\&.h\&.
.SS "#define CONF_R_NO_CONF   105"

.PP
Definition at line 255 of file conf\&.h\&.
.SS "#define CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE   106"

.PP
Definition at line 256 of file conf\&.h\&.
.SS "#define CONF_R_NO_SECTION   107"

.PP
Definition at line 257 of file conf\&.h\&.
.SS "#define CONF_R_NO_SUCH_FILE   114"

.PP
Definition at line 258 of file conf\&.h\&.
.SS "#define CONF_R_NO_VALUE   108"

.PP
Definition at line 259 of file conf\&.h\&.
.SS "#define CONF_R_UNABLE_TO_CREATE_NEW_SECTION   103"

.PP
Definition at line 260 of file conf\&.h\&.
.SS "#define CONF_R_UNKNOWN_MODULE_NAME   113"

.PP
Definition at line 261 of file conf\&.h\&.
.SS "#define CONF_R_VARIABLE_HAS_NO_VALUE   104"

.PP
Definition at line 262 of file conf\&.h\&.
.SS "#define NCONF_get_number(\fBc\fP, g, n, r)   \fBNCONF_get_number_e\fP(\fBc\fP,g,n,r)"

.PP
Definition at line 180 of file conf\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP conf_finish_func(\fBCONF_IMODULE\fP *md)"

.PP
Definition at line 110 of file conf\&.h\&.
.SS "typedef struct \fBconf_imodule_st\fP \fBCONF_IMODULE\fP"

.PP
Definition at line 102 of file conf\&.h\&.
.SS "typedef int conf_init_func(\fBCONF_IMODULE\fP *md, const \fBCONF\fP *cnf)"

.PP
Definition at line 109 of file conf\&.h\&.
.SS "typedef struct \fBconf_method_st\fP \fBCONF_METHOD\fP"

.PP
Definition at line 85 of file conf\&.h\&.
.SS "typedef struct \fBconf_module_st\fP \fBCONF_MODULE\fP"

.PP
Definition at line 103 of file conf\&.h\&.
.SH "Function Documentation"
.PP 
.SS "int CONF_dump_bio (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)* conf, \fBBIO\fP * out)"

.PP
Definition at line 213 of file conf_lib\&.c\&.
.SS "int CONF_dump_fp (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)* conf, FILE * out)"

.PP
Definition at line 198 of file conf_lib\&.c\&.
.SS "\fBvoid\fP CONF_free (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)* conf)"

.PP
Definition at line 190 of file conf_lib\&.c\&.
.SS "char* CONF_get1_default_config_file (\fBvoid\fP)"

.PP
Definition at line 524 of file conf_mod\&.c\&.
.SS "long CONF_get_number (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)* conf, const char * group, const char * name)"

.PP
Definition at line 169 of file conf_lib\&.c\&.
.SS "char* CONF_get_string (\fBLHASH_OF\fP(\fBCONF_VALUE\fP)* conf, const char * group, const char * name)"

.PP
Definition at line 157 of file conf_lib\&.c\&.
.SS "unsigned long CONF_imodule_get_flags (const \fBCONF_IMODULE\fP * md)"

.PP
Definition at line 502 of file conf_mod\&.c\&.
.SS "\fBCONF_MODULE\fP* CONF_imodule_get_module (const \fBCONF_IMODULE\fP * md)"

.PP
Definition at line 497 of file conf_mod\&.c\&.
.SS "const char* CONF_imodule_get_name (const \fBCONF_IMODULE\fP * md)"

.PP
Definition at line 477 of file conf_mod\&.c\&.
.SS "\fBvoid\fP* CONF_imodule_get_usr_data (const \fBCONF_IMODULE\fP * md)"

.PP
Definition at line 487 of file conf_mod\&.c\&.
.SS "const char* CONF_imodule_get_value (const \fBCONF_IMODULE\fP * md)"

.PP
Definition at line 482 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_imodule_set_flags (\fBCONF_IMODULE\fP * md, unsigned long flags)"

.PP
Definition at line 507 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_imodule_set_usr_data (\fBCONF_IMODULE\fP * md, \fBvoid\fP * usr_data)"

.PP
Definition at line 492 of file conf_mod\&.c\&.
.SS "int CONF_module_add (const char * name, \fBconf_init_func\fP * ifunc, \fBconf_finish_func\fP * ffunc)"

.PP
Definition at line 460 of file conf_mod\&.c\&.
.SS "\fBvoid\fP* CONF_module_get_usr_data (\fBCONF_MODULE\fP * pmod)"

.PP
Definition at line 512 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_module_set_usr_data (\fBCONF_MODULE\fP * pmod, \fBvoid\fP * usr_data)"

.PP
Definition at line 517 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_modules_finish (\fBvoid\fP)"

.PP
Definition at line 435 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_modules_free (\fBvoid\fP)"

.PP
Definition at line 469 of file conf_mod\&.c\&.
.SS "int CONF_modules_load (const \fBCONF\fP * cnf, const char * appname, unsigned long flags)"

.SS "int CONF_modules_load_file (const char * filename, const char * appname, unsigned long flags)"

.PP
Definition at line 162 of file conf_mod\&.c\&.
.SS "\fBvoid\fP CONF_modules_unload (int all)"

.PP
Definition at line 403 of file conf_mod\&.c\&.
.SS "int CONF_parse_list (const char * list, int sep, int nospc, int(*)(const char *elem, int \fBlen\fP, \fBvoid\fP *usr) list_cb, \fBvoid\fP * arg)"

.PP
Definition at line 559 of file conf_mod\&.c\&.
.SS "int CONF_set_default_method (\fBCONF_METHOD\fP * meth)"

.PP
Definition at line 87 of file conf_lib\&.c\&.
.SS "\fBvoid\fP CONF_set_nconf (\fBCONF\fP * conf, \fBLHASH_OF\fP(\fBCONF_VALUE\fP)* hash)"

.PP
Definition at line 73 of file conf_lib\&.c\&.
.SS "DECLARE_LHASH_OF (\fBCONF_VALUE\fP)"

.SS "\fBvoid\fP ERR_load_CONF_strings (\fBvoid\fP)"

.PP
Definition at line 124 of file conf_err\&.c\&.
.SS "LHASH_OF (\fBCONF_VALUE\fP)"

.SS "\fBCONF_METHOD\fP* NCONF_default (\fBvoid\fP)"

.PP
Definition at line 119 of file conf_def\&.c\&.
.SS "int NCONF_dump_bio (const \fBCONF\fP * conf, \fBBIO\fP * out)"

.PP
Definition at line 367 of file conf_lib\&.c\&.
.SS "int NCONF_dump_fp (const \fBCONF\fP * conf, FILE * out)"

.PP
Definition at line 353 of file conf_lib\&.c\&.
.SS "\fBvoid\fP NCONF_free (\fBCONF\fP * conf)"

.PP
Definition at line 244 of file conf_lib\&.c\&.
.SS "\fBvoid\fP NCONF_free_data (\fBCONF\fP * conf)"

.PP
Definition at line 251 of file conf_lib\&.c\&.
.SS "int NCONF_get_number_e (const \fBCONF\fP * conf, const char * group, const char * name, long * result)"

.PP
Definition at line 329 of file conf_lib\&.c\&.
.SS "char* NCONF_get_string (const \fBCONF\fP * conf, const char * group, const char * name)"

.PP
Definition at line 308 of file conf_lib\&.c\&.
.SS "int NCONF_load (\fBCONF\fP * conf, const char * file, long * eline)"

.PP
Definition at line 258 of file conf_lib\&.c\&.
.SS "int NCONF_load_bio (\fBCONF\fP * conf, \fBBIO\fP * bp, long * eline)"

.PP
Definition at line 283 of file conf_lib\&.c\&.
.SS "int NCONF_load_fp (\fBCONF\fP * conf, FILE * fp, long * eline)"

.PP
Definition at line 269 of file conf_lib\&.c\&.
.SS "\fBCONF\fP* NCONF_new (\fBCONF_METHOD\fP * meth)"

.PP
Definition at line 228 of file conf_lib\&.c\&.
.SS "\fBCONF_METHOD\fP* NCONF_WIN32 (\fBvoid\fP)"

.PP
Definition at line 124 of file conf_def\&.c\&.
.SS "\fBvoid\fP OPENSSL_config (const char * config_name)"

.PP
Definition at line 79 of file conf_sap\&.c\&.
.SS "\fBvoid\fP OPENSSL_load_builtin_modules (\fBvoid\fP)"

.PP
Definition at line 73 of file conf_mall\&.c\&.
.SS "\fBvoid\fP OPENSSL_no_config (\fBvoid\fP)"

.PP
Definition at line 96 of file conf_sap\&.c\&.
.SS "STACK_OF (\fBCONF_VALUE\fP)"

.SH "Variable Documentation"
.PP 
.SS "\fBBIO\fP* bp"

.PP
Definition at line 127 of file conf\&.h\&.
.SS "\fBBIO\fP long* eline"

.PP
Definition at line 121 of file conf\&.h\&.
.SS "const char* file"

.PP
Definition at line 121 of file conf\&.h\&.
.SS "FILE* fp"

.PP
Definition at line 124 of file conf\&.h\&.
.SS "const char* section"

.PP
Definition at line 130 of file conf\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

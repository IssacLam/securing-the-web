.TH "s2n/libcrypto-build/openssl/demos/tunala/tunala.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/demos/tunala/tunala.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'config\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <netdb\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include <openssl/engine\&.h>\fP
.br
\fC#include <openssl/ssl\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fB_buffer_t\fP"
.br
.ti -1c
.RI "struct \fB_state_machine_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_DATA_SIZE\fP   16384"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB_buffer_t\fP \fBbuffer_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_state_machine_t\fP \fBstate_machine_t\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBsm_buffer_t\fP { \fBSM_CLEAN_IN\fP, \fBSM_CLEAN_OUT\fP, \fBSM_DIRTY_IN\fP, \fBSM_DIRTY_OUT\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBbuffer_init\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuffer_close\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "unsigned int \fBbuffer_used\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "unsigned int \fBbuffer_unused\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "int \fBbuffer_full\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "int \fBbuffer_notfull\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "int \fBbuffer_empty\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "int \fBbuffer_notempty\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "unsigned long \fBbuffer_total_in\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "unsigned long \fBbuffer_total_out\fP (\fBbuffer_t\fP *buf)"
.br
.ti -1c
.RI "int \fBbuffer_from_fd\fP (\fBbuffer_t\fP *buf, int fd)"
.br
.ti -1c
.RI "int \fBbuffer_to_fd\fP (\fBbuffer_t\fP *buf, int fd)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuffer_from_SSL\fP (\fBbuffer_t\fP *buf, \fBSSL\fP *\fBssl\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuffer_to_SSL\fP (\fBbuffer_t\fP *buf, \fBSSL\fP *\fBssl\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuffer_from_BIO\fP (\fBbuffer_t\fP *buf, \fBBIO\fP *bio)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuffer_to_BIO\fP (\fBbuffer_t\fP *buf, \fBBIO\fP *bio)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcb_ssl_info\fP (const \fBSSL\fP *s, int where, int ret)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcb_ssl_info_set_output\fP (FILE *\fBfp\fP)"
.br
.ti -1c
.RI "int \fBcb_ssl_verify\fP (int ok, \fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcb_ssl_verify_set_output\fP (FILE *\fBfp\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcb_ssl_verify_set_depth\fP (unsigned int \fBverify_depth\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcb_ssl_verify_set_level\fP (unsigned int level)"
.br
.ti -1c
.RI "\fBRSA\fP * \fBcb_generate_tmp_rsa\fP (\fBSSL\fP *s, int is_export, int keylength)"
.br
.ti -1c
.RI "\fBvoid\fP \fBstate_machine_init\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "\fBvoid\fP \fBstate_machine_close\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "\fBbuffer_t\fP * \fBstate_machine_get_buffer\fP (\fBstate_machine_t\fP *machine, \fBsm_buffer_t\fP \fBtype\fP)"
.br
.ti -1c
.RI "\fBSSL\fP * \fBstate_machine_get_SSL\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "int \fBstate_machine_set_SSL\fP (\fBstate_machine_t\fP *machine, \fBSSL\fP *\fBssl\fP, int is_server)"
.br
.ti -1c
.RI "int \fBstate_machine_churn\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "int \fBstate_machine_close_clean\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "int \fBstate_machine_close_dirty\fP (\fBstate_machine_t\fP *machine)"
.br
.ti -1c
.RI "int \fBip_initialise\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBip_create_listener_split\fP (const char *ip, unsigned short port)"
.br
.ti -1c
.RI "int \fBip_create_connection_split\fP (const char *ip, unsigned short port)"
.br
.ti -1c
.RI "int \fBip_create_listener\fP (const char *address)"
.br
.ti -1c
.RI "int \fBip_create_connection\fP (const char *address)"
.br
.ti -1c
.RI "int \fBip_parse_address\fP (const char *address, const char **parsed_ip, unsigned short *port, int accept_all_ip)"
.br
.ti -1c
.RI "int \fBip_accept_connection\fP (int listen_fd)"
.br
.ti -1c
.RI "int \fBint_strtoul\fP (const char *str, unsigned long *val)"
.br
.ti -1c
.RI "char * \fBint_strstr\fP (const char *haystack, const char *needle)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX_DATA_SIZE   16384"

.PP
Definition at line 87 of file tunala\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_buffer_t\fP  \fBbuffer_t\fP"

.SS "typedef struct \fB_state_machine_t\fP  \fBstate_machine_t\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBsm_buffer_t\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISM_CLEAN_IN \fP\fP
.TP
\fB\fISM_CLEAN_OUT \fP\fP
.TP
\fB\fISM_DIRTY_IN \fP\fP
.TP
\fB\fISM_DIRTY_OUT \fP\fP
.PP
Definition at line 185 of file tunala\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP buffer_close (\fBbuffer_t\fP * buf)"

.PP
Definition at line 11 of file buffer\&.c\&.
.SS "int buffer_empty (\fBbuffer_t\fP * buf)"

.PP
Definition at line 38 of file buffer\&.c\&.
.SS "\fBvoid\fP buffer_from_BIO (\fBbuffer_t\fP * buf, \fBBIO\fP * bio)"

.PP
Definition at line 210 of file buffer\&.c\&.
.SS "int buffer_from_fd (\fBbuffer_t\fP * buf, int fd)"

.PP
Definition at line 113 of file buffer\&.c\&.
.SS "\fBvoid\fP buffer_from_SSL (\fBbuffer_t\fP * buf, \fBSSL\fP * ssl)"

.PP
Definition at line 182 of file buffer\&.c\&.
.SS "int buffer_full (\fBbuffer_t\fP * buf)"

.PP
Definition at line 28 of file buffer\&.c\&.
.SS "\fBvoid\fP buffer_init (\fBbuffer_t\fP * buf)"

.PP
Definition at line 5 of file buffer\&.c\&.
.SS "int buffer_notempty (\fBbuffer_t\fP * buf)"

.PP
Definition at line 43 of file buffer\&.c\&.
.SS "int buffer_notfull (\fBbuffer_t\fP * buf)"

.PP
Definition at line 33 of file buffer\&.c\&.
.SS "\fBvoid\fP buffer_to_BIO (\fBbuffer_t\fP * buf, \fBBIO\fP * bio)"

.PP
Definition at line 222 of file buffer\&.c\&.
.SS "int buffer_to_fd (\fBbuffer_t\fP * buf, int fd)"

.PP
Definition at line 127 of file buffer\&.c\&.
.SS "\fBvoid\fP buffer_to_SSL (\fBbuffer_t\fP * buf, \fBSSL\fP * ssl)"

.PP
Definition at line 196 of file buffer\&.c\&.
.SS "unsigned long buffer_total_in (\fBbuffer_t\fP * buf)"

.PP
Definition at line 48 of file buffer\&.c\&.
.SS "unsigned long buffer_total_out (\fBbuffer_t\fP * buf)"

.PP
Definition at line 53 of file buffer\&.c\&.
.SS "unsigned int buffer_unused (\fBbuffer_t\fP * buf)"

.PP
Definition at line 23 of file buffer\&.c\&.
.SS "unsigned int buffer_used (\fBbuffer_t\fP * buf)"

.PP
Definition at line 18 of file buffer\&.c\&.
.SS "\fBRSA\fP* cb_generate_tmp_rsa (\fBSSL\fP * s, int is_export, int keylength)"

.PP
Definition at line 142 of file cb\&.c\&.
.SS "\fBvoid\fP cb_ssl_info (const \fBSSL\fP * s, int where, int ret)"

.PP
Definition at line 23 of file cb\&.c\&.
.SS "\fBvoid\fP cb_ssl_info_set_output (FILE * fp)"

.PP
Definition at line 56 of file cb\&.c\&.
.SS "int cb_ssl_verify (int ok, \fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 71 of file cb\&.c\&.
.SS "\fBvoid\fP cb_ssl_verify_set_depth (unsigned int verify_depth)"

.PP
Definition at line 131 of file cb\&.c\&.
.SS "\fBvoid\fP cb_ssl_verify_set_level (unsigned int level)"

.PP
Definition at line 136 of file cb\&.c\&.
.SS "\fBvoid\fP cb_ssl_verify_set_output (FILE * fp)"

.PP
Definition at line 126 of file cb\&.c\&.
.SS "char* int_strstr (const char * haystack, const char * needle)"

.PP
Definition at line 43 of file breakage\&.c\&.
.SS "int int_strtoul (const char * str, unsigned long * val)"

.PP
Definition at line 3 of file breakage\&.c\&.
.SS "int ip_accept_connection (int listen_fd)"

.PP
Definition at line 144 of file ip\&.c\&.
.SS "int ip_create_connection (const char * address)"

.PP
Definition at line 134 of file ip\&.c\&.
.SS "int ip_create_connection_split (const char * ip, unsigned short port)"

.PP
Definition at line 52 of file ip\&.c\&.
.SS "int ip_create_listener (const char * address)"

.PP
Definition at line 124 of file ip\&.c\&.
.SS "int ip_create_listener_split (const char * ip, unsigned short port)"

.PP
Definition at line 21 of file ip\&.c\&.
.SS "int ip_initialise (\fBvoid\fP)"

.PP
Definition at line 9 of file ip\&.c\&.
.SS "int ip_parse_address (const char * address, const char ** parsed_ip, unsigned short * port, int accept_all_ip)"

.PP
Definition at line 81 of file ip\&.c\&.
.SS "int state_machine_churn (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 87 of file sm\&.c\&.
.SS "\fBvoid\fP state_machine_close (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 15 of file sm\&.c\&.
.SS "int state_machine_close_clean (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 127 of file sm\&.c\&.
.SS "int state_machine_close_dirty (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 150 of file sm\&.c\&.
.SS "\fBbuffer_t\fP* state_machine_get_buffer (\fBstate_machine_t\fP * machine, \fBsm_buffer_t\fP type)"

.PP
Definition at line 36 of file sm\&.c\&.
.SS "\fBSSL\fP* state_machine_get_SSL (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 56 of file sm\&.c\&.
.SS "\fBvoid\fP state_machine_init (\fBstate_machine_t\fP * machine)"

.PP
Definition at line 5 of file sm\&.c\&.
.SS "int state_machine_set_SSL (\fBstate_machine_t\fP * machine, \fBSSL\fP * ssl, int is_server)"

.PP
Definition at line 61 of file sm\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

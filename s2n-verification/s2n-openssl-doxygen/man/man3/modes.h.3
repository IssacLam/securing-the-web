.TH "s2n/libcrypto-root/include/openssl/modes.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-root/include/openssl/modes.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stddef\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP(* \fBblock128_f\fP) (const unsigned char \fBin\fP[16], unsigned char \fBout\fP[16], const \fBvoid\fP *\fBkey\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBcbc128_f\fP) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int \fBenc\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBctr128_f\fP) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t blocks, const \fBvoid\fP *\fBkey\fP, const unsigned char ivec[16])"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBccm128_f\fP) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t blocks, const \fBvoid\fP *\fBkey\fP, const unsigned char ivec[16], unsigned char cmac[16])"
.br
.ti -1c
.RI "typedef struct \fBgcm128_context\fP \fBGCM128_CONTEXT\fP"
.br
.ti -1c
.RI "typedef struct \fBccm128_context\fP \fBCCM128_CONTEXT\fP"
.br
.ti -1c
.RI "typedef struct \fBxts128_context\fP \fBXTS128_CONTEXT\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_cbc128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_cbc128_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_ctr128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], unsigned char ecount_buf[16], unsigned int *\fBnum\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_ctr128_encrypt_ctr32\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], unsigned char ecount_buf[16], unsigned int *\fBnum\fP, \fBctr128_f\fP ctr)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_ofb128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int *\fBnum\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_cfb128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int *\fBnum\fP, int \fBenc\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_cfb128_8_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int *\fBnum\fP, int \fBenc\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_cfb128_1_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBbits\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int *\fBnum\fP, int \fBenc\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_encrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_decrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_encrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_decrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "\fBGCM128_CONTEXT\fP * \fBCRYPTO_gcm128_new\fP (\fBvoid\fP *\fBkey\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_gcm128_init\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, \fBvoid\fP *\fBkey\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_gcm128_setiv\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *iv, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_aad\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *aad, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_encrypt\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_decrypt\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_encrypt_ctr32\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, \fBctr128_f\fP stream)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_decrypt_ctr32\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, \fBctr128_f\fP stream)"
.br
.ti -1c
.RI "int \fBCRYPTO_gcm128_finish\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *tag, size_t \fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_gcm128_tag\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP, unsigned char *tag, size_t \fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_gcm128_release\fP (\fBGCM128_CONTEXT\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_ccm128_init\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, unsigned int M, unsigned int L, \fBvoid\fP *\fBkey\fP, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "int \fBCRYPTO_ccm128_setiv\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *nonce, size_t nlen, size_t mlen)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCRYPTO_ccm128_aad\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *aad, size_t alen)"
.br
.ti -1c
.RI "int \fBCRYPTO_ccm128_encrypt\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *inp, unsigned char *\fBout\fP, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_ccm128_decrypt\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *inp, unsigned char *\fBout\fP, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_ccm128_encrypt_ccm64\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *inp, unsigned char *\fBout\fP, size_t \fBlen\fP, \fBccm128_f\fP stream)"
.br
.ti -1c
.RI "int \fBCRYPTO_ccm128_decrypt_ccm64\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, const unsigned char *inp, unsigned char *\fBout\fP, size_t \fBlen\fP, \fBccm128_f\fP stream)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_ccm128_tag\fP (\fBCCM128_CONTEXT\fP *\fBctx\fP, unsigned char *tag, size_t \fBlen\fP)"
.br
.ti -1c
.RI "int \fBCRYPTO_xts128_encrypt\fP (const \fBXTS128_CONTEXT\fP *\fBctx\fP, const unsigned char iv[16], const unsigned char *inp, unsigned char *\fBout\fP, size_t \fBlen\fP, int \fBenc\fP)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_128_wrap\fP (\fBvoid\fP *\fBkey\fP, const unsigned char *iv, unsigned char *\fBout\fP, const unsigned char *\fBin\fP, size_t inlen, \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_128_unwrap\fP (\fBvoid\fP *\fBkey\fP, const unsigned char *iv, unsigned char *\fBout\fP, const unsigned char *\fBin\fP, size_t inlen, \fBblock128_f\fP block)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP(* block128_f) (const unsigned char \fBin\fP[16], unsigned char \fBout\fP[16], const \fBvoid\fP *\fBkey\fP)"

.PP
Definition at line 13 of file modes\&.h\&.
.SS "typedef \fBvoid\fP(* cbc128_f) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], int \fBenc\fP)"

.PP
Definition at line 16 of file modes\&.h\&.
.SS "typedef struct \fBccm128_context\fP \fBCCM128_CONTEXT\fP"

.PP
Definition at line 123 of file modes\&.h\&.
.SS "typedef \fBvoid\fP(* ccm128_f) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t blocks, const \fBvoid\fP *\fBkey\fP, const unsigned char ivec[16], unsigned char cmac[16])"

.PP
Definition at line 24 of file modes\&.h\&.
.SS "typedef \fBvoid\fP(* ctr128_f) (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t blocks, const \fBvoid\fP *\fBkey\fP, const unsigned char ivec[16])"

.PP
Definition at line 20 of file modes\&.h\&.
.SS "typedef struct \fBgcm128_context\fP \fBGCM128_CONTEXT\fP"

.PP
Definition at line 98 of file modes\&.h\&.
.SS "typedef struct \fBxts128_context\fP \fBXTS128_CONTEXT\fP"

.PP
Definition at line 144 of file modes\&.h\&.
.SH "Function Documentation"
.PP 
.SS "size_t CRYPTO_128_unwrap (\fBvoid\fP * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, size_t inlen, \fBblock128_f\fP block)"

.PP
Definition at line 103 of file wrap128\&.c\&.
.SS "size_t CRYPTO_128_wrap (\fBvoid\fP * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, size_t inlen, \fBblock128_f\fP block)"

.PP
Definition at line 68 of file wrap128\&.c\&.
.SS "\fBvoid\fP CRYPTO_cbc128_decrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 116 of file cbc128\&.c\&.
.SS "\fBvoid\fP CRYPTO_cbc128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 66 of file cbc128\&.c\&.
.SS "\fBvoid\fP CRYPTO_ccm128_aad (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * aad, size_t alen)"

.PP
Definition at line 107 of file ccm128\&.c\&.
.SS "int CRYPTO_ccm128_decrypt (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * inp, unsigned char * out, size_t len)"

.PP
Definition at line 260 of file ccm128\&.c\&.
.SS "int CRYPTO_ccm128_decrypt_ccm64 (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * inp, unsigned char * out, size_t len, \fBccm128_f\fP stream)"

.PP
Definition at line 411 of file ccm128\&.c\&.
.SS "int CRYPTO_ccm128_encrypt (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * inp, unsigned char * out, size_t len)"

.PP
Definition at line 176 of file ccm128\&.c\&.
.SS "int CRYPTO_ccm128_encrypt_ccm64 (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * inp, unsigned char * out, size_t len, \fBccm128_f\fP stream)"

.PP
Definition at line 347 of file ccm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_ccm128_init (\fBCCM128_CONTEXT\fP * ctx, unsigned int M, unsigned int L, \fBvoid\fP * key, \fBblock128_f\fP block)"

.PP
Definition at line 65 of file ccm128\&.c\&.
.SS "int CRYPTO_ccm128_setiv (\fBCCM128_CONTEXT\fP * ctx, const unsigned char * nonce, size_t nlen, size_t mlen)"

.PP
Definition at line 79 of file ccm128\&.c\&.
.SS "size_t CRYPTO_ccm128_tag (\fBCCM128_CONTEXT\fP * ctx, unsigned char * tag, size_t len)"

.PP
Definition at line 469 of file ccm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_cfb128_1_encrypt (const unsigned char * in, unsigned char * out, size_t bits, const \fBvoid\fP * key, unsigned char ivec[16], int * num, int enc, \fBblock128_f\fP block)"

.PP
Definition at line 223 of file cfb128\&.c\&.
.SS "\fBvoid\fP CRYPTO_cfb128_8_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBvoid\fP * key, unsigned char ivec[16], int * num, int enc, \fBblock128_f\fP block)"

.PP
Definition at line 242 of file cfb128\&.c\&.
.SS "\fBvoid\fP CRYPTO_cfb128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], int * num, int enc, \fBblock128_f\fP block)"

.PP
Definition at line 67 of file cfb128\&.c\&.
.SS "\fBvoid\fP CRYPTO_ctr128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], unsigned char ecount_buf[16], unsigned int * num, \fBblock128_f\fP block)"

.PP
Definition at line 119 of file ctr128\&.c\&.
.SS "\fBvoid\fP CRYPTO_ctr128_encrypt_ctr32 (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], unsigned char ecount_buf[16], unsigned int * num, \fBctr128_f\fP ctr)"

.PP
Definition at line 198 of file ctr128\&.c\&.
.SS "size_t CRYPTO_cts128_decrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 265 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_decrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 171 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 96 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_encrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 32 of file cts128\&.c\&.
.SS "int CRYPTO_gcm128_aad (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * aad, size_t len)"

.PP
Definition at line 975 of file gcm128\&.c\&.
.SS "int CRYPTO_gcm128_decrypt (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * in, unsigned char * out, size_t len)"

.PP
Definition at line 1223 of file gcm128\&.c\&.
.SS "int CRYPTO_gcm128_decrypt_ctr32 (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * in, unsigned char * out, size_t len, \fBctr128_f\fP stream)"

.PP
Definition at line 1537 of file gcm128\&.c\&.
.SS "int CRYPTO_gcm128_encrypt (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * in, unsigned char * out, size_t len)"

.PP
Definition at line 1036 of file gcm128\&.c\&.
.SS "int CRYPTO_gcm128_encrypt_ctr32 (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * in, unsigned char * out, size_t len, \fBctr128_f\fP stream)"

.PP
Definition at line 1415 of file gcm128\&.c\&.
.SS "int CRYPTO_gcm128_finish (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * tag, size_t len)"

.PP
Definition at line 1666 of file gcm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_gcm128_init (\fBGCM128_CONTEXT\fP * ctx, \fBvoid\fP * key, \fBblock128_f\fP block)"

.PP
Definition at line 772 of file gcm128\&.c\&.
.SS "\fBGCM128_CONTEXT\fP* CRYPTO_gcm128_new (\fBvoid\fP * key, \fBblock128_f\fP block)"

.PP
Definition at line 1719 of file gcm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_gcm128_release (\fBGCM128_CONTEXT\fP * ctx)"

.PP
Definition at line 1729 of file gcm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_gcm128_setiv (\fBGCM128_CONTEXT\fP * ctx, const unsigned char * iv, size_t len)"

.PP
Definition at line 891 of file gcm128\&.c\&.
.SS "\fBvoid\fP CRYPTO_gcm128_tag (\fBGCM128_CONTEXT\fP * ctx, unsigned char * tag, size_t len)"

.PP
Definition at line 1712 of file gcm128\&.c\&.
.SS "size_t CRYPTO_nistcts128_decrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 307 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_decrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 215 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 134 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_encrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 63 of file cts128\&.c\&.
.SS "\fBvoid\fP CRYPTO_ofb128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], int * num, \fBblock128_f\fP block)"

.PP
Definition at line 67 of file ofb128\&.c\&.
.SS "int CRYPTO_xts128_encrypt (const \fBXTS128_CONTEXT\fP * ctx, const unsigned char iv[16], const unsigned char * inp, unsigned char * out, size_t len, int enc)"

.PP
Definition at line 61 of file xts128\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

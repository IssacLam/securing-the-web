.TH "s2n/libcrypto-build/openssl/crypto/ec/ecp_nistp256.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/ec/ecp_nistp256.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include 'ec_lcl\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBNISTP256_PRE_COMP\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNLIMBS\fP   4"
.br
.ti -1c
.RI "#define \fBtwo105m41m9\fP   (((\fBlimb\fP)1) << 105) \- (((\fBlimb\fP)1) << 41) \- (((\fBlimb\fP)1) << 9)"
.br
.ti -1c
.RI "#define \fBtwo105\fP   (((\fBlimb\fP)1) << 105)"
.br
.ti -1c
.RI "#define \fBtwo105m41p9\fP   (((\fBlimb\fP)1) << 105) \- (((\fBlimb\fP)1) << 41) + (((\fBlimb\fP)1) << 9)"
.br
.ti -1c
.RI "#define \fBtwo107m43m11\fP   (((\fBlimb\fP)1) << 107) \- (((\fBlimb\fP)1) << 43) \- (((\fBlimb\fP)1) << 11)"
.br
.ti -1c
.RI "#define \fBtwo107\fP   (((\fBlimb\fP)1) << 107)"
.br
.ti -1c
.RI "#define \fBtwo107m43p11\fP   (((\fBlimb\fP)1) << 107) \- (((\fBlimb\fP)1) << 43) + (((\fBlimb\fP)1) << 11)"
.br
.ti -1c
.RI "#define \fBtwo64m0\fP   (((\fBlimb\fP)1) << 64) \- 1"
.br
.ti -1c
.RI "#define \fBtwo110p32m0\fP   (((\fBlimb\fP)1) << 110) + (((\fBlimb\fP)1) << 32) \- 1"
.br
.ti -1c
.RI "#define \fBtwo64m46\fP   (((\fBlimb\fP)1) << 64) \- (((\fBlimb\fP)1) << 46)"
.br
.ti -1c
.RI "#define \fBtwo64m32\fP   (((\fBlimb\fP)1) << 64) \- (((\fBlimb\fP)1) << 32)"
.br
.ti -1c
.RI "#define \fBtwo100m36m4\fP   (((\fBlimb\fP)1) << 100) \- (((\fBlimb\fP)1) << 36) \- (((\fBlimb\fP)1) << 4)"
.br
.ti -1c
.RI "#define \fBtwo100\fP   (((\fBlimb\fP)1) << 100)"
.br
.ti -1c
.RI "#define \fBtwo100m36p4\fP   (((\fBlimb\fP)1) << 100) \- (((\fBlimb\fP)1) << 36) + (((\fBlimb\fP)1) << 4)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBu8\fP"
.br
.ti -1c
.RI "typedef uint32_t \fBu32\fP"
.br
.ti -1c
.RI "typedef uint64_t \fBu64\fP"
.br
.ti -1c
.RI "typedef int64_t \fBs64\fP"
.br
.ti -1c
.RI "typedef \fBu8\fP \fBfelem_bytearray\fP[32]"
.br
.ti -1c
.RI "typedef uint128_t \fBlimb\fP"
.br
.ti -1c
.RI "typedef \fBlimb\fP \fBfelem\fP[\fBNLIMBS\fP]"
.br
.ti -1c
.RI "typedef \fBlimb\fP \fBlongfelem\fP[\fBNLIMBS\fP *2]"
.br
.ti -1c
.RI "typedef \fBu64\fP \fBsmallfelem\fP[\fBNLIMBS\fP]"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const \fBEC_METHOD\fP * \fBEC_GFp_nistp256_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_group_init\fP (\fBEC_GROUP\fP *group)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_group_set_curve\fP (\fBEC_GROUP\fP *group, const \fBBIGNUM\fP *\fBp\fP, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_point_get_affine_coordinates\fP (const \fBEC_GROUP\fP *group, const \fBEC_POINT\fP *point, \fBBIGNUM\fP *\fBx\fP, \fBBIGNUM\fP *y, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_points_mul\fP (const \fBEC_GROUP\fP *group, \fBEC_POINT\fP *r, const \fBBIGNUM\fP *scalar, size_t \fBnum\fP, const \fBEC_POINT\fP *points[], const \fBBIGNUM\fP *scalars[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_precompute_mult\fP (\fBEC_GROUP\fP *group, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp256_have_precompute_mult\fP (const \fBEC_GROUP\fP *group)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define NLIMBS   4"

.PP
Definition at line 112 of file ecp_nistp256\&.c\&.
.SS "#define two100   (((\fBlimb\fP)1) << 100)"

.PP
Definition at line 726 of file ecp_nistp256\&.c\&.
.SS "#define two100m36m4   (((\fBlimb\fP)1) << 100) \- (((\fBlimb\fP)1) << 36) \- (((\fBlimb\fP)1) << 4)"

.PP
Definition at line 725 of file ecp_nistp256\&.c\&.
.SS "#define two100m36p4   (((\fBlimb\fP)1) << 100) \- (((\fBlimb\fP)1) << 36) + (((\fBlimb\fP)1) << 4)"

.PP
Definition at line 727 of file ecp_nistp256\&.c\&.
.SS "#define two105   (((\fBlimb\fP)1) << 105)"

.PP
Definition at line 259 of file ecp_nistp256\&.c\&.
.SS "#define two105m41m9   (((\fBlimb\fP)1) << 105) \- (((\fBlimb\fP)1) << 41) \- (((\fBlimb\fP)1) << 9)"

.PP
Definition at line 258 of file ecp_nistp256\&.c\&.
.SS "#define two105m41p9   (((\fBlimb\fP)1) << 105) \- (((\fBlimb\fP)1) << 41) + (((\fBlimb\fP)1) << 9)"

.PP
Definition at line 260 of file ecp_nistp256\&.c\&.
.SS "#define two107   (((\fBlimb\fP)1) << 107)"

.PP
Definition at line 304 of file ecp_nistp256\&.c\&.
.SS "#define two107m43m11   (((\fBlimb\fP)1) << 107) \- (((\fBlimb\fP)1) << 43) \- (((\fBlimb\fP)1) << 11)"

.PP
Definition at line 303 of file ecp_nistp256\&.c\&.
.SS "#define two107m43p11   (((\fBlimb\fP)1) << 107) \- (((\fBlimb\fP)1) << 43) + (((\fBlimb\fP)1) << 11)"

.PP
Definition at line 305 of file ecp_nistp256\&.c\&.
.SS "#define two110p32m0   (((\fBlimb\fP)1) << 110) + (((\fBlimb\fP)1) << 32) \- 1"

.PP
Definition at line 375 of file ecp_nistp256\&.c\&.
.SS "#define two64m0   (((\fBlimb\fP)1) << 64) \- 1"

.PP
Definition at line 374 of file ecp_nistp256\&.c\&.
.SS "#define two64m32   (((\fBlimb\fP)1) << 64) \- (((\fBlimb\fP)1) << 32)"

.PP
Definition at line 377 of file ecp_nistp256\&.c\&.
.SS "#define two64m46   (((\fBlimb\fP)1) << 64) \- (((\fBlimb\fP)1) << 46)"

.PP
Definition at line 376 of file ecp_nistp256\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBlimb\fP felem[\fBNLIMBS\fP]"

.PP
Definition at line 115 of file ecp_nistp256\&.c\&.
.SS "typedef \fBu8\fP felem_bytearray[32]"

.PP
Definition at line 62 of file ecp_nistp256\&.c\&.
.SS "typedef uint128_t \fBlimb\fP"

.PP
Definition at line 114 of file ecp_nistp256\&.c\&.
.SS "typedef \fBlimb\fP longfelem[\fBNLIMBS\fP *2]"

.PP
Definition at line 116 of file ecp_nistp256\&.c\&.
.SS "typedef int64_t \fBs64\fP"

.PP
Definition at line 54 of file ecp_nistp256\&.c\&.
.SS "typedef \fBu64\fP smallfelem[\fBNLIMBS\fP]"

.PP
Definition at line 117 of file ecp_nistp256\&.c\&.
.SS "typedef uint32_t \fBu32\fP"

.PP
Definition at line 52 of file ecp_nistp256\&.c\&.
.SS "typedef uint64_t \fBu64\fP"

.PP
Definition at line 53 of file ecp_nistp256\&.c\&.
.SS "typedef uint8_t \fBu8\fP"

.PP
Definition at line 51 of file ecp_nistp256\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int ec_GFp_nistp256_group_init (\fBEC_GROUP\fP * group)"

.PP
Definition at line 1879 of file ecp_nistp256\&.c\&.
.SS "int ec_GFp_nistp256_group_set_curve (\fBEC_GROUP\fP * group, const \fBBIGNUM\fP * p, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1887 of file ecp_nistp256\&.c\&.
.SS "int ec_GFp_nistp256_have_precompute_mult (const \fBEC_GROUP\fP * group)"

.PP
Definition at line 2357 of file ecp_nistp256\&.c\&.
.SS "const \fBEC_METHOD\fP* EC_GFp_nistp256_method (\fBvoid\fP)"
Returns 64-bit optimized methods for nistp256 
.PP
\fBReturns:\fP
.RS 4
EC_METHOD object 
.RE
.PP

.PP
Definition at line 1768 of file ecp_nistp256\&.c\&.
.SS "int ec_GFp_nistp256_point_get_affine_coordinates (const \fBEC_GROUP\fP * group, const \fBEC_POINT\fP * point, \fBBIGNUM\fP * x, \fBBIGNUM\fP * y, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1924 of file ecp_nistp256\&.c\&.
.SS "int ec_GFp_nistp256_points_mul (const \fBEC_GROUP\fP * group, \fBEC_POINT\fP * r, const \fBBIGNUM\fP * scalar, size_t num, const \fBEC_POINT\fP * points[], const \fBBIGNUM\fP * scalars[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 2003 of file ecp_nistp256\&.c\&.
.SS "int ec_GFp_nistp256_precompute_mult (\fBEC_GROUP\fP * group, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 2214 of file ecp_nistp256\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

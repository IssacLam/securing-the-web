.TH "s2n/libcrypto-build/openssl/demos/spkigen.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/demos/spkigen.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include <openssl/asn1\&.h>\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/pem\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPEM_write_SPKI\fP(\fBfp\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBRSA_F4\fP   0x10001"
.br
.ti -1c
.RI "#define \fBEVP_PKEY_assign_RSA\fP(pkey,  rsa)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBSPKI_set_pubkey\fP (\fBNETSCAPE_SPKI\fP *\fBx\fP, \fBEVP_PKEY\fP *pkey)"
.br
.ti -1c
.RI "int \fBEVP_PKEY_assign\fP (\fBEVP_PKEY\fP *pkey, int \fBtype\fP, char *\fBkey\fP)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, argv)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define EVP_PKEY_assign_RSA(pkey, rsa)"
\fBValue:\fP
.PP
.nf
EVP_PKEY_assign((pkey),EVP_PKEY_RSA,\
                                        (char *)(rsa))
.fi
.PP
Definition at line 28 of file spkigen\&.c\&.
.SS "#define PEM_write_SPKI(\fBfp\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
PEM_ASN1_write((int (*)())i2d_NETSCAPE_SPKI,"SPKI",fp,\
                        (char *)x,NULL,NULL,0,NULL)
.fi
.PP
Definition at line 20 of file spkigen\&.c\&.
.SS "#define RSA_F4   0x10001"

.PP
Definition at line 27 of file spkigen\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int EVP_PKEY_assign (\fBEVP_PKEY\fP * pkey, int type, char * key)"

.PP
Definition at line 101 of file spkigen\&.c\&.
.SS "int main (int argc, argv)"

.PP
Definition at line 31 of file spkigen\&.c\&.
.SS "int SPKI_set_pubkey (\fBNETSCAPE_SPKI\fP * x, \fBEVP_PKEY\fP * pkey)"

.PP
Definition at line 125 of file spkigen\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

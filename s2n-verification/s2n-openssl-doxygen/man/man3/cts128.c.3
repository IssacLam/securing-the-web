.TH "s2n/libcrypto-build/openssl/crypto/modes/cts128.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/modes/cts128.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/crypto\&.h>\fP
.br
\fC#include 'modes_lcl\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNDEBUG\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "size_t \fBCRYPTO_cts128_encrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_encrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_decrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_decrypt_block\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBblock128_f\fP block)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_cts128_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.ti -1c
.RI "size_t \fBCRYPTO_nistcts128_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlen\fP, const \fBvoid\fP *\fBkey\fP, unsigned char ivec[16], \fBcbc128_f\fP cbc)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define NDEBUG"

.PP
Definition at line 14 of file cts128\&.c\&.
.SH "Function Documentation"
.PP 
.SS "size_t CRYPTO_cts128_decrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 265 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_decrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 171 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 96 of file cts128\&.c\&.
.SS "size_t CRYPTO_cts128_encrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 32 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_decrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 307 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_decrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 215 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_encrypt (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBcbc128_f\fP cbc)"

.PP
Definition at line 134 of file cts128\&.c\&.
.SS "size_t CRYPTO_nistcts128_encrypt_block (const unsigned char * in, unsigned char * out, size_t len, const \fBvoid\fP * key, unsigned char ivec[16], \fBblock128_f\fP block)"

.PP
Definition at line 63 of file cts128\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/libcrypto-build/openssl/crypto/evp/evp_enc.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/evp/evp_enc.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include <openssl/rand\&.h>\fP
.br
\fC#include <openssl/engine\&.h>\fP
.br
\fC#include 'evp_locl\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBM_do_cipher\fP(\fBctx\fP,  \fBout\fP,  \fBin\fP,  inl)   \fBctx\fP\->cipher\->do_cipher(\fBctx\fP, \fBout\fP, \fBin\fP, inl)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBEVP_CIPHER_CTX_init\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBEVP_CIPHER_CTX\fP * \fBEVP_CIPHER_CTX_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBEVP_CipherInit\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, const unsigned char *\fBkey\fP, const unsigned char *iv, int \fBenc\fP)"
.br
.ti -1c
.RI "int \fBEVP_CipherInit_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, \fBENGINE\fP *impl, const unsigned char *\fBkey\fP, const unsigned char *iv, int \fBenc\fP)"
.br
.ti -1c
.RI "int \fBEVP_CipherUpdate\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl, const unsigned char *\fBin\fP, int inl)"
.br
.ti -1c
.RI "int \fBEVP_CipherFinal_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "int \fBEVP_CipherFinal\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "int \fBEVP_EncryptInit\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, const unsigned char *\fBkey\fP, const unsigned char *iv)"
.br
.ti -1c
.RI "int \fBEVP_EncryptInit_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, \fBENGINE\fP *impl, const unsigned char *\fBkey\fP, const unsigned char *iv)"
.br
.ti -1c
.RI "int \fBEVP_DecryptInit\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, const unsigned char *\fBkey\fP, const unsigned char *iv)"
.br
.ti -1c
.RI "int \fBEVP_DecryptInit_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, const \fBEVP_CIPHER\fP *cipher, \fBENGINE\fP *impl, const unsigned char *\fBkey\fP, const unsigned char *iv)"
.br
.ti -1c
.RI "int \fBEVP_EncryptUpdate\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl, const unsigned char *\fBin\fP, int inl)"
.br
.ti -1c
.RI "int \fBEVP_EncryptFinal\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "int \fBEVP_EncryptFinal_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "int \fBEVP_DecryptUpdate\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl, const unsigned char *\fBin\fP, int inl)"
.br
.ti -1c
.RI "int \fBEVP_DecryptFinal\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "int \fBEVP_DecryptFinal_ex\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBout\fP, int *outl)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEVP_CIPHER_CTX_free\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_cleanup\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_set_key_length\fP (\fBEVP_CIPHER_CTX\fP *\fBc\fP, int keylen)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_set_padding\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, int pad)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_ctrl\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, int \fBtype\fP, int \fBarg\fP, \fBvoid\fP *\fBptr\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_rand_key\fP (\fBEVP_CIPHER_CTX\fP *\fBctx\fP, unsigned char *\fBkey\fP)"
.br
.ti -1c
.RI "int \fBEVP_CIPHER_CTX_copy\fP (\fBEVP_CIPHER_CTX\fP *\fBout\fP, const \fBEVP_CIPHER_CTX\fP *\fBin\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char \fBEVP_version\fP [] = 'EVP' OPENSSL_VERSION_PTEXT"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define M_do_cipher(\fBctx\fP, \fBout\fP, \fBin\fP, inl)   \fBctx\fP\->cipher\->do_cipher(\fBctx\fP, \fBout\fP, \fBin\fP, inl)"

.PP
Definition at line 75 of file evp_enc\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int EVP_CIPHER_CTX_cleanup (\fBEVP_CIPHER_CTX\fP * c)"

.PP
Definition at line 555 of file evp_enc\&.c\&.
.SS "int EVP_CIPHER_CTX_copy (\fBEVP_CIPHER_CTX\fP * out, const \fBEVP_CIPHER_CTX\fP * in)"

.PP
Definition at line 637 of file evp_enc\&.c\&.
.SS "int EVP_CIPHER_CTX_ctrl (\fBEVP_CIPHER_CTX\fP * ctx, int type, int arg, \fBvoid\fP * ptr)"

.PP
Definition at line 606 of file evp_enc\&.c\&.
.SS "\fBvoid\fP EVP_CIPHER_CTX_free (\fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 547 of file evp_enc\&.c\&.
.SS "\fBvoid\fP EVP_CIPHER_CTX_init (\fBEVP_CIPHER_CTX\fP * ctx)"

.PP
Definition at line 80 of file evp_enc\&.c\&.
.SS "\fBEVP_CIPHER_CTX\fP* EVP_CIPHER_CTX_new (\fBvoid\fP)"

.PP
Definition at line 86 of file evp_enc\&.c\&.
.SS "int EVP_CIPHER_CTX_rand_key (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * key)"

.PP
Definition at line 628 of file evp_enc\&.c\&.
.SS "int EVP_CIPHER_CTX_set_key_length (\fBEVP_CIPHER_CTX\fP * c, int keylen)"

.PP
Definition at line 583 of file evp_enc\&.c\&.
.SS "int EVP_CIPHER_CTX_set_padding (\fBEVP_CIPHER_CTX\fP * ctx, int pad)"

.PP
Definition at line 597 of file evp_enc\&.c\&.
.SS "int EVP_CipherFinal (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 284 of file evp_enc\&.c\&.
.SS "int EVP_CipherFinal_ex (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 276 of file evp_enc\&.c\&.
.SS "int EVP_CipherInit (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, const unsigned char * key, const unsigned char * iv, int enc)"

.PP
Definition at line 94 of file evp_enc\&.c\&.
.SS "int EVP_CipherInit_ex (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, \fBENGINE\fP * impl, const unsigned char * key, const unsigned char * iv, int enc)"

.PP
Definition at line 102 of file evp_enc\&.c\&.
.SS "int EVP_CipherUpdate (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl)"

.PP
Definition at line 267 of file evp_enc\&.c\&.
.SS "int EVP_DecryptFinal (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 484 of file evp_enc\&.c\&.
.SS "int EVP_DecryptFinal_ex (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 491 of file evp_enc\&.c\&.
.SS "int EVP_DecryptInit (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, const unsigned char * key, const unsigned char * iv)"

.PP
Definition at line 305 of file evp_enc\&.c\&.
.SS "int EVP_DecryptInit_ex (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, \fBENGINE\fP * impl, const unsigned char * key, const unsigned char * iv)"

.PP
Definition at line 311 of file evp_enc\&.c\&.
.SS "int EVP_DecryptUpdate (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl)"

.PP
Definition at line 430 of file evp_enc\&.c\&.
.SS "int EVP_EncryptFinal (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 381 of file evp_enc\&.c\&.
.SS "int EVP_EncryptFinal_ex (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl)"

.PP
Definition at line 388 of file evp_enc\&.c\&.
.SS "int EVP_EncryptInit (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, const unsigned char * key, const unsigned char * iv)"

.PP
Definition at line 292 of file evp_enc\&.c\&.
.SS "int EVP_EncryptInit_ex (\fBEVP_CIPHER_CTX\fP * ctx, const \fBEVP_CIPHER\fP * cipher, \fBENGINE\fP * impl, const unsigned char * key, const unsigned char * iv)"

.PP
Definition at line 298 of file evp_enc\&.c\&.
.SS "int EVP_EncryptUpdate (\fBEVP_CIPHER_CTX\fP * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl)"

.PP
Definition at line 318 of file evp_enc\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "const char EVP_version[] = 'EVP' OPENSSL_VERSION_PTEXT"

.PP
Definition at line 78 of file evp_enc\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

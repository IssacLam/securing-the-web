.TH "s2n/libcrypto-build/openssl/crypto/x509/x509_vfy.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/x509/x509_vfy.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/crypto\&.h>\fP
.br
\fC#include <openssl/lhash\&.h>\fP
.br
\fC#include <openssl/buffer\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/asn1\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/x509v3\&.h>\fP
.br
\fC#include <openssl/objects\&.h>\fP
.br
\fC#include 'vpm_int\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCRL_SCORE_NOCRITICAL\fP   0x100"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_SCOPE\fP   0x080"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_TIME\fP   0x040"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_ISSUER_NAME\fP   0x020"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_VALID\fP   (\fBCRL_SCORE_NOCRITICAL\fP|\fBCRL_SCORE_TIME\fP|\fBCRL_SCORE_SCOPE\fP)"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_ISSUER_CERT\fP   0x018"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_SAME_PATH\fP   0x008"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_AKID\fP   0x004"
.br
.ti -1c
.RI "#define \fBCRL_SCORE_TIME_DELTA\fP   0x002"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBX509_verify_cert\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBX509_cmp_current_time\fP (const \fBASN1_TIME\fP *ctm)"
.br
.ti -1c
.RI "int \fBX509_cmp_time\fP (const \fBASN1_TIME\fP *ctm, time_t *cmp_time)"
.br
.ti -1c
.RI "\fBASN1_TIME\fP * \fBX509_gmtime_adj\fP (\fBASN1_TIME\fP *s, long adj)"
.br
.ti -1c
.RI "\fBASN1_TIME\fP * \fBX509_time_adj\fP (\fBASN1_TIME\fP *s, long offset_sec, time_t *in_tm)"
.br
.ti -1c
.RI "\fBASN1_TIME\fP * \fBX509_time_adj_ex\fP (\fBASN1_TIME\fP *s, int offset_day, long offset_sec, time_t *in_tm)"
.br
.ti -1c
.RI "int \fBX509_get_pubkey_parameters\fP (\fBEVP_PKEY\fP *pkey, \fBSTACK_OF\fP(\fBX509\fP)*chain)"
.br
.ti -1c
.RI "\fBX509_CRL\fP * \fBX509_CRL_diff\fP (\fBX509_CRL\fP *base, \fBX509_CRL\fP *newer, \fBEVP_PKEY\fP *skey, const \fBEVP_MD\fP *md, unsigned int \fBflags\fP)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_get_ex_new_index\fP (long argl, \fBvoid\fP *argp, \fBCRYPTO_EX_new\fP *new_func, \fBCRYPTO_EX_dup\fP *dup_func, \fBCRYPTO_EX_free\fP *\fBfree_func\fP)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_set_ex_data\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int idx, \fBvoid\fP *\fBdata\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBX509_STORE_CTX_get_ex_data\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int idx)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_get_error\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_error\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int err)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_get_error_depth\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBX509\fP * \fBX509_STORE_CTX_get_current_cert\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509\fP)"
.br
.ti -1c
.RI "\fBX509\fP * \fBX509_STORE_CTX_get0_current_issuer\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBX509_CRL\fP * \fBX509_STORE_CTX_get0_current_crl\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBX509_STORE_CTX\fP * \fBX509_STORE_CTX_get0_parent_ctx\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_cert\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBX509\fP *\fBx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_chain\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBSTACK_OF\fP(\fBX509\fP)*sk)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set0_crls\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBSTACK_OF\fP(\fBX509_CRL\fP)*sk)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_set_purpose\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int purpose)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_set_trust\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int trust)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_purpose_inherit\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int def_purpose, int purpose, int trust)"
.br
.ti -1c
.RI "\fBX509_STORE_CTX\fP * \fBX509_STORE_CTX_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_free\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_init\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBX509_STORE\fP *store, \fBX509\fP *x509, \fBSTACK_OF\fP(\fBX509\fP)*chain)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_trusted_stack\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBSTACK_OF\fP(\fBX509\fP)*sk)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_cleanup\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_depth\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int depth)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_flags\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, unsigned long \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_time\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, unsigned long \fBflags\fP, time_t \fBt\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set_verify_cb\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, int(*verify_cb)(int, \fBX509_STORE_CTX\fP *))"
.br
.ti -1c
.RI "\fBX509_POLICY_TREE\fP * \fBX509_STORE_CTX_get0_policy_tree\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_get_explicit_policy\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBX509_STORE_CTX_set_default\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, const char *name)"
.br
.ti -1c
.RI "\fBX509_VERIFY_PARAM\fP * \fBX509_STORE_CTX_get0_param\fP (\fBX509_STORE_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBX509_STORE_CTX_set0_param\fP (\fBX509_STORE_CTX\fP *\fBctx\fP, \fBX509_VERIFY_PARAM\fP *param)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char \fBX509_version\fP [] = 'X\&.509' OPENSSL_VERSION_PTEXT"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CRL_SCORE_AKID   0x004"

.PP
Definition at line 106 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_ISSUER_CERT   0x018"

.PP
Definition at line 98 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_ISSUER_NAME   0x020"

.PP
Definition at line 90 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_NOCRITICAL   0x100"

.PP
Definition at line 78 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_SAME_PATH   0x008"

.PP
Definition at line 102 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_SCOPE   0x080"

.PP
Definition at line 82 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_TIME   0x040"

.PP
Definition at line 86 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_TIME_DELTA   0x002"

.PP
Definition at line 110 of file x509_vfy\&.c\&.
.SS "#define CRL_SCORE_VALID   (\fBCRL_SCORE_NOCRITICAL\fP|\fBCRL_SCORE_TIME\fP|\fBCRL_SCORE_SCOPE\fP)"

.PP
Definition at line 94 of file x509_vfy\&.c\&.
.SH "Function Documentation"
.PP 
.SS "STACK_OF (\fBX509\fP)"

.PP
Definition at line 2173 of file x509_vfy\&.c\&.
.SS "int X509_cmp_current_time (const \fBASN1_TIME\fP * ctm)"

.PP
Definition at line 1830 of file x509_vfy\&.c\&.
.SS "int X509_cmp_time (const \fBASN1_TIME\fP * ctm, time_t * cmp_time)"

.PP
Definition at line 1835 of file x509_vfy\&.c\&.
.SS "\fBX509_CRL\fP* X509_CRL_diff (\fBX509_CRL\fP * base, \fBX509_CRL\fP * newer, \fBEVP_PKEY\fP * skey, const \fBEVP_MD\fP * md, unsigned int flags)"

.PP
Definition at line 2024 of file x509_vfy\&.c\&.
.SS "int X509_get_pubkey_parameters (\fBEVP_PKEY\fP * pkey, \fBSTACK_OF\fP(\fBX509\fP)* chain)"

.PP
Definition at line 1981 of file x509_vfy\&.c\&.
.SS "\fBASN1_TIME\fP* X509_gmtime_adj (\fBASN1_TIME\fP * s, long adj)"

.PP
Definition at line 1952 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_cleanup (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2435 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_free (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2294 of file x509_vfy\&.c\&.
.SS "\fBX509_CRL\fP* X509_STORE_CTX_get0_current_crl (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2190 of file x509_vfy\&.c\&.
.SS "\fBX509\fP* X509_STORE_CTX_get0_current_issuer (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2185 of file x509_vfy\&.c\&.
.SS "\fBX509_VERIFY_PARAM\fP* X509_STORE_CTX_get0_param (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2506 of file x509_vfy\&.c\&.
.SS "\fBX509_STORE_CTX\fP* X509_STORE_CTX_get0_parent_ctx (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2195 of file x509_vfy\&.c\&.
.SS "\fBX509_POLICY_TREE\fP* X509_STORE_CTX_get0_policy_tree (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2487 of file x509_vfy\&.c\&.
.SS "\fBX509\fP* X509_STORE_CTX_get_current_cert (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2168 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_get_error (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2153 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_get_error_depth (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2163 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP* X509_STORE_CTX_get_ex_data (\fBX509_STORE_CTX\fP * ctx, int idx)"

.PP
Definition at line 2148 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_get_ex_new_index (long argl, \fBvoid\fP * argp, \fBCRYPTO_EX_new\fP * new_func, \fBCRYPTO_EX_dup\fP * dup_func, \fBCRYPTO_EX_free\fP * free_func)"

.PP
Definition at line 2130 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_get_explicit_policy (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 2492 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_init (\fBX509_STORE_CTX\fP * ctx, \fBX509_STORE\fP * store, \fBX509\fP * x509, \fBSTACK_OF\fP(\fBX509\fP)* chain)"

.PP
Definition at line 2302 of file x509_vfy\&.c\&.
.SS "\fBX509_STORE_CTX\fP* X509_STORE_CTX_new (\fBvoid\fP)"

.PP
Definition at line 2282 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_purpose_inherit (\fBX509_STORE_CTX\fP * ctx, int def_purpose, int purpose, int trust)"

.PP
Definition at line 2236 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set0_crls (\fBX509_STORE_CTX\fP * ctx, \fBSTACK_OF\fP(\fBX509_CRL\fP)* sk)"

.PP
Definition at line 2210 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set0_param (\fBX509_STORE_CTX\fP * ctx, \fBX509_VERIFY_PARAM\fP * param)"

.PP
Definition at line 2511 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_cert (\fBX509_STORE_CTX\fP * ctx, \fBX509\fP * x)"

.PP
Definition at line 2200 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_chain (\fBX509_STORE_CTX\fP * ctx, \fBSTACK_OF\fP(\fBX509\fP)* sk)"

.PP
Definition at line 2205 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_set_default (\fBX509_STORE_CTX\fP * ctx, const char * name)"

.PP
Definition at line 2497 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_depth (\fBX509_STORE_CTX\fP * ctx, int depth)"

.PP
Definition at line 2465 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_error (\fBX509_STORE_CTX\fP * ctx, int err)"

.PP
Definition at line 2158 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_set_ex_data (\fBX509_STORE_CTX\fP * ctx, int idx, \fBvoid\fP * data)"

.PP
Definition at line 2143 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_flags (\fBX509_STORE_CTX\fP * ctx, unsigned long flags)"

.PP
Definition at line 2470 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_set_purpose (\fBX509_STORE_CTX\fP * ctx, int purpose)"

.PP
Definition at line 2215 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_time (\fBX509_STORE_CTX\fP * ctx, unsigned long flags, time_t t)"

.PP
Definition at line 2475 of file x509_vfy\&.c\&.
.SS "int X509_STORE_CTX_set_trust (\fBX509_STORE_CTX\fP * ctx, int trust)"

.PP
Definition at line 2220 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_set_verify_cb (\fBX509_STORE_CTX\fP * ctx, int(*)(int, \fBX509_STORE_CTX\fP *) verify_cb)"

.PP
Definition at line 2481 of file x509_vfy\&.c\&.
.SS "\fBvoid\fP X509_STORE_CTX_trusted_stack (\fBX509_STORE_CTX\fP * ctx, \fBSTACK_OF\fP(\fBX509\fP)* sk)"

.PP
Definition at line 2429 of file x509_vfy\&.c\&.
.SS "\fBASN1_TIME\fP* X509_time_adj (\fBASN1_TIME\fP * s, long offset_sec, time_t * in_tm)"

.PP
Definition at line 1957 of file x509_vfy\&.c\&.
.SS "\fBASN1_TIME\fP* X509_time_adj_ex (\fBASN1_TIME\fP * s, int offset_day, long offset_sec, time_t * in_tm)"

.PP
Definition at line 1962 of file x509_vfy\&.c\&.
.SS "int X509_verify_cert (\fBX509_STORE_CTX\fP * ctx)"

.PP
Definition at line 188 of file x509_vfy\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "const char X509_version[] = 'X\&.509' OPENSSL_VERSION_PTEXT"

.PP
Definition at line 140 of file x509_vfy\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

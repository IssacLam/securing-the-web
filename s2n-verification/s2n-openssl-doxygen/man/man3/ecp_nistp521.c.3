.TH "s2n/libcrypto-build/openssl/crypto/ec/ecp_nistp521.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/ec/ecp_nistp521.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <openssl/err\&.h>\fP
.br
\fC#include 'ec_lcl\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBNISTP521_PRE_COMP\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNLIMBS\fP   9"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBu8\fP"
.br
.ti -1c
.RI "typedef uint64_t \fBu64\fP"
.br
.ti -1c
.RI "typedef int64_t \fBs64\fP"
.br
.ti -1c
.RI "typedef \fBu8\fP \fBfelem_bytearray\fP[66]"
.br
.ti -1c
.RI "typedef uint64_t \fBlimb\fP"
.br
.ti -1c
.RI "typedef \fBlimb\fP \fBfelem\fP[\fBNLIMBS\fP]"
.br
.ti -1c
.RI "typedef uint128_t \fBlargefelem\fP[\fBNLIMBS\fP]"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const \fBEC_METHOD\fP * \fBEC_GFp_nistp521_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_group_init\fP (\fBEC_GROUP\fP *group)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_group_set_curve\fP (\fBEC_GROUP\fP *group, const \fBBIGNUM\fP *\fBp\fP, const \fBBIGNUM\fP *\fBa\fP, const \fBBIGNUM\fP *\fBb\fP, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_point_get_affine_coordinates\fP (const \fBEC_GROUP\fP *group, const \fBEC_POINT\fP *point, \fBBIGNUM\fP *\fBx\fP, \fBBIGNUM\fP *y, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_points_mul\fP (const \fBEC_GROUP\fP *group, \fBEC_POINT\fP *r, const \fBBIGNUM\fP *scalar, size_t \fBnum\fP, const \fBEC_POINT\fP *points[], const \fBBIGNUM\fP *scalars[], \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_precompute_mult\fP (\fBEC_GROUP\fP *group, \fBBN_CTX\fP *\fBctx\fP)"
.br
.ti -1c
.RI "int \fBec_GFp_nistp521_have_precompute_mult\fP (const \fBEC_GROUP\fP *group)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define NLIMBS   9"

.PP
Definition at line 128 of file ecp_nistp521\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBlimb\fP felem[\fBNLIMBS\fP]"

.PP
Definition at line 131 of file ecp_nistp521\&.c\&.
.SS "typedef \fBu8\fP felem_bytearray[66]"

.PP
Definition at line 60 of file ecp_nistp521\&.c\&.
.SS "typedef uint128_t largefelem[\fBNLIMBS\fP]"

.PP
Definition at line 132 of file ecp_nistp521\&.c\&.
.SS "typedef uint64_t \fBlimb\fP"

.PP
Definition at line 130 of file ecp_nistp521\&.c\&.
.SS "typedef int64_t \fBs64\fP"

.PP
Definition at line 52 of file ecp_nistp521\&.c\&.
.SS "typedef uint64_t \fBu64\fP"

.PP
Definition at line 51 of file ecp_nistp521\&.c\&.
.SS "typedef uint8_t \fBu8\fP"

.PP
Definition at line 50 of file ecp_nistp521\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int ec_GFp_nistp521_group_init (\fBEC_GROUP\fP * group)"

.PP
Definition at line 1688 of file ecp_nistp521\&.c\&.
.SS "int ec_GFp_nistp521_group_set_curve (\fBEC_GROUP\fP * group, const \fBBIGNUM\fP * p, const \fBBIGNUM\fP * a, const \fBBIGNUM\fP * b, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1696 of file ecp_nistp521\&.c\&.
.SS "int ec_GFp_nistp521_have_precompute_mult (const \fBEC_GROUP\fP * group)"

.PP
Definition at line 2135 of file ecp_nistp521\&.c\&.
.SS "const \fBEC_METHOD\fP* EC_GFp_nistp521_method (\fBvoid\fP)"
Returns 64-bit optimized methods for nistp521 
.PP
\fBReturns:\fP
.RS 4
EC_METHOD object 
.RE
.PP

.PP
Definition at line 1577 of file ecp_nistp521\&.c\&.
.SS "int ec_GFp_nistp521_point_get_affine_coordinates (const \fBEC_GROUP\fP * group, const \fBEC_POINT\fP * point, \fBBIGNUM\fP * x, \fBBIGNUM\fP * y, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1733 of file ecp_nistp521\&.c\&.
.SS "int ec_GFp_nistp521_points_mul (const \fBEC_GROUP\fP * group, \fBEC_POINT\fP * r, const \fBBIGNUM\fP * scalar, size_t num, const \fBEC_POINT\fP * points[], const \fBBIGNUM\fP * scalars[], \fBBN_CTX\fP * ctx)"

.PP
Definition at line 1812 of file ecp_nistp521\&.c\&.
.SS "int ec_GFp_nistp521_precompute_mult (\fBEC_GROUP\fP * group, \fBBN_CTX\fP * ctx)"

.PP
Definition at line 2022 of file ecp_nistp521\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

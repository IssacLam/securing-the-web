.TH "s2n/libcrypto-root/include/openssl/aes.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-root/include/openssl/aes.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBaes_key_st\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBAES_ENCRYPT\fP   1"
.br
.ti -1c
.RI "#define \fBAES_DECRYPT\fP   0"
.br
.ti -1c
.RI "#define \fBAES_MAXNR\fP   14"
.br
.ti -1c
.RI "#define \fBAES_BLOCK_SIZE\fP   16"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBaes_key_st\fP \fBAES_KEY\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const char * \fBAES_options\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBAES_set_encrypt_key\fP (const unsigned char *userKey, const int \fBbits\fP, \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "int \fBAES_set_decrypt_key\fP (const unsigned char *userKey, const int \fBbits\fP, \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "int \fBprivate_AES_set_encrypt_key\fP (const unsigned char *userKey, const int \fBbits\fP, \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "int \fBprivate_AES_set_decrypt_key\fP (const unsigned char *userKey, const int \fBbits\fP, \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, const \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_decrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, const \fBAES_KEY\fP *\fBkey\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_ecb_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, const \fBAES_KEY\fP *\fBkey\fP, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_cbc_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_cfb128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, int *\fBnum\fP, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_cfb1_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, int *\fBnum\fP, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_cfb8_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, int *\fBnum\fP, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_ofb128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, int *\fBnum\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_ctr128_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char ivec[\fBAES_BLOCK_SIZE\fP], unsigned char ecount_buf[\fBAES_BLOCK_SIZE\fP], unsigned int *\fBnum\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_ige_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, unsigned char *ivec, const int \fBenc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBAES_bi_ige_encrypt\fP (const unsigned char *\fBin\fP, unsigned char *\fBout\fP, size_t \fBlength\fP, const \fBAES_KEY\fP *\fBkey\fP, const \fBAES_KEY\fP *key2, const unsigned char *ivec, const int \fBenc\fP)"
.br
.ti -1c
.RI "int \fBAES_wrap_key\fP (\fBAES_KEY\fP *\fBkey\fP, const unsigned char *iv, unsigned char *\fBout\fP, const unsigned char *\fBin\fP, unsigned int inlen)"
.br
.ti -1c
.RI "int \fBAES_unwrap_key\fP (\fBAES_KEY\fP *\fBkey\fP, const unsigned char *iv, unsigned char *\fBout\fP, const unsigned char *\fBin\fP, unsigned int inlen)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define AES_BLOCK_SIZE   16"

.PP
Definition at line 71 of file aes\&.h\&.
.SS "#define AES_DECRYPT   0"

.PP
Definition at line 64 of file aes\&.h\&.
.SS "#define AES_ENCRYPT   1"

.PP
Definition at line 63 of file aes\&.h\&.
.SS "#define AES_MAXNR   14"

.PP
Definition at line 70 of file aes\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBaes_key_st\fP \fBAES_KEY\fP"

.PP
Definition at line 86 of file aes\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP AES_bi_ige_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, const \fBAES_KEY\fP * key2, const unsigned char * ivec, const int enc)"

.PP
Definition at line 208 of file aes_ige\&.c\&.
.SS "\fBvoid\fP AES_cbc_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, const int enc)"

.PP
Definition at line 55 of file aes_cbc\&.c\&.
.SS "\fBvoid\fP AES_cfb128_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, int * num, const int enc)"

.PP
Definition at line 61 of file aes_cfb\&.c\&.
.SS "\fBvoid\fP AES_cfb1_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, int * num, const int enc)"

.PP
Definition at line 71 of file aes_cfb\&.c\&.
.SS "\fBvoid\fP AES_cfb8_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, int * num, const int enc)"

.PP
Definition at line 79 of file aes_cfb\&.c\&.
.SS "\fBvoid\fP AES_ctr128_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char ivec[AES_BLOCK_SIZE], unsigned char ecount_buf[AES_BLOCK_SIZE], unsigned int * num)"

.PP
Definition at line 55 of file aes_ctr\&.c\&.
.SS "\fBvoid\fP AES_decrypt (const unsigned char * in, unsigned char * out, const \fBAES_KEY\fP * key)"

.PP
Definition at line 974 of file aes_core\&.c\&.
.SS "\fBvoid\fP AES_ecb_encrypt (const unsigned char * in, unsigned char * out, const \fBAES_KEY\fP * key, const int enc)"

.PP
Definition at line 62 of file aes_ecb\&.c\&.
.SS "\fBvoid\fP AES_encrypt (const unsigned char * in, unsigned char * out, const \fBAES_KEY\fP * key)"

.PP
Definition at line 783 of file aes_core\&.c\&.
.SS "\fBvoid\fP AES_ige_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, const int enc)"

.PP
Definition at line 79 of file aes_ige\&.c\&.
.SS "\fBvoid\fP AES_ofb128_encrypt (const unsigned char * in, unsigned char * out, size_t length, const \fBAES_KEY\fP * key, unsigned char * ivec, int * num)"

.PP
Definition at line 55 of file aes_ofb\&.c\&.
.SS "const char* AES_options (\fBvoid\fP)"

.PP
Definition at line 59 of file aes_misc\&.c\&.
.SS "int AES_set_decrypt_key (const unsigned char * userKey, const int bits, \fBAES_KEY\fP * key)"
Expand the cipher key into the decryption key schedule\&. 
.PP
Definition at line 79 of file aes_misc\&.c\&.
.SS "int AES_set_encrypt_key (const unsigned char * userKey, const int bits, \fBAES_KEY\fP * key)"
Expand the cipher key into the encryption key schedule\&. 
.PP
Definition at line 70 of file aes_misc\&.c\&.
.SS "int AES_unwrap_key (\fBAES_KEY\fP * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, unsigned int inlen)"

.PP
Definition at line 66 of file aes_wrap\&.c\&.
.SS "int AES_wrap_key (\fBAES_KEY\fP * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, unsigned int inlen)"

.PP
Definition at line 59 of file aes_wrap\&.c\&.
.SS "int private_AES_set_decrypt_key (const unsigned char * userKey, const int bits, \fBAES_KEY\fP * key)"
Expand the cipher key into the decryption key schedule\&. 
.PP
Definition at line 730 of file aes_core\&.c\&.
.SS "int private_AES_set_encrypt_key (const unsigned char * userKey, const int bits, \fBAES_KEY\fP * key)"
Expand the cipher key into the encryption key schedule\&. 
.PP
Definition at line 628 of file aes_core\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/libcrypto-build/openssl/e_os.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/e_os.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <openssl/e_os2\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEVRANDOM\fP   '/dev/urandom','/dev/random','/dev/srandom'"
.br
.ti -1c
.RI "#define \fBDEVRANDOM_EGD\fP   '/var/\fBrun\fP/egd\-pool','/dev/egd\-pool','/etc/egd\-pool','/etc/entropy'"
.br
.ti -1c
.RI "#define \fBMS_STATIC\fP"
.br
.ti -1c
.RI "#define \fBget_last_sys_error\fP()       \fBerrno\fP"
.br
.ti -1c
.RI "#define \fBclear_sys_error\fP()             \fBerrno\fP=0"
.br
.ti -1c
.RI "#define \fBget_last_socket_error\fP()   \fBerrno\fP"
.br
.ti -1c
.RI "#define \fBclear_socket_error\fP()       \fBerrno\fP=0"
.br
.ti -1c
.RI "#define \fBioctlsocket\fP(\fBa\fP,  \fBb\fP,  \fBc\fP)           \fBioctl\fP(\fBa\fP,\fBb\fP,\fBc\fP)"
.br
.ti -1c
.RI "#define \fBclosesocket\fP(s)                   close(s)"
.br
.ti -1c
.RI "#define \fBreadsocket\fP(s,  \fBb\fP,  n)             \fBread\fP((s),(\fBb\fP),(n))"
.br
.ti -1c
.RI "#define \fBwritesocket\fP(s,  \fBb\fP,  n)           write((s),(\fBb\fP),(n))"
.br
.ti -1c
.RI "#define \fBMS_CALLBACK\fP"
.br
.ti -1c
.RI "#define \fBMS_FAR\fP"
.br
.ti -1c
.RI "#define \fBOPENSSL_CONF\fP   'openssl\&.cnf'"
.br
.ti -1c
.RI "#define \fBSSLEAY_CONF\fP   \fBOPENSSL_CONF\fP"
.br
.ti -1c
.RI "#define \fBRFILE\fP   '\&.rnd'"
.br
.ti -1c
.RI "#define \fBLIST_SEPARATOR_CHAR\fP   ':'"
.br
.ti -1c
.RI "#define \fBNUL_DEV\fP   '/dev/null'"
.br
.ti -1c
.RI "#define \fBEXIT\fP(n)                         \fBexit\fP(n)"
.br
.ti -1c
.RI "#define \fBSSLeay_getpid\fP()             getpid()"
.br
.ti -1c
.RI "#define \fBOPENSSL_EXIT\fP(n)   do { \fBEXIT\fP(n); return(n); } while(0)"
.br
.ti -1c
.RI "#define \fBDG_GCC_BUG\fP   /* gcc < 2\&.6\&.3 on DGUX */"
.br
.ti -1c
.RI "#define \fBinline\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define clear_socket_error()   \fBerrno\fP=0"

.PP
Definition at line 214 of file e_os\&.h\&.
.SS "#define clear_sys_error()   \fBerrno\fP=0"

.PP
Definition at line 151 of file e_os\&.h\&.
.SS "#define closesocket(s)   close(s)"

.PP
Definition at line 216 of file e_os\&.h\&.
.SS "#define DEVRANDOM   '/dev/urandom','/dev/random','/dev/srandom'"

.PP
Definition at line 85 of file e_os\&.h\&.
.SS "#define DEVRANDOM_EGD   '/var/\fBrun\fP/egd\-pool','/dev/egd\-pool','/etc/egd\-pool','/etc/entropy'"

.PP
Definition at line 93 of file e_os\&.h\&.
.SS "#define DG_GCC_BUG   /* gcc < 2\&.6\&.3 on DGUX */"

.PP
Definition at line 690 of file e_os\&.h\&.
.SS "#define EXIT(n)   \fBexit\fP(n)"

.PP
Definition at line 495 of file e_os\&.h\&.
.SS "#define get_last_socket_error()   \fBerrno\fP"

.PP
Definition at line 213 of file e_os\&.h\&.
.SS "#define get_last_sys_error()   \fBerrno\fP"

.PP
Definition at line 150 of file e_os\&.h\&.
.SS "#define inline"

.PP
Definition at line 774 of file e_os\&.h\&.
.SS "#define ioctlsocket(\fBa\fP, \fBb\fP, \fBc\fP)   \fBioctl\fP(\fBa\fP,\fBb\fP,\fBc\fP)"

.PP
Definition at line 215 of file e_os\&.h\&.
.SS "#define LIST_SEPARATOR_CHAR   ':'"

.PP
Definition at line 493 of file e_os\&.h\&.
.SS "#define MS_CALLBACK"

.PP
Definition at line 225 of file e_os\&.h\&.
.SS "#define MS_FAR"

.PP
Definition at line 226 of file e_os\&.h\&.
.SS "#define MS_STATIC"

.PP
Definition at line 126 of file e_os\&.h\&.
.SS "#define NUL_DEV   '/dev/null'"

.PP
Definition at line 494 of file e_os\&.h\&.
.SS "#define OPENSSL_CONF   'openssl\&.cnf'"

.PP
Definition at line 490 of file e_os\&.h\&.
.SS "#define OPENSSL_EXIT(n)   do { \fBEXIT\fP(n); return(n); } while(0)"

.PP
Definition at line 684 of file e_os\&.h\&.
.SS "#define readsocket(s, \fBb\fP, n)   \fBread\fP((s),(\fBb\fP),(n))"

.PP
Definition at line 217 of file e_os\&.h\&.
.SS "#define RFILE   '\&.rnd'"

.PP
Definition at line 492 of file e_os\&.h\&.
.SS "#define SSLEAY_CONF   \fBOPENSSL_CONF\fP"

.PP
Definition at line 491 of file e_os\&.h\&.
.SS "#define SSLeay_getpid()   getpid()"

.PP
Definition at line 498 of file e_os\&.h\&.
.SS "#define writesocket(s, \fBb\fP, n)   write((s),(\fBb\fP),(n))"

.PP
Definition at line 218 of file e_os\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

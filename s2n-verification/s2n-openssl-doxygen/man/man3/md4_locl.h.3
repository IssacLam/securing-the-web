.TH "s2n/libcrypto-build/openssl/crypto/md4/md4_locl.h" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/md4/md4_locl.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <openssl/md4\&.h>\fP
.br
\fC#include 'md32_common\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMD4_LONG_LOG2\fP   2        /* default to 32 \fBbits\fP */"
.br
.ti -1c
.RI "#define \fBDATA_ORDER_IS_LITTLE_ENDIAN\fP"
.br
.ti -1c
.RI "#define \fBHASH_LONG\fP   \fBMD4_LONG\fP"
.br
.ti -1c
.RI "#define \fBHASH_CTX\fP   \fBMD4_CTX\fP"
.br
.ti -1c
.RI "#define \fBHASH_CBLOCK\fP   \fBMD4_CBLOCK\fP"
.br
.ti -1c
.RI "#define \fBHASH_UPDATE\fP   \fBMD4_Update\fP"
.br
.ti -1c
.RI "#define \fBHASH_TRANSFORM\fP   \fBMD4_Transform\fP"
.br
.ti -1c
.RI "#define \fBHASH_FINAL\fP   \fBMD4_Final\fP"
.br
.ti -1c
.RI "#define \fBHASH_MAKE_STRING\fP(\fBc\fP,  s)  "
.br
.ti -1c
.RI "#define \fBHASH_BLOCK_DATA_ORDER\fP   \fBmd4_block_data_order\fP"
.br
.ti -1c
.RI "#define \fBF\fP(\fBb\fP,  \fBc\fP,  d)               ((((\fBc\fP) ^ (d)) & (\fBb\fP)) ^ (d))"
.br
.ti -1c
.RI "#define \fBG\fP(\fBb\fP,  \fBc\fP,  d)               (((\fBb\fP) & (\fBc\fP)) | ((\fBb\fP) & (d)) | ((\fBc\fP) & (d)))"
.br
.ti -1c
.RI "#define \fBH\fP(\fBb\fP,  \fBc\fP,  d)               ((\fBb\fP) ^ (\fBc\fP) ^ (d))"
.br
.ti -1c
.RI "#define \fBR0\fP(\fBa\fP,  \fBb\fP,  \fBc\fP,  d,  \fBk\fP,  s,  \fBt\fP)"
.br
.ti -1c
.RI "#define \fBR1\fP(\fBa\fP,  \fBb\fP,  \fBc\fP,  d,  \fBk\fP,  s,  \fBt\fP)"
.br
.ti -1c
.RI "#define \fBR2\fP(\fBa\fP,  \fBb\fP,  \fBc\fP,  d,  \fBk\fP,  s,  \fBt\fP)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBmd4_block_data_order\fP (\fBMD4_CTX\fP *\fBc\fP, const \fBvoid\fP *\fBp\fP, size_t \fBnum\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DATA_ORDER_IS_LITTLE_ENDIAN"

.PP
Definition at line 70 of file md4_locl\&.h\&.
.SS "#define F(\fBb\fP, \fBc\fP, d)   ((((\fBc\fP) ^ (d)) & (\fBb\fP)) ^ (d))"

.PP
Definition at line 99 of file md4_locl\&.h\&.
.SS "#define G(\fBb\fP, \fBc\fP, d)   (((\fBb\fP) & (\fBc\fP)) | ((\fBb\fP) & (d)) | ((\fBc\fP) & (d)))"

.PP
Definition at line 100 of file md4_locl\&.h\&.
.SS "#define H(\fBb\fP, \fBc\fP, d)   ((\fBb\fP) ^ (\fBc\fP) ^ (d))"

.PP
Definition at line 101 of file md4_locl\&.h\&.
.SS "#define HASH_BLOCK_DATA_ORDER   \fBmd4_block_data_order\fP"

.PP
Definition at line 85 of file md4_locl\&.h\&.
.SS "#define HASH_CBLOCK   \fBMD4_CBLOCK\fP"

.PP
Definition at line 74 of file md4_locl\&.h\&.
.SS "#define HASH_CTX   \fBMD4_CTX\fP"

.PP
Definition at line 73 of file md4_locl\&.h\&.
.SS "#define HASH_FINAL   \fBMD4_Final\fP"

.PP
Definition at line 77 of file md4_locl\&.h\&.
.SS "#define HASH_LONG   \fBMD4_LONG\fP"

.PP
Definition at line 72 of file md4_locl\&.h\&.
.SS "#define HASH_MAKE_STRING(\fBc\fP, s)"
\fBValue:\fP
.PP
.nf
do {    \
        unsigned long ll;               \
        ll=(c)->A; (void)HOST_l2c(ll,(s));      \
        ll=(c)->B; (void)HOST_l2c(ll,(s));      \
        ll=(c)->C; (void)HOST_l2c(ll,(s));      \
        ll=(c)->D; (void)HOST_l2c(ll,(s));      \
        } while (0)
.fi
.PP
Definition at line 78 of file md4_locl\&.h\&.
.SS "#define HASH_TRANSFORM   \fBMD4_Transform\fP"

.PP
Definition at line 76 of file md4_locl\&.h\&.
.SS "#define HASH_UPDATE   \fBMD4_Update\fP"

.PP
Definition at line 75 of file md4_locl\&.h\&.
.SS "#define MD4_LONG_LOG2   2        /* default to 32 \fBbits\fP */"

.PP
Definition at line 65 of file md4_locl\&.h\&.
.SS "#define R0(\fBa\fP, \fBb\fP, \fBc\fP, d, \fBk\fP, s, \fBt\fP)"
\fBValue:\fP
.PP
.nf
{ \
        a+=((k)+(t)+F((b),(c),(d))); \
        a=ROTATE(a,s); };
.fi
.PP
Definition at line 103 of file md4_locl\&.h\&.
.SS "#define R1(\fBa\fP, \fBb\fP, \fBc\fP, d, \fBk\fP, s, \fBt\fP)"
\fBValue:\fP
.PP
.nf
{ \
        a+=((k)+(t)+G((b),(c),(d))); \
        a=ROTATE(a,s); };\
.fi
.PP
Definition at line 107 of file md4_locl\&.h\&.
.SS "#define R2(\fBa\fP, \fBb\fP, \fBc\fP, d, \fBk\fP, s, \fBt\fP)"
\fBValue:\fP
.PP
.nf
{ \
        a+=((k)+(t)+H((b),(c),(d))); \
        a=ROTATE(a,s); };
.fi
.PP
Definition at line 111 of file md4_locl\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP md4_block_data_order (\fBMD4_CTX\fP * c, const \fBvoid\fP * p, size_t num)"

.PP
Definition at line 89 of file md4_dgst\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/libcrypto-build/openssl/crypto/asn1/asn1_lib.c" 3 "Thu Jun 30 2016" "s2n-openssl-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/libcrypto-build/openssl/crypto/asn1/asn1_lib.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <limits\&.h>\fP
.br
\fC#include 'cryptlib\&.h'\fP
.br
\fC#include <openssl/asn1\&.h>\fP
.br
\fC#include <openssl/asn1_mac\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBASN1_check_infinite_end\fP (unsigned char **\fBp\fP, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBASN1_const_check_infinite_end\fP (const unsigned char **\fBp\fP, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBASN1_get_object\fP (const unsigned char **\fBpp\fP, long *plength, int *ptag, int *pclass, long omax)"
.br
.ti -1c
.RI "\fBvoid\fP \fBASN1_put_object\fP (unsigned char **\fBpp\fP, int constructed, int \fBlength\fP, int tag, int xclass)"
.br
.ti -1c
.RI "int \fBASN1_put_eoc\fP (unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "int \fBASN1_object_size\fP (int constructed, int \fBlength\fP, int tag)"
.br
.ti -1c
.RI "int \fBasn1_Finish\fP (\fBASN1_CTX\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBasn1_const_Finish\fP (\fBASN1_const_CTX\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBasn1_GetSequence\fP (\fBASN1_const_CTX\fP *\fBc\fP, long *\fBlength\fP)"
.br
.ti -1c
.RI "int \fBASN1_STRING_copy\fP (\fBASN1_STRING\fP *dst, const \fBASN1_STRING\fP *str)"
.br
.ti -1c
.RI "\fBASN1_STRING\fP * \fBASN1_STRING_dup\fP (const \fBASN1_STRING\fP *str)"
.br
.ti -1c
.RI "int \fBASN1_STRING_set\fP (\fBASN1_STRING\fP *str, const \fBvoid\fP *_data, int \fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBASN1_STRING_set0\fP (\fBASN1_STRING\fP *str, \fBvoid\fP *\fBdata\fP, int \fBlen\fP)"
.br
.ti -1c
.RI "\fBASN1_STRING\fP * \fBASN1_STRING_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBASN1_STRING\fP * \fBASN1_STRING_type_new\fP (int \fBtype\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBASN1_STRING_free\fP (\fBASN1_STRING\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBASN1_STRING_clear_free\fP (\fBASN1_STRING\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBASN1_STRING_cmp\fP (const \fBASN1_STRING\fP *\fBa\fP, const \fBASN1_STRING\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBasn1_add_error\fP (const unsigned char *address, int offset)"
.br
.ti -1c
.RI "int \fBASN1_STRING_length\fP (const \fBASN1_STRING\fP *\fBx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBASN1_STRING_length_set\fP (\fBASN1_STRING\fP *\fBx\fP, int \fBlen\fP)"
.br
.ti -1c
.RI "int \fBASN1_STRING_type\fP (\fBASN1_STRING\fP *\fBx\fP)"
.br
.ti -1c
.RI "unsigned char * \fBASN1_STRING_data\fP (\fBASN1_STRING\fP *\fBx\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char \fBASN1_version\fP [] = 'ASN\&.1' OPENSSL_VERSION_PTEXT"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP asn1_add_error (const unsigned char * address, int offset)"

.PP
Definition at line 451 of file asn1_lib\&.c\&.
.SS "int ASN1_check_infinite_end (unsigned char ** p, long len)"

.PP
Definition at line 84 of file asn1_lib\&.c\&.
.SS "int ASN1_const_check_infinite_end (const unsigned char ** p, long len)"

.PP
Definition at line 89 of file asn1_lib\&.c\&.
.SS "int asn1_const_Finish (\fBASN1_const_CTX\fP * c)"

.PP
Definition at line 301 of file asn1_lib\&.c\&.
.SS "int asn1_Finish (\fBASN1_CTX\fP * c)"

.PP
Definition at line 296 of file asn1_lib\&.c\&.
.SS "int ASN1_get_object (const unsigned char ** pp, long * plength, int * ptag, int * pclass, long omax)"

.PP
Definition at line 94 of file asn1_lib\&.c\&.
.SS "int asn1_GetSequence (\fBASN1_const_CTX\fP * c, long * length)"

.PP
Definition at line 306 of file asn1_lib\&.c\&.
.SS "int ASN1_object_size (int constructed, int length, int tag)"

.PP
Definition at line 257 of file asn1_lib\&.c\&.
.SS "int ASN1_put_eoc (unsigned char ** pp)"

.PP
Definition at line 227 of file asn1_lib\&.c\&.
.SS "\fBvoid\fP ASN1_put_object (unsigned char ** pp, int constructed, int length, int tag, int xclass)"

.PP
Definition at line 197 of file asn1_lib\&.c\&.
.SS "\fBvoid\fP ASN1_STRING_clear_free (\fBASN1_STRING\fP * a)"

.PP
Definition at line 429 of file asn1_lib\&.c\&.
.SS "int ASN1_STRING_cmp (const \fBASN1_STRING\fP * a, const \fBASN1_STRING\fP * b)"

.PP
Definition at line 436 of file asn1_lib\&.c\&.
.SS "int ASN1_STRING_copy (\fBASN1_STRING\fP * dst, const \fBASN1_STRING\fP * str)"

.PP
Definition at line 332 of file asn1_lib\&.c\&.
.SS "unsigned char* ASN1_STRING_data (\fBASN1_STRING\fP * x)"

.PP
Definition at line 476 of file asn1_lib\&.c\&.
.SS "\fBASN1_STRING\fP* ASN1_STRING_dup (const \fBASN1_STRING\fP * str)"

.PP
Definition at line 343 of file asn1_lib\&.c\&.
.SS "\fBvoid\fP ASN1_STRING_free (\fBASN1_STRING\fP * a)"

.PP
Definition at line 420 of file asn1_lib\&.c\&.
.SS "int ASN1_STRING_length (const \fBASN1_STRING\fP * x)"

.PP
Definition at line 460 of file asn1_lib\&.c\&.
.SS "\fBvoid\fP ASN1_STRING_length_set (\fBASN1_STRING\fP * x, int len)"

.PP
Definition at line 465 of file asn1_lib\&.c\&.
.SS "\fBASN1_STRING\fP* ASN1_STRING_new (\fBvoid\fP)"

.PP
Definition at line 399 of file asn1_lib\&.c\&.
.SS "int ASN1_STRING_set (\fBASN1_STRING\fP * str, const \fBvoid\fP * _data, int len)"

.PP
Definition at line 358 of file asn1_lib\&.c\&.
.SS "\fBvoid\fP ASN1_STRING_set0 (\fBASN1_STRING\fP * str, \fBvoid\fP * data, int len)"

.PP
Definition at line 391 of file asn1_lib\&.c\&.
.SS "int ASN1_STRING_type (\fBASN1_STRING\fP * x)"

.PP
Definition at line 471 of file asn1_lib\&.c\&.
.SS "\fBASN1_STRING\fP* ASN1_STRING_type_new (int type)"

.PP
Definition at line 404 of file asn1_lib\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "const char ASN1_version[] = 'ASN\&.1' OPENSSL_VERSION_PTEXT"

.PP
Definition at line 68 of file asn1_lib\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-openssl-doxygen from the source code\&.

.TH "s2n/stuffer/s2n_stuffer_base64.c" 3 "Tue Jun 28 2016" "s2n-doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n/stuffer/s2n_stuffer_base64.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <string\&.h>\fP
.br
\fC#include 'error/s2n_errno\&.h'\fP
.br
\fC#include 'stuffer/s2n_stuffer\&.h'\fP
.br
\fC#include 'utils/s2n_safety\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBs2n_stuffer_read_base64\fP (struct \fBs2n_stuffer\fP *stuffer, struct \fBs2n_stuffer\fP *out)"
.br
.ti -1c
.RI "int \fBs2n_stuffer_write_base64\fP (struct \fBs2n_stuffer\fP *stuffer, struct \fBs2n_stuffer\fP *in)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int s2n_stuffer_read_base64 (struct \fBs2n_stuffer\fP * stuffer, struct \fBs2n_stuffer\fP * out)"
NOTE: In general, shift before masking\&. This avoids needing to worry about how the signed bit may be handled\&. 
.PP
Definition at line 70 of file s2n_stuffer_base64\&.c\&.
.SS "int s2n_stuffer_write_base64 (struct \fBs2n_stuffer\fP * stuffer, struct \fBs2n_stuffer\fP * in)"

.PP
Definition at line 146 of file s2n_stuffer_base64\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen from the source code\&.

./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes_gcm_encrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *aad, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes_gcm_decrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *aad, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes128_gcm_get_encryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes256_gcm_get_encryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes128_gcm_get_decryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes256_gcm_get_decryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_aead_cipher_aes_gcm.c:static int s2n_aead_cipher_aes_gcm_destroy_key(struct s2n_session_key *key)
 
./crypto/s2n_cbc_cipher_3des.c:static int s2n_cbc_cipher_3des_encrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_cbc_cipher_3des.c:int s2n_cbc_cipher_3des_decrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_cbc_cipher_3des.c:int s2n_cbc_cipher_3des_get_decryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_3des.c:int s2n_cbc_cipher_3des_get_encryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_3des.c:static int s2n_cbc_cipher_3des_destroy_key(struct s2n_session_key *key)
 
./crypto/s2n_cbc_cipher_aes.c:static int s2n_cbc_cipher_aes_encrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_cbc_cipher_aes.c:int s2n_cbc_cipher_aes_decrypt(struct s2n_session_key *key, struct s2n_blob *iv, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_cbc_cipher_aes.c:int s2n_cbc_cipher_aes128_get_decryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_aes.c:int s2n_cbc_cipher_aes128_get_encryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_aes.c:int s2n_cbc_cipher_aes256_get_decryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_aes.c:int s2n_cbc_cipher_aes256_get_encryption_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_cbc_cipher_aes.c:static int s2n_cbc_cipher_aes_destroy_key(struct s2n_session_key *key)
 
./crypto/s2n_dhe.c:static int s2n_check_p_g_dh_params(struct s2n_dh_params *dh_params)
./crypto/s2n_dhe.c:int s2n_check_all_dh_params(struct s2n_dh_params *dh_params)
./crypto/s2n_dhe.c:int s2n_pkcs3_to_dh_params(struct s2n_dh_params *dh_params, struct s2n_blob *pkcs3)
./crypto/s2n_dhe.c:int s2n_dh_p_g_Ys_to_dh_params(struct s2n_dh_params *server_dh_params, struct s2n_blob *p, struct s2n_blob *g, struct s2n_blob *Ys)
./crypto/s2n_dhe.c:int s2n_dh_params_to_p_g_Ys(struct s2n_dh_params *server_dh_params, struct s2n_stuffer *out, struct s2n_blob *output)
./crypto/s2n_dhe.c:int s2n_dh_compute_shared_secret_as_client(struct s2n_dh_params *server_dh_params, struct s2n_stuffer *Yc_out, struct s2n_blob *shared_key)
./crypto/s2n_dhe.c:int s2n_dh_compute_shared_secret_as_server(struct s2n_dh_params *server_dh_params, struct s2n_stuffer *Yc_in, struct s2n_blob *shared_key)
./crypto/s2n_dhe.c:int s2n_dh_params_copy(struct s2n_dh_params *from, struct s2n_dh_params *to)
./crypto/s2n_dhe.c:int s2n_dh_generate_ephemeral_key(struct s2n_dh_params *dh_params)
./crypto/s2n_dhe.c:int s2n_dh_params_free(struct s2n_dh_params *dh_params)
 
./crypto/s2n_drbg.c:static int s2n_drbg_block_encrypt(EVP_CIPHER_CTX *ctx, uint8_t in[S2N_DRBG_BLOCK_SIZE], uint8_t out[S2N_DRBG_BLOCK_SIZE])
./crypto/s2n_drbg.c:static int s2n_drbg_bits(struct s2n_drbg *drbg, struct s2n_blob *out)
./crypto/s2n_drbg.c:static int s2n_drbg_update(struct s2n_drbg *drbg, struct s2n_blob *provided_data)
./crypto/s2n_drbg.c:int s2n_drbg_seed(struct s2n_drbg *drbg)
./crypto/s2n_drbg.c:int s2n_drbg_instantiate(struct s2n_drbg *drbg, struct s2n_blob *personalization_string)
./crypto/s2n_drbg.c:int s2n_drbg_generate(struct s2n_drbg *drbg, struct s2n_blob *blob)
./crypto/s2n_drbg.c:int s2n_drbg_wipe(struct s2n_drbg *drbg)
./crypto/s2n_drbg.c:int s2n_drbg_bytes_used(struct s2n_drbg *drbg)
 
./crypto/s2n_ecc.c:int s2n_ecc_generate_ephemeral_key(struct s2n_ecc_params *server_ecc_params)
./crypto/s2n_ecc.c:int s2n_ecc_write_ecc_params(struct s2n_ecc_params *server_ecc_params, struct s2n_stuffer *out, struct s2n_blob *written)
./crypto/s2n_ecc.c:int s2n_ecc_read_ecc_params(struct s2n_ecc_params *server_ecc_params, struct s2n_stuffer *in, struct s2n_blob *read)
./crypto/s2n_ecc.c:int s2n_ecc_compute_shared_secret_as_server(struct s2n_ecc_params *server_ecc_params, struct s2n_stuffer *Yc_in, struct s2n_blob *shared_key)
./crypto/s2n_ecc.c:int s2n_ecc_compute_shared_secret_as_client(struct s2n_ecc_params *server_ecc_params, struct s2n_stuffer *Yc_out, struct s2n_blob *shared_key)
./crypto/s2n_ecc.c:int s2n_ecc_params_free(struct s2n_ecc_params *server_ecc_params)
./crypto/s2n_ecc.c:static EC_KEY *s2n_ecc_generate_own_key(const struct s2n_ecc_named_curve *named_curve)
./crypto/s2n_ecc.c:static EC_POINT *s2n_ecc_blob_to_point(struct s2n_blob *blob, const EC_KEY *ec_key)
./crypto/s2n_ecc.c:static int s2n_ecc_calculate_point_length(const EC_POINT *point, const EC_GROUP *group, uint8_t *length)
./crypto/s2n_ecc.c:static int s2n_ecc_write_point_data_snug(const EC_POINT *point, const EC_GROUP *group, struct s2n_blob *out)
./crypto/s2n_ecc.c:static int s2n_ecc_write_point_with_length(const EC_POINT *point, const EC_GROUP *group, struct s2n_stuffer *out)
./crypto/s2n_ecc.c:static int s2n_ecc_compute_shared_secret(EC_KEY *own_key, const EC_POINT *peer_public, struct s2n_blob *shared_secret)
./crypto/s2n_ecc.c:int s2n_ecc_find_supported_curve(struct s2n_blob *iana_ids, const struct s2n_ecc_named_curve **found)
 
./crypto/s2n_hash.c:int s2n_hash_digest_size(s2n_hash_algorithm alg)
./crypto/s2n_hash.c:int s2n_hash_init(struct s2n_hash_state *state, s2n_hash_algorithm alg)
./crypto/s2n_hash.c:int s2n_hash_update(struct s2n_hash_state *state, const void *data, uint32_t size)
./crypto/s2n_hash.c:int s2n_hash_digest(struct s2n_hash_state *state, void *out, uint32_t size)
./crypto/s2n_hash.c:int s2n_hash_reset(struct s2n_hash_state *state)
./crypto/s2n_hash.c:int s2n_hash_copy(struct s2n_hash_state *to, struct s2n_hash_state *from)
 
./crypto/s2n_hmac.c:int s2n_hmac_digest_size(s2n_hmac_algorithm alg)
./crypto/s2n_hmac.c:static int s2n_sslv3_mac_init(struct s2n_hmac_state *state, s2n_hmac_algorithm alg, const void *key, uint32_t klen)
./crypto/s2n_hmac.c:static int s2n_sslv3_mac_digest(struct s2n_hmac_state *state, void *out, uint32_t size)
./crypto/s2n_hmac.c:int s2n_hmac_init(struct s2n_hmac_state *state, s2n_hmac_algorithm alg, const void *key, uint32_t klen)
./crypto/s2n_hmac.c:int s2n_hmac_update(struct s2n_hmac_state *state, const void *in, uint32_t size)
./crypto/s2n_hmac.c:int s2n_hmac_digest(struct s2n_hmac_state *state, void *out, uint32_t size)
./crypto/s2n_hmac.c:int s2n_hmac_digest_two_compression_rounds(struct s2n_hmac_state *state, void *out, uint32_t size)
./crypto/s2n_hmac.c:int s2n_hmac_reset(struct s2n_hmac_state *state)
./crypto/s2n_hmac.c:int s2n_hmac_digest_verify(const void *a, const void *b, uint32_t len)
./crypto/s2n_hmac.c:int s2n_hmac_copy(struct s2n_hmac_state *to, struct s2n_hmac_state *from)
 
./crypto/s2n_rsa.c:int s2n_asn1der_to_rsa_public_key(struct s2n_rsa_public_key *key, struct s2n_blob *asn1der)
./crypto/s2n_rsa.c:int s2n_asn1der_to_rsa_private_key(struct s2n_rsa_private_key *key, struct s2n_blob *asn1der)
./crypto/s2n_rsa.c:int s2n_rsa_public_key_free(struct s2n_rsa_public_key *key)
./crypto/s2n_rsa.c:int s2n_rsa_private_key_free(struct s2n_rsa_private_key *key)
./crypto/s2n_rsa.c:int s2n_rsa_public_encrypted_size(struct s2n_rsa_public_key *key)
./crypto/s2n_rsa.c:int s2n_rsa_private_encrypted_size(struct s2n_rsa_private_key *key)
./crypto/s2n_rsa.c:int s2n_rsa_sign(struct s2n_rsa_private_key *key, struct s2n_hash_state *digest, struct s2n_blob *signature)
./crypto/s2n_rsa.c:int s2n_rsa_verify(struct s2n_rsa_public_key *key, struct s2n_hash_state *digest, struct s2n_blob *signature)
./crypto/s2n_rsa.c:int s2n_rsa_encrypt(struct s2n_rsa_public_key *key, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_rsa.c:int s2n_rsa_decrypt(struct s2n_rsa_private_key *key, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_rsa.c:int s2n_rsa_keys_match(struct s2n_rsa_public_key *pub, struct s2n_rsa_private_key *priv)
 
./crypto/s2n_sequence.c:int s2n_increment_sequence_number(struct s2n_blob *sequence_number)
 
./crypto/s2n_stream_cipher_null.c:int s2n_stream_cipher_null_endecrypt(struct s2n_session_key *key, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_stream_cipher_null.c:int s2n_stream_cipher_null_get_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_stream_cipher_null.c:int s2n_stream_cipher_null_destroy_key(struct s2n_session_key *key)
 
./crypto/s2n_stream_cipher_rc4.c:int s2n_stream_cipher_rc4_endecrypt(struct s2n_session_key *key, struct s2n_blob *in, struct s2n_blob *out)
./crypto/s2n_stream_cipher_rc4.c:int s2n_stream_cipher_rc4_get_key(struct s2n_session_key *key, struct s2n_blob *in)
./crypto/s2n_stream_cipher_rc4.c:int s2n_stream_cipher_rc4_destroy_key(struct s2n_session_key *key)
 
./error/s2n_errno.c:const char *s2n_strerror(int error, const char *lang)
 
 
./stuffer/s2n_stuffer.c:int s2n_stuffer_init(struct s2n_stuffer *stuffer, struct s2n_blob *in)
./stuffer/s2n_stuffer.c:int s2n_stuffer_alloc(struct s2n_stuffer *stuffer, const uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_growable_alloc(struct s2n_stuffer *stuffer, const uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_free(struct s2n_stuffer *stuffer)
./stuffer/s2n_stuffer.c:int s2n_stuffer_resize(struct s2n_stuffer *stuffer, const uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_rewrite(struct s2n_stuffer *stuffer)
./stuffer/s2n_stuffer.c:int s2n_stuffer_reread(struct s2n_stuffer *stuffer)
./stuffer/s2n_stuffer.c:int s2n_stuffer_wipe_n(struct s2n_stuffer *stuffer, const uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_wipe(struct s2n_stuffer *stuffer)
./stuffer/s2n_stuffer.c:int s2n_stuffer_skip_read(struct s2n_stuffer *stuffer, uint32_t n)
./stuffer/s2n_stuffer.c:void *s2n_stuffer_raw_read(struct s2n_stuffer *stuffer, uint32_t data_len)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read(struct s2n_stuffer *stuffer, struct s2n_blob *out)
./stuffer/s2n_stuffer.c:int s2n_stuffer_erase_and_read(struct s2n_stuffer *stuffer, struct s2n_blob *out)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read_bytes(struct s2n_stuffer *stuffer, uint8_t *data, uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_skip_write(struct s2n_stuffer *stuffer, const uint32_t n)
./stuffer/s2n_stuffer.c:void *s2n_stuffer_raw_write(struct s2n_stuffer *stuffer, const uint32_t data_len)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write(struct s2n_stuffer *stuffer, const struct s2n_blob *in)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write_bytes(struct s2n_stuffer *stuffer, const uint8_t *data, const uint32_t size)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read_uint8(struct s2n_stuffer *stuffer, uint8_t *u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write_uint8(struct s2n_stuffer *stuffer, const uint8_t u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read_uint16(struct s2n_stuffer *stuffer, uint16_t *u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write_uint16(struct s2n_stuffer *stuffer, const uint16_t u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read_uint24(struct s2n_stuffer *stuffer, uint32_t *u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write_uint24(struct s2n_stuffer *stuffer, const uint32_t u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_read_uint32(struct s2n_stuffer *stuffer, uint32_t *u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_write_uint32(struct s2n_stuffer *stuffer, const uint32_t u)
./stuffer/s2n_stuffer.c:int s2n_stuffer_copy(struct s2n_stuffer *from, struct s2n_stuffer *to, const uint32_t len)
 
./stuffer/s2n_stuffer_base64.c:int s2n_stuffer_read_base64(struct s2n_stuffer *stuffer, struct s2n_stuffer *out)
./stuffer/s2n_stuffer_base64.c:int s2n_stuffer_write_base64(struct s2n_stuffer *stuffer, struct s2n_stuffer *in)
 
./stuffer/s2n_stuffer_file.c:int s2n_stuffer_recv_from_fd(struct s2n_stuffer *stuffer, int rfd, uint32_t len)
./stuffer/s2n_stuffer_file.c:int s2n_stuffer_send_to_fd(struct s2n_stuffer *stuffer, int wfd, uint32_t len)
./stuffer/s2n_stuffer_file.c:int s2n_stuffer_alloc_ro_from_fd(struct s2n_stuffer *stuffer, int rfd)
./stuffer/s2n_stuffer_file.c:int s2n_stuffer_alloc_ro_from_file(struct s2n_stuffer *stuffer, const char *file)
 
./stuffer/s2n_stuffer_pem.c:static int s2n_stuffer_data_from_pem(struct s2n_stuffer *pem, struct s2n_stuffer *asn1, const char *keyword)
./stuffer/s2n_stuffer_pem.c:int s2n_stuffer_rsa_private_key_from_pem(struct s2n_stuffer *pem, struct s2n_stuffer *asn1)
./stuffer/s2n_stuffer_pem.c:int s2n_stuffer_certificate_from_pem(struct s2n_stuffer *pem, struct s2n_stuffer *asn1)
./stuffer/s2n_stuffer_pem.c:int s2n_stuffer_dhparams_from_pem(struct s2n_stuffer *pem, struct s2n_stuffer *pkcs3)
 
./stuffer/s2n_stuffer_text.c:int s2n_stuffer_peek_char(struct s2n_stuffer *s2n_stuffer, char *c)
./stuffer/s2n_stuffer_text.c:int s2n_stuffer_skip_whitespace(struct s2n_stuffer *s2n_stuffer)
./stuffer/s2n_stuffer_text.c:int s2n_stuffer_read_token(struct s2n_stuffer *stuffer, struct s2n_stuffer *token, char delim)
./stuffer/s2n_stuffer_text.c:int s2n_stuffer_alloc_ro_from_string(struct s2n_stuffer *stuffer, const char *str)
 
./tls/s2n_aead.c:int s2n_aead_aad_init(const struct s2n_connection *conn, uint8_t *sequence_number, uint8_t content_type, uint16_t record_length, struct s2n_stuffer *ad)
 
./tls/s2n_alerts.c:int s2n_process_alert_fragment(struct s2n_connection *conn)
./tls/s2n_alerts.c:int s2n_queue_writer_close_alert(struct s2n_connection *conn)
./tls/s2n_alerts.c:int s2n_queue_reader_unsupported_protocol_version_alert(struct s2n_connection *conn)
 
./tls/s2n_cbc.c:int s2n_verify_cbc(struct s2n_connection *conn, struct s2n_hmac_state *hmac, struct s2n_blob *decrypted)
 
./tls/s2n_cipher_suites.c:struct s2n_cipher_suite *s2n_cipher_suite_match(uint8_t cipher_suite[S2N_TLS_CIPHER_SUITE_LEN])
./tls/s2n_cipher_suites.c:int s2n_set_cipher_as_client(struct s2n_connection *conn, uint8_t wire[S2N_TLS_CIPHER_SUITE_LEN])
./tls/s2n_cipher_suites.c:static int s2n_set_cipher_as_server(struct s2n_connection *conn, uint8_t *wire, uint32_t count, uint32_t cipher_suite_len)
./tls/s2n_cipher_suites.c:int s2n_set_cipher_as_sslv2_server(struct s2n_connection *conn, uint8_t *wire, uint16_t count)
./tls/s2n_cipher_suites.c:int s2n_set_cipher_as_tls_server(struct s2n_connection *conn, uint8_t *wire, uint16_t count)
 
./tls/s2n_client_ccs.c:int s2n_client_ccs_recv(struct s2n_connection *conn)
./tls/s2n_client_ccs.c:int s2n_client_ccs_send(struct s2n_connection *conn)
 
./tls/s2n_client_extensions.c:int s2n_client_extensions_send(struct s2n_connection *conn, struct s2n_stuffer *out)
./tls/s2n_client_extensions.c:int s2n_client_extensions_recv(struct s2n_connection *conn, struct s2n_blob *extensions)
./tls/s2n_client_extensions.c:static int s2n_server_name_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_client_extensions.c:static int s2n_signature_algorithms_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_client_extensions.c:static int s2n_alpn_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_client_extensions.c:static int s2n_status_request_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_client_extensions.c:static int s2n_elliptic_curves_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_client_extensions.c:static int s2n_ec_point_formats_rcv(struct s2n_connection *conn, struct s2n_stuffer *extension)
 
./tls/s2n_client_finished.c:int s2n_client_finished_recv(struct s2n_connection *conn)
./tls/s2n_client_finished.c:int s2n_client_finished_send(struct s2n_connection *conn)
 
./tls/s2n_client_hello.c:int s2n_client_hello_recv(struct s2n_connection *conn)
./tls/s2n_client_hello.c:int s2n_client_hello_send(struct s2n_connection *conn)
./tls/s2n_client_hello.c:int s2n_sslv2_client_hello_recv(struct s2n_connection *conn)
 
./tls/s2n_client_key_exchange.c:static int s2n_rsa_client_key_recv(struct s2n_connection *conn)
./tls/s2n_client_key_exchange.c:static int s2n_dhe_client_key_recv(struct s2n_connection *conn)
./tls/s2n_client_key_exchange.c:int s2n_client_key_recv(struct s2n_connection *conn)
./tls/s2n_client_key_exchange.c:static int s2n_dhe_client_key_send(struct s2n_connection *conn)
./tls/s2n_client_key_exchange.c:static int s2n_rsa_client_key_send(struct s2n_connection *conn)
./tls/s2n_client_key_exchange.c:int s2n_client_key_send(struct s2n_connection *conn)
 
./tls/s2n_config.c:int get_nanoseconds_since_epoch(void *data, uint64_t *nanoseconds)
./tls/s2n_config.c:int get_nanoseconds_since_epoch(void *data, uint64_t *nanoseconds)
./tls/s2n_config.c:struct s2n_config *s2n_config_new(void)
./tls/s2n_config.c:int s2n_config_free_cert_chain_and_key(struct s2n_config *config)
./tls/s2n_config.c:int s2n_config_free_dhparams(struct s2n_config *config)
./tls/s2n_config.c:int s2n_config_free(struct s2n_config *config)
./tls/s2n_config.c:int s2n_config_set_cipher_preferences(struct s2n_config *config, const char *version)
./tls/s2n_config.c:int s2n_config_set_protocol_preferences(struct s2n_config *config, const char * const *protocols, int protocol_count)
./tls/s2n_config.c:int s2n_config_set_status_request_type(struct s2n_config *config, s2n_status_request_type type)
./tls/s2n_config.c:int s2n_config_add_cert_chain_and_key(struct s2n_config *config, char *cert_chain_pem, char *private_key_pem)
./tls/s2n_config.c:int s2n_config_add_dhparams(struct s2n_config *config, char *dhparams_pem)
./tls/s2n_config.c:int s2n_config_set_nanoseconds_since_epoch_callback(struct s2n_config *config, int (*nanoseconds_since_epoch)(void *, uint64_t *), void * data)
 
./tls/s2n_connection.c:struct s2n_connection *s2n_connection_new(s2n_mode mode)
./tls/s2n_connection.c:static int s2n_connection_free_keys(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_shutdown(struct s2n_connection *conn, s2n_blocked_status *more)
./tls/s2n_connection.c:int s2n_connection_free(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_set_config(struct s2n_connection *conn, struct s2n_config *config)
./tls/s2n_connection.c:int s2n_connection_wipe(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_set_read_fd(struct s2n_connection *conn, int rfd)
./tls/s2n_connection.c:int s2n_connection_set_write_fd(struct s2n_connection *conn, int wfd)
./tls/s2n_connection.c:int s2n_connection_set_fd(struct s2n_connection *conn, int fd)
./tls/s2n_connection.c:uint64_t s2n_connection_get_wire_bytes_in(struct s2n_connection *conn)
./tls/s2n_connection.c:uint64_t s2n_connection_get_wire_bytes_out(struct s2n_connection *conn)
./tls/s2n_connection.c:const char *s2n_connection_get_cipher(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_get_client_protocol_version(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_get_server_protocol_version(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_get_actual_protocol_version(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_get_client_hello_version(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_get_alert(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_set_server_name(struct s2n_connection *conn, const char *server_name)
./tls/s2n_connection.c:const char *s2n_get_server_name(struct s2n_connection *conn)
./tls/s2n_connection.c:const char *s2n_get_application_protocol(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_set_blinding(struct s2n_connection *conn, s2n_blinding blinding)
./tls/s2n_connection.c:int64_t s2n_connection_get_delay(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_kill(struct s2n_connection *conn)
./tls/s2n_connection.c:const uint8_t *s2n_connection_get_ocsp_response(struct s2n_connection *conn, uint32_t *length)
./tls/s2n_connection.c:int s2n_connection_prefer_throughput(struct s2n_connection *conn)
./tls/s2n_connection.c:int s2n_connection_prefer_low_latency(struct s2n_connection *conn)
 
./tls/s2n_handshake.c:int s2n_handshake_write_header(struct s2n_connection *conn, uint8_t message_type)
./tls/s2n_handshake.c:int s2n_handshake_finish_header(struct s2n_connection *conn)
./tls/s2n_handshake.c:int s2n_handshake_parse_header(struct s2n_connection *conn, uint8_t *message_type, uint32_t *length)
 
./tls/s2n_handshake_io.c:static int s2n_conn_update_handshake_hashes(struct s2n_connection *conn, struct s2n_blob *data)
./tls/s2n_handshake_io.c:static int handshake_write_io(struct s2n_connection *conn)
./tls/s2n_handshake_io.c:static int read_full_handshake_message(struct s2n_connection *conn, uint8_t *message_type)
./tls/s2n_handshake_io.c:static int handshake_read_io(struct s2n_connection *conn)
./tls/s2n_handshake_io.c:int s2n_negotiate(struct s2n_connection *conn, s2n_blocked_status *blocked)
 
./tls/s2n_ocsp_stapling.c:int s2n_server_status_send(struct s2n_connection *conn)
./tls/s2n_ocsp_stapling.c:int s2n_server_status_recv(struct s2n_connection *conn)
 
./tls/s2n_prf.c:static int s2n_sslv3_prf(union s2n_prf_working_space *ws, struct s2n_blob *secret, struct s2n_blob *seed_a, struct s2n_blob *seed_b, struct s2n_blob *out)
./tls/s2n_prf.c:static int s2n_prf(struct s2n_connection *conn, struct s2n_blob *secret, struct s2n_blob *label, struct s2n_blob *seed_a, struct s2n_blob *seed_b, struct s2n_blob *out)
./tls/s2n_prf.c:int s2n_prf_master_secret(struct s2n_connection *conn, struct s2n_blob *premaster_secret)
./tls/s2n_prf.c:static int s2n_sslv3_finished(struct s2n_connection *conn, uint8_t prefix[4], struct s2n_hash_state *md5, struct s2n_hash_state *sha1, uint8_t *out)
./tls/s2n_prf.c:static int s2n_sslv3_client_finished(struct s2n_connection *conn)
./tls/s2n_prf.c:static int s2n_sslv3_server_finished(struct s2n_connection *conn)
./tls/s2n_prf.c:int s2n_prf_client_finished(struct s2n_connection *conn)
./tls/s2n_prf.c:int s2n_prf_server_finished(struct s2n_connection *conn)
./tls/s2n_prf.c:int s2n_prf_key_expansion(struct s2n_connection *conn)
 
./tls/s2n_record_read.c:int s2n_sslv2_record_header_parse(struct s2n_connection *conn, uint8_t *record_type, uint8_t *client_protocol_version, uint16_t *fragment_length)
./tls/s2n_record_read.c:int s2n_record_header_parse(struct s2n_connection *conn, uint8_t *content_type, uint16_t *fragment_length)
./tls/s2n_record_read.c:int s2n_record_parse(struct s2n_connection *conn)
 
./tls/s2n_record_write.c:static uint16_t overhead(struct s2n_connection *conn)
./tls/s2n_record_write.c:int s2n_record_max_write_payload_size(struct s2n_connection *conn)
./tls/s2n_record_write.c:int s2n_record_write(struct s2n_connection *conn, uint8_t content_type, struct s2n_blob *in)
 
./tls/s2n_recv.c:int s2n_read_full_record(struct s2n_connection *conn, uint8_t *record_type, int *isSSLv2)
./tls/s2n_recv.c:ssize_t s2n_recv(struct s2n_connection *conn, void *buf, ssize_t size, s2n_blocked_status *blocked)
 
./tls/s2n_send.c:int s2n_flush(struct s2n_connection *conn, s2n_blocked_status *blocked)
./tls/s2n_send.c:ssize_t s2n_send(struct s2n_connection *conn, void *buf, ssize_t size, s2n_blocked_status *blocked)
 
./tls/s2n_server_ccs.c:int s2n_server_ccs_recv(struct s2n_connection *conn)
./tls/s2n_server_ccs.c:int s2n_server_ccs_send(struct s2n_connection *conn)
 
./tls/s2n_server_cert.c:int s2n_server_cert_recv(struct s2n_connection *conn)
./tls/s2n_server_cert.c:int s2n_server_cert_send(struct s2n_connection *conn)
 
./tls/s2n_server_done.c:int s2n_server_done_recv(struct s2n_connection *conn)
./tls/s2n_server_done.c:int s2n_server_done_send(struct s2n_connection *conn)
 
./tls/s2n_server_extensions.c:int s2n_server_extensions_send(struct s2n_connection *conn, struct s2n_stuffer *out)
./tls/s2n_server_extensions.c:int s2n_server_extensions_recv(struct s2n_connection *conn, struct s2n_blob *extensions)
./tls/s2n_server_extensions.c:int s2n_server_recv_alpn(struct s2n_connection *conn, struct s2n_stuffer *extension)
./tls/s2n_server_extensions.c:int s2n_server_recv_status_request(struct s2n_connection *conn, struct s2n_stuffer *extension)
 
./tls/s2n_server_finished.c:int s2n_server_finished_recv(struct s2n_connection *conn)
./tls/s2n_server_finished.c:int s2n_server_finished_send(struct s2n_connection *conn)
 
./tls/s2n_server_hello.c:int s2n_server_hello_recv(struct s2n_connection *conn)
./tls/s2n_server_hello.c:int s2n_server_hello_send(struct s2n_connection *conn)
 
./tls/s2n_server_key_exchange.c:int s2n_server_key_recv(struct s2n_connection *conn)
./tls/s2n_server_key_exchange.c:static int s2n_ecdhe_server_key_recv(struct s2n_connection *conn)
./tls/s2n_server_key_exchange.c:static int s2n_dhe_server_key_recv(struct s2n_connection *conn)
./tls/s2n_server_key_exchange.c:int s2n_server_key_send(struct s2n_connection *conn)
./tls/s2n_server_key_exchange.c:static int s2n_ecdhe_server_key_send(struct s2n_connection *conn)
./tls/s2n_server_key_exchange.c:static int s2n_dhe_server_key_send(struct s2n_connection *conn)
 
 
./utils/s2n_blob.c:int s2n_blob_init(struct s2n_blob *b, uint8_t *data, uint32_t size)
./utils/s2n_blob.c:int s2n_blob_zero(struct s2n_blob *b)
 
./utils/s2n_mem.c:int s2n_mem_init(void)
./utils/s2n_mem.c:int s2n_alloc(struct s2n_blob *b, uint32_t size)
./utils/s2n_mem.c:int s2n_realloc(struct s2n_blob *b, uint32_t size)
./utils/s2n_mem.c:int s2n_free(struct s2n_blob *b)
 
./utils/s2n_random.c:void s2n_on_fork(void)
./utils/s2n_random.c:static inline int s2n_defend_if_forked(void)
./utils/s2n_random.c:int s2n_get_public_random_data(struct s2n_blob *blob)
./utils/s2n_random.c:int s2n_get_private_random_data(struct s2n_blob *blob)
./utils/s2n_random.c:int s2n_get_public_random_bytes_used(void)
./utils/s2n_random.c:int s2n_get_private_random_bytes_used(void)
./utils/s2n_random.c:int s2n_get_urandom_data(struct s2n_blob *blob)
./utils/s2n_random.c:int64_t s2n_public_random(int64_t max)
./utils/s2n_random.c:int s2n_openssl_compat_rand(unsigned char *buf, int num)
./utils/s2n_random.c:int s2n_openssl_compat_status(void)
./utils/s2n_random.c:int s2n_openssl_compat_init(ENGINE *unused)
./utils/s2n_random.c:int s2n_init(void)
./utils/s2n_random.c:int s2n_cleanup(void)
 
./utils/s2n_safety.c:pid_t s2n_actual_getpid()
./utils/s2n_safety.c:int s2n_constant_time_equals(const uint8_t *a, const uint8_t *b, uint32_t len)
./utils/s2n_safety.c:int s2n_constant_time_copy_or_dont(uint8_t *a, const uint8_t *b, uint32_t len, uint8_t dont)
 
./utils/s2n_timer.c:int s2n_timer_start(struct s2n_config *config, struct s2n_timer *timer)
./utils/s2n_timer.c:int s2n_timer_elapsed(struct s2n_config *config, struct s2n_timer *timer, uint64_t *nanoseconds)
./utils/s2n_timer.c:int s2n_timer_reset(struct s2n_config *config, struct s2n_timer *timer, uint64_t *nanoseconds)
 

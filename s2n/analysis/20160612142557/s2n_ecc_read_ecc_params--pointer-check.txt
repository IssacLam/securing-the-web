CBMC version 5.4 64-bit x86_64 macos
Parsing ./crypto/s2n_ecc.c
Converting
Type-checking s2n_ecc
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 1 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 2 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 3 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 4 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 5 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 6 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 7 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 8 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 9 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Not unwinding loop s2n_ecc_find_supported_curve.0 iteration 10 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.1 iteration 1 (10 max) file ./crypto/s2n_ecc.c line 284 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 1 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 2 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 3 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 4 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 5 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 6 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 7 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 8 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.0 iteration 9 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Not unwinding loop s2n_ecc_find_supported_curve.0 iteration 10 (10 max) file ./crypto/s2n_ecc.c line 286 function s2n_ecc_find_supported_curve thread 0
Unwinding loop s2n_ecc_find_supported_curve.1 iteration 2 (10 max) file ./crypto/s2n_ecc.c line 284 function s2n_ecc_find_supported_curve thread 0
size of program expression: 2676 steps
simple slicing removed 196 assignments
Generated 280 VCC(s), 155 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
69112 variables, 93763 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.17s
Building error trace

Counterexample:

State 19 file ./crypto/s2n_ecc.c line 81 thread 0
----------------------------------------------------
  server_ecc_params=INVALID-245 (1111010100000000000000000000000000000000000000000000000000000000)

State 20 file ./crypto/s2n_ecc.c line 81 thread 0
----------------------------------------------------
  in=((struct s2n_stuffer { struct s2n_blob { unsigned char *data; unsigned int size; unsigned int allocated; unsigned int mlocked : 1; unsigned __CPROVER_bitvector[7] $bit_field_pad0 : 7; unsigned __CPROVER_bitvector[56] $pad0; } blob; unsigned int read_cursor; unsigned int write_cursor; unsigned int wiped : 1; unsigned int alloced : 1; unsigned int growable : 1; unsigned int tainted : 1; unsigned __CPROVER_bitvector[4] $bit_field_pad0 : 4; unsigned __CPROVER_bitvector[56] $pad0; } *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 21 file ./crypto/s2n_ecc.c line 81 thread 0
----------------------------------------------------
  read=INVALID (0000000100000000000000000000000000000000000000000000000000000000)

State 22 file ./crypto/s2n_ecc.c line 83 function s2n_ecc_read_ecc_params thread 0
----------------------------------------------------
  curve_type=67 (01000011)

State 23 file ./crypto/s2n_ecc.c line 84 function s2n_ecc_read_ecc_params thread 0
----------------------------------------------------
  point_length=0 (00000000)

State 24 file ./crypto/s2n_ecc.c line 85 function s2n_ecc_read_ecc_params thread 0
----------------------------------------------------
  point_blob={ .data=((unsigned char *)NULL), .size=0u, .allocated=0u,
    .mlocked=0u, .$bit_field_pad0=0, .$pad0=0 } ({ 0000000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

State 25 file ./crypto/s2n_ecc.c line 85 function s2n_ecc_read_ecc_params thread 0
----------------------------------------------------
  curve_blob={ .data=((unsigned char *)NULL), .size=0u, .allocated=0u,
    .mlocked=0u, .$bit_field_pad0=0, .$pad0=0 } ({ 0000000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000, 00000000000000000000000000000000, 0, 0000000, 00000000000000000000000000000000000000000000000000000000 })

State 26 file ./crypto/s2n_ecc.c line 86 function s2n_ecc_read_ecc_params thread 0
----------------------------------------------------
  point=((struct ec_point_st *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

Violated property:
  file ./crypto/s2n_ecc.c line 89 function s2n_ecc_read_ecc_params
  dereference failure: pointer invalid in *read
  !INVALID-POINTER(read)

VERIFICATION FAILED

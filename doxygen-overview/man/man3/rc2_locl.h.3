.TH "s2n-master/libcrypto-build/openssl/crypto/rc2/rc2_locl.h" 3 "Fri Aug 19 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n-master/libcrypto-build/openssl/crypto/rc2/rc2_locl.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBc2l\fP(\fBc\fP,  l)            "
.br
.ti -1c
.RI "#define \fBc2ln\fP(\fBc\fP,  l1,  l2,  n)"
.br
.ti -1c
.RI "#define \fBl2c\fP(l,  \fBc\fP)            "
.br
.ti -1c
.RI "#define \fBl2cn\fP(l1,  l2,  \fBc\fP,  n)"
.br
.ti -1c
.RI "#define \fBn2ln\fP(\fBc\fP,  l1,  l2,  n)"
.br
.ti -1c
.RI "#define \fBl2nn\fP(l1,  l2,  \fBc\fP,  n)"
.br
.ti -1c
.RI "#define \fBn2l\fP(\fBc\fP,  l)            "
.br
.ti -1c
.RI "#define \fBl2n\fP(l,  \fBc\fP)            "
.br
.ti -1c
.RI "#define \fBC_RC2\fP(n)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define c2l(\fBc\fP, l)"
\fBValue:\fP
.PP
.nf
(l =((unsigned long)(*((c)++)))    , \
                         l|=((unsigned long)(*((c)++)))<< 8L, \
                         l|=((unsigned long)(*((c)++)))<<16L, \
                         l|=((unsigned long)(*((c)++)))<<24L)
.fi
.PP
Definition at line 60 of file rc2_locl\&.h\&.
.SS "#define c2ln(\fBc\fP, l1, l2, n)"
\fBValue:\fP
.PP
.nf
{ \
                        c+=n; \
                        l1=l2=0; \
                        switch (n) { \
                        case 8: l2 =((unsigned long)(*(--(c))))<<24L; \
                        case 7: l2|=((unsigned long)(*(--(c))))<<16L; \
                        case 6: l2|=((unsigned long)(*(--(c))))<< 8L; \
                        case 5: l2|=((unsigned long)(*(--(c))));     \
                        case 4: l1 =((unsigned long)(*(--(c))))<<24L; \
                        case 3: l1|=((unsigned long)(*(--(c))))<<16L; \
                        case 2: l1|=((unsigned long)(*(--(c))))<< 8L; \
                        case 1: l1|=((unsigned long)(*(--(c))));     \
                                } \
                        }
.fi
.PP
Definition at line 67 of file rc2_locl\&.h\&.
.SS "#define l2c(l, \fBc\fP)"
\fBValue:\fP
.PP
.nf
(*((c)++)=(unsigned char)(((l)     )&0xff), \
                         *((c)++)=(unsigned char)(((l)>> 8L)&0xff), \
                         *((c)++)=(unsigned char)(((l)>>16L)&0xff), \
                         *((c)++)=(unsigned char)(((l)>>24L)&0xff))
.fi
.PP
Definition at line 83 of file rc2_locl\&.h\&.
.SS "#define l2cn(l1, l2, \fBc\fP, n)"
\fBValue:\fP
.PP
.nf
{ \
                        c+=n; \
                        switch (n) { \
                        case 8: *(--(c))=(unsigned char)(((l2)>>24L)&0xff); \
                        case 7: *(--(c))=(unsigned char)(((l2)>>16L)&0xff); \
                        case 6: *(--(c))=(unsigned char)(((l2)>> 8L)&0xff); \
                        case 5: *(--(c))=(unsigned char)(((l2)     )&0xff); \
                        case 4: *(--(c))=(unsigned char)(((l1)>>24L)&0xff); \
                        case 3: *(--(c))=(unsigned char)(((l1)>>16L)&0xff); \
                        case 2: *(--(c))=(unsigned char)(((l1)>> 8L)&0xff); \
                        case 1: *(--(c))=(unsigned char)(((l1)     )&0xff); \
                                } \
                        }
.fi
.PP
Definition at line 90 of file rc2_locl\&.h\&.
.SS "#define n2ln(\fBc\fP, l1, l2, n)"
\fBValue:\fP
.PP
.nf
{ \
                        c+=n; \
                        l1=l2=0; \
                        switch (n) { \
                        case 8: l2 =((unsigned long)(*(--(c))))    ; \
                        case 7: l2|=((unsigned long)(*(--(c))))<< 8; \
                        case 6: l2|=((unsigned long)(*(--(c))))<<16; \
                        case 5: l2|=((unsigned long)(*(--(c))))<<24; \
                        case 4: l1 =((unsigned long)(*(--(c))))    ; \
                        case 3: l1|=((unsigned long)(*(--(c))))<< 8; \
                        case 2: l1|=((unsigned long)(*(--(c))))<<16; \
                        case 1: l1|=((unsigned long)(*(--(c))))<<24; \
                                } \
                        }
.fi
.PP
Definition at line 105 of file rc2_locl\&.h\&.
.SS "#define l2nn(l1, l2, \fBc\fP, n)"
\fBValue:\fP
.PP
.nf
{ \
                        c+=n; \
                        switch (n) { \
                        case 8: *(--(c))=(unsigned char)(((l2)    )&0xff); \
                        case 7: *(--(c))=(unsigned char)(((l2)>> 8)&0xff); \
                        case 6: *(--(c))=(unsigned char)(((l2)>>16)&0xff); \
                        case 5: *(--(c))=(unsigned char)(((l2)>>24)&0xff); \
                        case 4: *(--(c))=(unsigned char)(((l1)    )&0xff); \
                        case 3: *(--(c))=(unsigned char)(((l1)>> 8)&0xff); \
                        case 2: *(--(c))=(unsigned char)(((l1)>>16)&0xff); \
                        case 1: *(--(c))=(unsigned char)(((l1)>>24)&0xff); \
                                } \
                        }
.fi
.PP
Definition at line 121 of file rc2_locl\&.h\&.
.SS "#define n2l(\fBc\fP, l)"
\fBValue:\fP
.PP
.nf
(l =((unsigned long)(*((c)++)))<<24L, \
                         l|=((unsigned long)(*((c)++)))<<16L, \
                         l|=((unsigned long)(*((c)++)))<< 8L, \
                         l|=((unsigned long)(*((c)++))))
.fi
.PP
Definition at line 136 of file rc2_locl\&.h\&.
.SS "#define l2n(l, \fBc\fP)"
\fBValue:\fP
.PP
.nf
(*((c)++)=(unsigned char)(((l)>>24L)&0xff), \
                         *((c)++)=(unsigned char)(((l)>>16L)&0xff), \
                         *((c)++)=(unsigned char)(((l)>> 8L)&0xff), \
                         *((c)++)=(unsigned char)(((l)     )&0xff))
.fi
.PP
Definition at line 142 of file rc2_locl\&.h\&.
.SS "#define C_RC2(n)"
\fBValue:\fP
.PP
.nf
t=(x0+(x1& ~x3)+(x2&x3)+ *(p0++))&0xffff; \
        x0=(t<<1)|(t>>15); \
        t=(x1+(x2& ~x0)+(x3&x0)+ *(p0++))&0xffff; \
        x1=(t<<2)|(t>>14); \
        t=(x2+(x3& ~x1)+(x0&x1)+ *(p0++))&0xffff; \
        x2=(t<<3)|(t>>13); \
        t=(x3+(x0& ~x2)+(x1&x2)+ *(p0++))&0xffff; \
        x3=(t<<5)|(t>>11);
.fi
.PP
Definition at line 147 of file rc2_locl\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

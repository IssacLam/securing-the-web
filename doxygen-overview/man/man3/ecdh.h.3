.TH "s2n-master/libcrypto-build/openssl/include/openssl/ecdh.h" 3 "Fri Aug 19 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n-master/libcrypto-build/openssl/include/openssl/ecdh.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <openssl/ec\&.h>\fP
.br
\fC#include <openssl/ossl_typ\&.h>\fP
.br
\fC#include <openssl/bn\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBEC_FLAG_COFACTOR_ECDH\fP   0x1000"
.br
.ti -1c
.RI "#define \fBECDH_F_ECDH_CHECK\fP   102"
.br
.ti -1c
.RI "#define \fBECDH_F_ECDH_COMPUTE_KEY\fP   100"
.br
.ti -1c
.RI "#define \fBECDH_F_ECDH_DATA_NEW_METHOD\fP   101"
.br
.ti -1c
.RI "#define \fBECDH_R_KDF_FAILED\fP   102"
.br
.ti -1c
.RI "#define \fBECDH_R_NON_FIPS_METHOD\fP   103"
.br
.ti -1c
.RI "#define \fBECDH_R_NO_PRIVATE_VALUE\fP   100"
.br
.ti -1c
.RI "#define \fBECDH_R_POINT_ARITHMETIC_FAILURE\fP   101"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const \fBECDH_METHOD\fP * \fBECDH_OpenSSL\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBECDH_set_default_method\fP (const \fBECDH_METHOD\fP *)"
.br
.ti -1c
.RI "const \fBECDH_METHOD\fP * \fBECDH_get_default_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBECDH_set_method\fP (\fBEC_KEY\fP *, const \fBECDH_METHOD\fP *)"
.br
.ti -1c
.RI "int \fBECDH_compute_key\fP (\fBvoid\fP *out, size_t outlen, const \fBEC_POINT\fP *pub_key, \fBEC_KEY\fP *ecdh, \fBvoid\fP *(*KDF)(const \fBvoid\fP *in, size_t inlen,                                                                                                                                                                                           \fBvoid\fP *out, size_t *outlen))"
.br
.ti -1c
.RI "int \fBECDH_get_ex_new_index\fP (long argl, \fBvoid\fP *argp, \fBCRYPTO_EX_new\fP *new_func, \fBCRYPTO_EX_dup\fP *dup_func, \fBCRYPTO_EX_free\fP *\fBfree_func\fP)"
.br
.ti -1c
.RI "int \fBECDH_set_ex_data\fP (\fBEC_KEY\fP *d, int idx, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBECDH_get_ex_data\fP (\fBEC_KEY\fP *d, int idx)"
.br
.ti -1c
.RI "int \fBECDH_KDF_X9_62\fP (unsigned char *out, size_t outlen, const unsigned char *Z, size_t Zlen, const unsigned char *sinfo, size_t sinfolen, const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "\fBvoid\fP \fBERR_load_ECDH_strings\fP (\fBvoid\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define EC_FLAG_COFACTOR_ECDH   0x1000"

.PP
Definition at line 88 of file ecdh\&.h\&.
.SS "#define ECDH_F_ECDH_CHECK   102"

.PP
Definition at line 121 of file ecdh\&.h\&.
.SS "#define ECDH_F_ECDH_COMPUTE_KEY   100"

.PP
Definition at line 122 of file ecdh\&.h\&.
.SS "#define ECDH_F_ECDH_DATA_NEW_METHOD   101"

.PP
Definition at line 123 of file ecdh\&.h\&.
.SS "#define ECDH_R_KDF_FAILED   102"

.PP
Definition at line 126 of file ecdh\&.h\&.
.SS "#define ECDH_R_NON_FIPS_METHOD   103"

.PP
Definition at line 127 of file ecdh\&.h\&.
.SS "#define ECDH_R_NO_PRIVATE_VALUE   100"

.PP
Definition at line 128 of file ecdh\&.h\&.
.SS "#define ECDH_R_POINT_ARITHMETIC_FAILURE   101"

.PP
Definition at line 129 of file ecdh\&.h\&.
.SH "Function Documentation"
.PP 
.SS "const \fBECDH_METHOD\fP* ECDH_OpenSSL (\fBvoid\fP)"

.SS "\fBvoid\fP ECDH_set_default_method (const \fBECDH_METHOD\fP *)"

.SS "const \fBECDH_METHOD\fP* ECDH_get_default_method (\fBvoid\fP)"

.SS "int ECDH_set_method (\fBEC_KEY\fP *, const \fBECDH_METHOD\fP *)"

.SS "int ECDH_compute_key (\fBvoid\fP * out, size_t outlen, const \fBEC_POINT\fP * pub_key, \fBEC_KEY\fP * ecdh, \fBvoid\fP *(*)(const \fBvoid\fP *in, size_t inlenfBvoid\fP *out, size_t *outlen) KDF)"

.SS "int ECDH_get_ex_new_index (long argl, \fBvoid\fP * argp, \fBCRYPTO_EX_new\fP * new_func, \fBCRYPTO_EX_dup\fP * dup_func, \fBCRYPTO_EX_free\fP * free_func)"

.SS "int ECDH_set_ex_data (\fBEC_KEY\fP * d, int idx, \fBvoid\fP * arg)"

.SS "\fBvoid\fP* ECDH_get_ex_data (\fBEC_KEY\fP * d, int idx)"

.SS "int ECDH_KDF_X9_62 (unsigned char * out, size_t outlen, const unsigned char * Z, size_t Zlen, const unsigned char * sinfo, size_t sinfolen, const \fBEVP_MD\fP * md)"

.SS "\fBvoid\fP ERR_load_ECDH_strings (\fBvoid\fP)"

.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

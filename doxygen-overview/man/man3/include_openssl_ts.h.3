.TH "ts.h" 3 "Fri Aug 12 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ts.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/opensslconf\&.h>\fP
.br
\fC#include <openssl/symhacks\&.h>\fP
.br
\fC#include <openssl/buffer\&.h>\fP
.br
\fC#include <openssl/evp\&.h>\fP
.br
\fC#include <openssl/bio\&.h>\fP
.br
\fC#include <openssl/stack\&.h>\fP
.br
\fC#include <openssl/asn1\&.h>\fP
.br
\fC#include <openssl/safestack\&.h>\fP
.br
\fC#include <openssl/rsa\&.h>\fP
.br
\fC#include <openssl/dsa\&.h>\fP
.br
\fC#include <openssl/dh\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/x509v3\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBTS_msg_imprint_st\fP"
.br
.ti -1c
.RI "struct \fBTS_req_st\fP"
.br
.ti -1c
.RI "struct \fBTS_accuracy_st\fP"
.br
.ti -1c
.RI "struct \fBTS_tst_info_st\fP"
.br
.ti -1c
.RI "struct \fBTS_status_info_st\fP"
.br
.ti -1c
.RI "struct \fBTS_resp_st\fP"
.br
.ti -1c
.RI "struct \fBESS_issuer_serial\fP"
.br
.ti -1c
.RI "struct \fBESS_cert_id\fP"
.br
.ti -1c
.RI "struct \fBESS_signing_cert\fP"
.br
.ti -1c
.RI "struct \fBTS_resp_ctx\fP"
.br
.ti -1c
.RI "struct \fBTS_verify_ctx\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTS_STATUS_GRANTED\fP   0"
.br
.ti -1c
.RI "#define \fBTS_STATUS_GRANTED_WITH_MODS\fP   1"
.br
.ti -1c
.RI "#define \fBTS_STATUS_REJECTION\fP   2"
.br
.ti -1c
.RI "#define \fBTS_STATUS_WAITING\fP   3"
.br
.ti -1c
.RI "#define \fBTS_STATUS_REVOCATION_WARNING\fP   4"
.br
.ti -1c
.RI "#define \fBTS_STATUS_REVOCATION_NOTIFICATION\fP   5"
.br
.ti -1c
.RI "#define \fBTS_INFO_BAD_ALG\fP   0"
.br
.ti -1c
.RI "#define \fBTS_INFO_BAD_REQUEST\fP   2"
.br
.ti -1c
.RI "#define \fBTS_INFO_BAD_DATA_FORMAT\fP   5"
.br
.ti -1c
.RI "#define \fBTS_INFO_TIME_NOT_AVAILABLE\fP   14"
.br
.ti -1c
.RI "#define \fBTS_INFO_UNACCEPTED_POLICY\fP   15"
.br
.ti -1c
.RI "#define \fBTS_INFO_UNACCEPTED_EXTENSION\fP   16"
.br
.ti -1c
.RI "#define \fBTS_INFO_ADD_INFO_NOT_AVAILABLE\fP   17"
.br
.ti -1c
.RI "#define \fBTS_INFO_SYSTEM_FAILURE\fP   25"
.br
.ti -1c
.RI "#define \fBTS_TSA_NAME\fP   0x01"
.br
.ti -1c
.RI "#define \fBTS_ORDERING\fP   0x02"
.br
.ti -1c
.RI "#define \fBTS_ESS_CERT_ID_CHAIN\fP   0x04"
.br
.ti -1c
.RI "#define \fBTS_MAX_CLOCK_PRECISION_DIGITS\fP   6"
.br
.ti -1c
.RI "#define \fBTS_VFY_SIGNATURE\fP   (1u << 0)"
.br
.ti -1c
.RI "#define \fBTS_VFY_VERSION\fP   (1u << 1)"
.br
.ti -1c
.RI "#define \fBTS_VFY_POLICY\fP   (1u << 2)"
.br
.ti -1c
.RI "#define \fBTS_VFY_IMPRINT\fP   (1u << 3)"
.br
.ti -1c
.RI "#define \fBTS_VFY_DATA\fP   (1u << 4)"
.br
.ti -1c
.RI "#define \fBTS_VFY_NONCE\fP   (1u << 5)"
.br
.ti -1c
.RI "#define \fBTS_VFY_SIGNER\fP   (1u << 6)"
.br
.ti -1c
.RI "#define \fBTS_VFY_TSA_NAME\fP   (1u << 7)"
.br
.ti -1c
.RI "#define \fBTS_VFY_ALL_IMPRINT\fP"
.br
.ti -1c
.RI "#define \fBTS_VFY_ALL_DATA\fP"
.br
.ti -1c
.RI "#define \fBTS_F_D2I_TS_RESP\fP   147"
.br
.ti -1c
.RI "#define \fBTS_F_DEF_SERIAL_CB\fP   110"
.br
.ti -1c
.RI "#define \fBTS_F_DEF_TIME_CB\fP   111"
.br
.ti -1c
.RI "#define \fBTS_F_ESS_ADD_SIGNING_CERT\fP   112"
.br
.ti -1c
.RI "#define \fBTS_F_ESS_CERT_ID_NEW_INIT\fP   113"
.br
.ti -1c
.RI "#define \fBTS_F_ESS_SIGNING_CERT_NEW_INIT\fP   114"
.br
.ti -1c
.RI "#define \fBTS_F_INT_TS_RESP_VERIFY_TOKEN\fP   149"
.br
.ti -1c
.RI "#define \fBTS_F_PKCS7_TO_TS_TST_INFO\fP   148"
.br
.ti -1c
.RI "#define \fBTS_F_TS_ACCURACY_SET_MICROS\fP   115"
.br
.ti -1c
.RI "#define \fBTS_F_TS_ACCURACY_SET_MILLIS\fP   116"
.br
.ti -1c
.RI "#define \fBTS_F_TS_ACCURACY_SET_SECONDS\fP   117"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CHECK_IMPRINTS\fP   100"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CHECK_NONCES\fP   101"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CHECK_POLICY\fP   102"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CHECK_SIGNING_CERTS\fP   103"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CHECK_STATUS_INFO\fP   104"
.br
.ti -1c
.RI "#define \fBTS_F_TS_COMPUTE_IMPRINT\fP   145"
.br
.ti -1c
.RI "#define \fBTS_F_TS_CONF_SET_DEFAULT_ENGINE\fP   146"
.br
.ti -1c
.RI "#define \fBTS_F_TS_GET_STATUS_TEXT\fP   105"
.br
.ti -1c
.RI "#define \fBTS_F_TS_MSG_IMPRINT_SET_ALGO\fP   118"
.br
.ti -1c
.RI "#define \fBTS_F_TS_REQ_SET_MSG_IMPRINT\fP   119"
.br
.ti -1c
.RI "#define \fBTS_F_TS_REQ_SET_NONCE\fP   120"
.br
.ti -1c
.RI "#define \fBTS_F_TS_REQ_SET_POLICY_ID\fP   121"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CREATE_RESPONSE\fP   122"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CREATE_TST_INFO\fP   123"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_ADD_FAILURE_INFO\fP   124"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_ADD_MD\fP   125"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_ADD_POLICY\fP   126"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_NEW\fP   127"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_SET_ACCURACY\fP   128"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_SET_CERTS\fP   129"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_SET_DEF_POLICY\fP   130"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_SET_SIGNER_CERT\fP   131"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_CTX_SET_STATUS_INFO\fP   132"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_GET_POLICY\fP   133"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_SET_GENTIME_WITH_PRECISION\fP   134"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_SET_STATUS_INFO\fP   135"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_SET_TST_INFO\fP   150"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_SIGN\fP   136"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_VERIFY_SIGNATURE\fP   106"
.br
.ti -1c
.RI "#define \fBTS_F_TS_RESP_VERIFY_TOKEN\fP   107"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_ACCURACY\fP   137"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_MSG_IMPRINT\fP   138"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_NONCE\fP   139"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_POLICY_ID\fP   140"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_SERIAL\fP   141"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_TIME\fP   142"
.br
.ti -1c
.RI "#define \fBTS_F_TS_TST_INFO_SET_TSA\fP   143"
.br
.ti -1c
.RI "#define \fBTS_F_TS_VERIFY\fP   108"
.br
.ti -1c
.RI "#define \fBTS_F_TS_VERIFY_CERT\fP   109"
.br
.ti -1c
.RI "#define \fBTS_F_TS_VERIFY_CTX_NEW\fP   144"
.br
.ti -1c
.RI "#define \fBTS_R_BAD_PKCS7_TYPE\fP   132"
.br
.ti -1c
.RI "#define \fBTS_R_BAD_TYPE\fP   133"
.br
.ti -1c
.RI "#define \fBTS_R_CERTIFICATE_VERIFY_ERROR\fP   100"
.br
.ti -1c
.RI "#define \fBTS_R_COULD_NOT_SET_ENGINE\fP   127"
.br
.ti -1c
.RI "#define \fBTS_R_COULD_NOT_SET_TIME\fP   115"
.br
.ti -1c
.RI "#define \fBTS_R_D2I_TS_RESP_INT_FAILED\fP   128"
.br
.ti -1c
.RI "#define \fBTS_R_DETACHED_CONTENT\fP   134"
.br
.ti -1c
.RI "#define \fBTS_R_ESS_ADD_SIGNING_CERT_ERROR\fP   116"
.br
.ti -1c
.RI "#define \fBTS_R_ESS_SIGNING_CERTIFICATE_ERROR\fP   101"
.br
.ti -1c
.RI "#define \fBTS_R_INVALID_NULL_POINTER\fP   102"
.br
.ti -1c
.RI "#define \fBTS_R_INVALID_SIGNER_CERTIFICATE_PURPOSE\fP   117"
.br
.ti -1c
.RI "#define \fBTS_R_MESSAGE_IMPRINT_MISMATCH\fP   103"
.br
.ti -1c
.RI "#define \fBTS_R_NONCE_MISMATCH\fP   104"
.br
.ti -1c
.RI "#define \fBTS_R_NONCE_NOT_RETURNED\fP   105"
.br
.ti -1c
.RI "#define \fBTS_R_NO_CONTENT\fP   106"
.br
.ti -1c
.RI "#define \fBTS_R_NO_TIME_STAMP_TOKEN\fP   107"
.br
.ti -1c
.RI "#define \fBTS_R_PKCS7_ADD_SIGNATURE_ERROR\fP   118"
.br
.ti -1c
.RI "#define \fBTS_R_PKCS7_ADD_SIGNED_ATTR_ERROR\fP   119"
.br
.ti -1c
.RI "#define \fBTS_R_PKCS7_TO_TS_TST_INFO_FAILED\fP   129"
.br
.ti -1c
.RI "#define \fBTS_R_POLICY_MISMATCH\fP   108"
.br
.ti -1c
.RI "#define \fBTS_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE\fP   120"
.br
.ti -1c
.RI "#define \fBTS_R_RESPONSE_SETUP_ERROR\fP   121"
.br
.ti -1c
.RI "#define \fBTS_R_SIGNATURE_FAILURE\fP   109"
.br
.ti -1c
.RI "#define \fBTS_R_THERE_MUST_BE_ONE_SIGNER\fP   110"
.br
.ti -1c
.RI "#define \fBTS_R_TIME_SYSCALL_ERROR\fP   122"
.br
.ti -1c
.RI "#define \fBTS_R_TOKEN_NOT_PRESENT\fP   130"
.br
.ti -1c
.RI "#define \fBTS_R_TOKEN_PRESENT\fP   131"
.br
.ti -1c
.RI "#define \fBTS_R_TSA_NAME_MISMATCH\fP   111"
.br
.ti -1c
.RI "#define \fBTS_R_TSA_UNTRUSTED\fP   112"
.br
.ti -1c
.RI "#define \fBTS_R_TST_INFO_SETUP_ERROR\fP   123"
.br
.ti -1c
.RI "#define \fBTS_R_TS_DATASIGN\fP   124"
.br
.ti -1c
.RI "#define \fBTS_R_UNACCEPTABLE_POLICY\fP   125"
.br
.ti -1c
.RI "#define \fBTS_R_UNSUPPORTED_MD_ALGORITHM\fP   126"
.br
.ti -1c
.RI "#define \fBTS_R_UNSUPPORTED_VERSION\fP   113"
.br
.ti -1c
.RI "#define \fBTS_R_WRONG_CONTENT_TYPE\fP   114"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBTS_msg_imprint_st\fP \fBTS_MSG_IMPRINT\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_req_st\fP \fBTS_REQ\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_accuracy_st\fP \fBTS_ACCURACY\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_tst_info_st\fP \fBTS_TST_INFO\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_status_info_st\fP \fBTS_STATUS_INFO\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_resp_st\fP \fBTS_RESP\fP"
.br
.ti -1c
.RI "typedef struct \fBESS_issuer_serial\fP \fBESS_ISSUER_SERIAL\fP"
.br
.ti -1c
.RI "typedef struct \fBESS_cert_id\fP \fBESS_CERT_ID\fP"
.br
.ti -1c
.RI "typedef struct \fBESS_signing_cert\fP \fBESS_SIGNING_CERT\fP"
.br
.ti -1c
.RI "typedef \fBASN1_INTEGER\fP *(* \fBTS_serial_cb\fP) (struct \fBTS_resp_ctx\fP *, \fBvoid\fP *)"
.br
.ti -1c
.RI "typedef int(* \fBTS_time_cb\fP) (struct \fBTS_resp_ctx\fP *, \fBvoid\fP *, long *sec, long *usec)"
.br
.ti -1c
.RI "typedef int(* \fBTS_extension_cb\fP) (struct \fBTS_resp_ctx\fP *, \fBX509_EXTENSION\fP *, \fBvoid\fP *)"
.br
.ti -1c
.RI "typedef struct \fBTS_resp_ctx\fP \fBTS_RESP_CTX\fP"
.br
.ti -1c
.RI "typedef struct \fBTS_verify_ctx\fP \fBTS_VERIFY_CTX\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBTS_REQ\fP * \fBTS_REQ_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_REQ_free\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_REQ\fP (const \fBTS_REQ\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_REQ\fP * \fBd2i_TS_REQ\fP (\fBTS_REQ\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_REQ\fP * \fBTS_REQ_dup\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_REQ\fP * \fBd2i_TS_REQ_fp\fP (FILE *\fBfp\fP, \fBTS_REQ\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_REQ_fp\fP (FILE *\fBfp\fP, \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_REQ\fP * \fBd2i_TS_REQ_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_REQ\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_REQ_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBTS_MSG_IMPRINT_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_MSG_IMPRINT_free\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_MSG_IMPRINT\fP (const \fBTS_MSG_IMPRINT\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBd2i_TS_MSG_IMPRINT\fP (\fBTS_MSG_IMPRINT\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBTS_MSG_IMPRINT_dup\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBd2i_TS_MSG_IMPRINT_fp\fP (FILE *\fBfp\fP, \fBTS_MSG_IMPRINT\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_MSG_IMPRINT_fp\fP (FILE *\fBfp\fP, \fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBd2i_TS_MSG_IMPRINT_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_MSG_IMPRINT\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_MSG_IMPRINT_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBTS_RESP_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_free\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_RESP\fP (const \fBTS_RESP\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBd2i_TS_RESP\fP (\fBTS_RESP\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBPKCS7_to_TS_TST_INFO\fP (\fBPKCS7\fP *token)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBTS_RESP_dup\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBd2i_TS_RESP_fp\fP (FILE *\fBfp\fP, \fBTS_RESP\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_RESP_fp\fP (FILE *\fBfp\fP, \fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBd2i_TS_RESP_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_RESP\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_RESP_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_STATUS_INFO\fP * \fBTS_STATUS_INFO_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_STATUS_INFO_free\fP (\fBTS_STATUS_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_STATUS_INFO\fP (const \fBTS_STATUS_INFO\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_STATUS_INFO\fP * \fBd2i_TS_STATUS_INFO\fP (\fBTS_STATUS_INFO\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_STATUS_INFO\fP * \fBTS_STATUS_INFO_dup\fP (\fBTS_STATUS_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBTS_TST_INFO_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_TST_INFO_free\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_TST_INFO\fP (const \fBTS_TST_INFO\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBd2i_TS_TST_INFO\fP (\fBTS_TST_INFO\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBTS_TST_INFO_dup\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBd2i_TS_TST_INFO_fp\fP (FILE *\fBfp\fP, \fBTS_TST_INFO\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_TST_INFO_fp\fP (FILE *\fBfp\fP, \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBd2i_TS_TST_INFO_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_TST_INFO\fP **\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_TST_INFO_bio\fP (\fBBIO\fP *\fBfp\fP, \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_ACCURACY\fP * \fBTS_ACCURACY_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_ACCURACY_free\fP (\fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_TS_ACCURACY\fP (const \fBTS_ACCURACY\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBTS_ACCURACY\fP * \fBd2i_TS_ACCURACY\fP (\fBTS_ACCURACY\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBTS_ACCURACY\fP * \fBTS_ACCURACY_dup\fP (\fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBESS_ISSUER_SERIAL\fP * \fBESS_ISSUER_SERIAL_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBESS_ISSUER_SERIAL_free\fP (\fBESS_ISSUER_SERIAL\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_ESS_ISSUER_SERIAL\fP (const \fBESS_ISSUER_SERIAL\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBESS_ISSUER_SERIAL\fP * \fBd2i_ESS_ISSUER_SERIAL\fP (\fBESS_ISSUER_SERIAL\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBESS_ISSUER_SERIAL\fP * \fBESS_ISSUER_SERIAL_dup\fP (\fBESS_ISSUER_SERIAL\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBESS_CERT_ID\fP * \fBESS_CERT_ID_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBESS_CERT_ID_free\fP (\fBESS_CERT_ID\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_ESS_CERT_ID\fP (const \fBESS_CERT_ID\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBESS_CERT_ID\fP * \fBd2i_ESS_CERT_ID\fP (\fBESS_CERT_ID\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBESS_CERT_ID\fP * \fBESS_CERT_ID_dup\fP (\fBESS_CERT_ID\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBESS_SIGNING_CERT\fP * \fBESS_SIGNING_CERT_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBESS_SIGNING_CERT_free\fP (\fBESS_SIGNING_CERT\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBi2d_ESS_SIGNING_CERT\fP (const \fBESS_SIGNING_CERT\fP *\fBa\fP, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "\fBESS_SIGNING_CERT\fP * \fBd2i_ESS_SIGNING_CERT\fP (\fBESS_SIGNING_CERT\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBESS_SIGNING_CERT\fP * \fBESS_SIGNING_CERT_dup\fP (\fBESS_SIGNING_CERT\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBERR_load_TS_strings\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_set_version\fP (\fBTS_REQ\fP *\fBa\fP, long \fBversion\fP)"
.br
.ti -1c
.RI "long \fBTS_REQ_get_version\fP (const \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_set_msg_imprint\fP (\fBTS_REQ\fP *\fBa\fP, \fBTS_MSG_IMPRINT\fP *msg_imprint)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBTS_REQ_get_msg_imprint\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_MSG_IMPRINT_set_algo\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP, \fBX509_ALGOR\fP *alg)"
.br
.ti -1c
.RI "\fBX509_ALGOR\fP * \fBTS_MSG_IMPRINT_get_algo\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_MSG_IMPRINT_set_msg\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP, unsigned char *d, int \fBlen\fP)"
.br
.ti -1c
.RI "\fBASN1_OCTET_STRING\fP * \fBTS_MSG_IMPRINT_get_msg\fP (\fBTS_MSG_IMPRINT\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_set_policy_id\fP (\fBTS_REQ\fP *\fBa\fP, \fBASN1_OBJECT\fP *policy)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBTS_REQ_get_policy_id\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_set_nonce\fP (\fBTS_REQ\fP *\fBa\fP, const \fBASN1_INTEGER\fP *nonce)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_REQ_get_nonce\fP (const \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_set_cert_req\fP (\fBTS_REQ\fP *\fBa\fP, int cert_req)"
.br
.ti -1c
.RI "int \fBTS_REQ_get_cert_req\fP (const \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509_EXTENSION\fP)*TS_REQ_get_exts(\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_REQ_ext_free\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_get_ext_count\fP (\fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_get_ext_by_NID\fP (\fBTS_REQ\fP *\fBa\fP, int \fBnid\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_REQ_get_ext_by_OBJ\fP (\fBTS_REQ\fP *\fBa\fP, \fBASN1_OBJECT\fP *\fBobj\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_REQ_get_ext_by_critical\fP (\fBTS_REQ\fP *\fBa\fP, int crit, int lastpos)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_REQ_get_ext\fP (\fBTS_REQ\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_REQ_delete_ext\fP (\fBTS_REQ\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "int \fBTS_REQ_add_ext\fP (\fBTS_REQ\fP *\fBa\fP, \fBX509_EXTENSION\fP *\fBex\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBTS_REQ_get_ext_d2i\fP (\fBTS_REQ\fP *\fBa\fP, int \fBnid\fP, int *crit, int *idx)"
.br
.ti -1c
.RI "int \fBTS_REQ_print_bio\fP (\fBBIO\fP *bio, \fBTS_REQ\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_RESP_set_status_info\fP (\fBTS_RESP\fP *\fBa\fP, \fBTS_STATUS_INFO\fP *info)"
.br
.ti -1c
.RI "\fBTS_STATUS_INFO\fP * \fBTS_RESP_get_status_info\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_set_tst_info\fP (\fBTS_RESP\fP *\fBa\fP, \fBPKCS7\fP *p7, \fBTS_TST_INFO\fP *tst_info)"
.br
.ti -1c
.RI "\fBPKCS7\fP * \fBTS_RESP_get_token\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBTS_RESP_get_tst_info\fP (\fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_version\fP (\fBTS_TST_INFO\fP *\fBa\fP, long \fBversion\fP)"
.br
.ti -1c
.RI "long \fBTS_TST_INFO_get_version\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_policy_id\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBASN1_OBJECT\fP *policy_id)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBTS_TST_INFO_get_policy_id\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_msg_imprint\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBTS_MSG_IMPRINT\fP *msg_imprint)"
.br
.ti -1c
.RI "\fBTS_MSG_IMPRINT\fP * \fBTS_TST_INFO_get_msg_imprint\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_serial\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_INTEGER\fP *serial)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_TST_INFO_get_serial\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_time\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_GENERALIZEDTIME\fP *gtime)"
.br
.ti -1c
.RI "const \fBASN1_GENERALIZEDTIME\fP * \fBTS_TST_INFO_get_time\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_accuracy\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBTS_ACCURACY\fP *accuracy)"
.br
.ti -1c
.RI "\fBTS_ACCURACY\fP * \fBTS_TST_INFO_get_accuracy\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_seconds\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *seconds)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_seconds\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_millis\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *millis)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_millis\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ACCURACY_set_micros\fP (\fBTS_ACCURACY\fP *\fBa\fP, const \fBASN1_INTEGER\fP *micros)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_ACCURACY_get_micros\fP (const \fBTS_ACCURACY\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_ordering\fP (\fBTS_TST_INFO\fP *\fBa\fP, int ordering)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ordering\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_nonce\fP (\fBTS_TST_INFO\fP *\fBa\fP, const \fBASN1_INTEGER\fP *nonce)"
.br
.ti -1c
.RI "const \fBASN1_INTEGER\fP * \fBTS_TST_INFO_get_nonce\fP (const \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_set_tsa\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBGENERAL_NAME\fP *tsa)"
.br
.ti -1c
.RI "\fBGENERAL_NAME\fP * \fBTS_TST_INFO_get_tsa\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_TST_INFO_ext_free\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_count\fP (\fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_NID\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBnid\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_OBJ\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBASN1_OBJECT\fP *\fBobj\fP, int lastpos)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_get_ext_by_critical\fP (\fBTS_TST_INFO\fP *\fBa\fP, int crit, int lastpos)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_TST_INFO_get_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBX509_EXTENSION\fP * \fBTS_TST_INFO_delete_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_add_ext\fP (\fBTS_TST_INFO\fP *\fBa\fP, \fBX509_EXTENSION\fP *\fBex\fP, int \fBloc\fP)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBTS_TST_INFO_get_ext_d2i\fP (\fBTS_TST_INFO\fP *\fBa\fP, int \fBnid\fP, int *crit, int *idx)"
.br
.ti -1c
.RI "\fBTS_RESP_CTX\fP * \fBTS_RESP_CTX_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_CTX_free\fP (\fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_signer_cert\fP (\fBTS_RESP_CTX\fP *ctx, \fBX509\fP *signer)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_signer_key\fP (\fBTS_RESP_CTX\fP *ctx, \fBEVP_PKEY\fP *key)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_def_policy\fP (\fBTS_RESP_CTX\fP *ctx, \fBASN1_OBJECT\fP *def_policy)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_certs\fP (\fBTS_RESP_CTX\fP *ctx, \fBSTACK_OF\fP(\fBX509\fP)*certs)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_add_policy\fP (\fBTS_RESP_CTX\fP *ctx, \fBASN1_OBJECT\fP *policy)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_add_md\fP (\fBTS_RESP_CTX\fP *ctx, const \fBEVP_MD\fP *md)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_accuracy\fP (\fBTS_RESP_CTX\fP *ctx, int secs, int millis, int micros)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_clock_precision_digits\fP (\fBTS_RESP_CTX\fP *ctx, unsigned clock_precision_digits)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_CTX_add_flags\fP (\fBTS_RESP_CTX\fP *ctx, int \fBflags\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_CTX_set_serial_cb\fP (\fBTS_RESP_CTX\fP *ctx, \fBTS_serial_cb\fP \fBcb\fP, \fBvoid\fP *data)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_CTX_set_time_cb\fP (\fBTS_RESP_CTX\fP *ctx, \fBTS_time_cb\fP \fBcb\fP, \fBvoid\fP *data)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_RESP_CTX_set_extension_cb\fP (\fBTS_RESP_CTX\fP *ctx, \fBTS_extension_cb\fP \fBcb\fP, \fBvoid\fP *data)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_status_info\fP (\fBTS_RESP_CTX\fP *ctx, int status, const char *text)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_set_status_info_cond\fP (\fBTS_RESP_CTX\fP *ctx, int status, const char *text)"
.br
.ti -1c
.RI "int \fBTS_RESP_CTX_add_failure_info\fP (\fBTS_RESP_CTX\fP *ctx, int failure)"
.br
.ti -1c
.RI "\fBTS_REQ\fP * \fBTS_RESP_CTX_get_request\fP (\fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBTS_TST_INFO\fP * \fBTS_RESP_CTX_get_tst_info\fP (\fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBTS_RESP\fP * \fBTS_RESP_create_response\fP (\fBTS_RESP_CTX\fP *ctx, \fBBIO\fP *req_bio)"
.br
.ti -1c
.RI "int \fBTS_RESP_verify_signature\fP (\fBPKCS7\fP *token, \fBSTACK_OF\fP(\fBX509\fP)*certs, \fBX509_STORE\fP *store, \fBX509\fP **signer_out)"
.br
.ti -1c
.RI "int \fBTS_RESP_verify_response\fP (\fBTS_VERIFY_CTX\fP *ctx, \fBTS_RESP\fP *response)"
.br
.ti -1c
.RI "int \fBTS_RESP_verify_token\fP (\fBTS_VERIFY_CTX\fP *ctx, \fBPKCS7\fP *token)"
.br
.ti -1c
.RI "\fBTS_VERIFY_CTX\fP * \fBTS_VERIFY_CTX_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_VERIFY_CTX_init\fP (\fBTS_VERIFY_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_VERIFY_CTX_free\fP (\fBTS_VERIFY_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBTS_VERIFY_CTX_cleanup\fP (\fBTS_VERIFY_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBTS_VERIFY_CTX\fP * \fBTS_REQ_to_TS_VERIFY_CTX\fP (\fBTS_REQ\fP *req, \fBTS_VERIFY_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_RESP_print_bio\fP (\fBBIO\fP *bio, \fBTS_RESP\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_STATUS_INFO_print_bio\fP (\fBBIO\fP *bio, \fBTS_STATUS_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_TST_INFO_print_bio\fP (\fBBIO\fP *bio, \fBTS_TST_INFO\fP *\fBa\fP)"
.br
.ti -1c
.RI "int \fBTS_ASN1_INTEGER_print_bio\fP (\fBBIO\fP *bio, const \fBASN1_INTEGER\fP *\fBnum\fP)"
.br
.ti -1c
.RI "int \fBTS_OBJ_print_bio\fP (\fBBIO\fP *bio, const \fBASN1_OBJECT\fP *\fBobj\fP)"
.br
.ti -1c
.RI "int \fBTS_ext_print_bio\fP (\fBBIO\fP *bio, const \fBSTACK_OF\fP(\fBX509_EXTENSION\fP)*extensions)"
.br
.ti -1c
.RI "int \fBTS_X509_ALGOR_print_bio\fP (\fBBIO\fP *bio, const \fBX509_ALGOR\fP *alg)"
.br
.ti -1c
.RI "int \fBTS_MSG_IMPRINT_print_bio\fP (\fBBIO\fP *bio, \fBTS_MSG_IMPRINT\fP *msg)"
.br
.ti -1c
.RI "\fBX509\fP * \fBTS_CONF_load_cert\fP (const char *\fBfile\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509\fP)*TS_CONF_load_certs(const char *\fBfile\fP)"
.br
.ti -1c
.RI "\fBEVP_PKEY\fP * \fBTS_CONF_load_key\fP (const char *\fBfile\fP, const char *\fBpass\fP)"
.br
.ti -1c
.RI "const char * \fBTS_CONF_get_tsa_section\fP (\fBCONF\fP *conf, const char *\fBsection\fP)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_serial\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_serial_cb\fP \fBcb\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_crypto_device\fP (\fBCONF\fP *conf, const char *\fBsection\fP, const char *device)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_default_engine\fP (const char *name)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_signer_cert\fP (\fBCONF\fP *conf, const char *\fBsection\fP, const char *cert, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_certs\fP (\fBCONF\fP *conf, const char *\fBsection\fP, const char *certs, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_signer_key\fP (\fBCONF\fP *conf, const char *\fBsection\fP, const char *key, const char *\fBpass\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_def_policy\fP (\fBCONF\fP *conf, const char *\fBsection\fP, const char *policy, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_policies\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_digests\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_accuracy\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_clock_precision_digits\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_ordering\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_tsa_name\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBTS_CONF_set_ess_cert_id_chain\fP (\fBCONF\fP *conf, const char *\fBsection\fP, \fBTS_RESP_CTX\fP *ctx)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define TS_ESS_CERT_ID_CHAIN   0x04"

.PP
Definition at line 474 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_D2I_TS_RESP   147"

.PP
Definition at line 770 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_DEF_SERIAL_CB   110"

.PP
Definition at line 771 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_DEF_TIME_CB   111"

.PP
Definition at line 772 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_ESS_ADD_SIGNING_CERT   112"

.PP
Definition at line 773 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_ESS_CERT_ID_NEW_INIT   113"

.PP
Definition at line 774 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_ESS_SIGNING_CERT_NEW_INIT   114"

.PP
Definition at line 775 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_INT_TS_RESP_VERIFY_TOKEN   149"

.PP
Definition at line 776 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_PKCS7_TO_TS_TST_INFO   148"

.PP
Definition at line 777 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_ACCURACY_SET_MICROS   115"

.PP
Definition at line 778 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_ACCURACY_SET_MILLIS   116"

.PP
Definition at line 779 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_ACCURACY_SET_SECONDS   117"

.PP
Definition at line 780 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CHECK_IMPRINTS   100"

.PP
Definition at line 781 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CHECK_NONCES   101"

.PP
Definition at line 782 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CHECK_POLICY   102"

.PP
Definition at line 783 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CHECK_SIGNING_CERTS   103"

.PP
Definition at line 784 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CHECK_STATUS_INFO   104"

.PP
Definition at line 785 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_COMPUTE_IMPRINT   145"

.PP
Definition at line 786 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_CONF_SET_DEFAULT_ENGINE   146"

.PP
Definition at line 787 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_GET_STATUS_TEXT   105"

.PP
Definition at line 788 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_MSG_IMPRINT_SET_ALGO   118"

.PP
Definition at line 789 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_REQ_SET_MSG_IMPRINT   119"

.PP
Definition at line 790 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_REQ_SET_NONCE   120"

.PP
Definition at line 791 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_REQ_SET_POLICY_ID   121"

.PP
Definition at line 792 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CREATE_RESPONSE   122"

.PP
Definition at line 793 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CREATE_TST_INFO   123"

.PP
Definition at line 794 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_ADD_FAILURE_INFO   124"

.PP
Definition at line 795 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_ADD_MD   125"

.PP
Definition at line 796 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_ADD_POLICY   126"

.PP
Definition at line 797 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_NEW   127"

.PP
Definition at line 798 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_SET_ACCURACY   128"

.PP
Definition at line 799 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_SET_CERTS   129"

.PP
Definition at line 800 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_SET_DEF_POLICY   130"

.PP
Definition at line 801 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_SET_SIGNER_CERT   131"

.PP
Definition at line 802 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_CTX_SET_STATUS_INFO   132"

.PP
Definition at line 803 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_GET_POLICY   133"

.PP
Definition at line 804 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_SET_GENTIME_WITH_PRECISION   134"

.PP
Definition at line 805 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_SET_STATUS_INFO   135"

.PP
Definition at line 806 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_SET_TST_INFO   150"

.PP
Definition at line 807 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_SIGN   136"

.PP
Definition at line 808 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_VERIFY_SIGNATURE   106"

.PP
Definition at line 809 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_RESP_VERIFY_TOKEN   107"

.PP
Definition at line 810 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_ACCURACY   137"

.PP
Definition at line 811 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_MSG_IMPRINT   138"

.PP
Definition at line 812 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_NONCE   139"

.PP
Definition at line 813 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_POLICY_ID   140"

.PP
Definition at line 814 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_SERIAL   141"

.PP
Definition at line 815 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_TIME   142"

.PP
Definition at line 816 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_TST_INFO_SET_TSA   143"

.PP
Definition at line 817 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_VERIFY   108"

.PP
Definition at line 818 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_VERIFY_CERT   109"

.PP
Definition at line 819 of file include/openssl/ts\&.h\&.
.SS "#define TS_F_TS_VERIFY_CTX_NEW   144"

.PP
Definition at line 820 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_ADD_INFO_NOT_AVAILABLE   17"

.PP
Definition at line 212 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_BAD_ALG   0"

.PP
Definition at line 206 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_BAD_DATA_FORMAT   5"

.PP
Definition at line 208 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_BAD_REQUEST   2"

.PP
Definition at line 207 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_SYSTEM_FAILURE   25"

.PP
Definition at line 213 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_TIME_NOT_AVAILABLE   14"

.PP
Definition at line 209 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_UNACCEPTED_EXTENSION   16"

.PP
Definition at line 211 of file include/openssl/ts\&.h\&.
.SS "#define TS_INFO_UNACCEPTED_POLICY   15"

.PP
Definition at line 210 of file include/openssl/ts\&.h\&.
.SS "#define TS_MAX_CLOCK_PRECISION_DIGITS   6"

.PP
Definition at line 566 of file include/openssl/ts\&.h\&.
.SS "#define TS_ORDERING   0x02"

.PP
Definition at line 467 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_BAD_PKCS7_TYPE   132"

.PP
Definition at line 823 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_BAD_TYPE   133"

.PP
Definition at line 824 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_CERTIFICATE_VERIFY_ERROR   100"

.PP
Definition at line 825 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_COULD_NOT_SET_ENGINE   127"

.PP
Definition at line 826 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_COULD_NOT_SET_TIME   115"

.PP
Definition at line 827 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_D2I_TS_RESP_INT_FAILED   128"

.PP
Definition at line 828 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_DETACHED_CONTENT   134"

.PP
Definition at line 829 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_ESS_ADD_SIGNING_CERT_ERROR   116"

.PP
Definition at line 830 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_ESS_SIGNING_CERTIFICATE_ERROR   101"

.PP
Definition at line 831 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_INVALID_NULL_POINTER   102"

.PP
Definition at line 832 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_INVALID_SIGNER_CERTIFICATE_PURPOSE   117"

.PP
Definition at line 833 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_MESSAGE_IMPRINT_MISMATCH   103"

.PP
Definition at line 834 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_NO_CONTENT   106"

.PP
Definition at line 837 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_NO_TIME_STAMP_TOKEN   107"

.PP
Definition at line 838 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_NONCE_MISMATCH   104"

.PP
Definition at line 835 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_NONCE_NOT_RETURNED   105"

.PP
Definition at line 836 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_PKCS7_ADD_SIGNATURE_ERROR   118"

.PP
Definition at line 839 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_PKCS7_ADD_SIGNED_ATTR_ERROR   119"

.PP
Definition at line 840 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_PKCS7_TO_TS_TST_INFO_FAILED   129"

.PP
Definition at line 841 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_POLICY_MISMATCH   108"

.PP
Definition at line 842 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE   120"

.PP
Definition at line 843 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_RESPONSE_SETUP_ERROR   121"

.PP
Definition at line 844 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_SIGNATURE_FAILURE   109"

.PP
Definition at line 845 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_THERE_MUST_BE_ONE_SIGNER   110"

.PP
Definition at line 846 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TIME_SYSCALL_ERROR   122"

.PP
Definition at line 847 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TOKEN_NOT_PRESENT   130"

.PP
Definition at line 848 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TOKEN_PRESENT   131"

.PP
Definition at line 849 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TS_DATASIGN   124"

.PP
Definition at line 853 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TSA_NAME_MISMATCH   111"

.PP
Definition at line 850 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TSA_UNTRUSTED   112"

.PP
Definition at line 851 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_TST_INFO_SETUP_ERROR   123"

.PP
Definition at line 852 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_UNACCEPTABLE_POLICY   125"

.PP
Definition at line 854 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_UNSUPPORTED_MD_ALGORITHM   126"

.PP
Definition at line 855 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_UNSUPPORTED_VERSION   113"

.PP
Definition at line 856 of file include/openssl/ts\&.h\&.
.SS "#define TS_R_WRONG_CONTENT_TYPE   114"

.PP
Definition at line 857 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_GRANTED   0"

.PP
Definition at line 195 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_GRANTED_WITH_MODS   1"

.PP
Definition at line 196 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_REJECTION   2"

.PP
Definition at line 197 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_REVOCATION_NOTIFICATION   5"

.PP
Definition at line 200 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_REVOCATION_WARNING   4"

.PP
Definition at line 199 of file include/openssl/ts\&.h\&.
.SS "#define TS_STATUS_WAITING   3"

.PP
Definition at line 198 of file include/openssl/ts\&.h\&.
.SS "#define TS_TSA_NAME   0x01"

.PP
Definition at line 464 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_ALL_DATA"
\fBValue:\fP
.PP
.nf
(TS_VFY_SIGNATURE       \
                                 | TS_VFY_VERSION       \
                                 | TS_VFY_POLICY        \
                                 | TS_VFY_DATA          \
                                 | TS_VFY_NONCE         \
                                 | TS_VFY_SIGNER        \
                                 | TS_VFY_TSA_NAME)
.fi
.PP
Definition at line 649 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_ALL_IMPRINT"
\fBValue:\fP
.PP
.nf
(TS_VFY_SIGNATURE       \
                                 | TS_VFY_VERSION       \
                                 | TS_VFY_POLICY        \
                                 | TS_VFY_IMPRINT       \
                                 | TS_VFY_NONCE         \
                                 | TS_VFY_SIGNER        \
                                 | TS_VFY_TSA_NAME)
.fi
.PP
Definition at line 642 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_DATA   (1u << 4)"

.PP
Definition at line 633 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_IMPRINT   (1u << 3)"

.PP
Definition at line 627 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_NONCE   (1u << 5)"

.PP
Definition at line 635 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_POLICY   (1u << 2)"

.PP
Definition at line 622 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_SIGNATURE   (1u << 0)"

.PP
Definition at line 618 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_SIGNER   (1u << 6)"

.PP
Definition at line 637 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_TSA_NAME   (1u << 7)"

.PP
Definition at line 639 of file include/openssl/ts\&.h\&.
.SS "#define TS_VFY_VERSION   (1u << 1)"

.PP
Definition at line 620 of file include/openssl/ts\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBESS_cert_id\fP  \fBESS_CERT_ID\fP"

.SS "typedef struct \fBESS_issuer_serial\fP  \fBESS_ISSUER_SERIAL\fP"

.SS "typedef struct \fBESS_signing_cert\fP  \fBESS_SIGNING_CERT\fP"

.SS "typedef struct \fBTS_accuracy_st\fP  \fBTS_ACCURACY\fP"

.SS "typedef int(* TS_extension_cb) (struct \fBTS_resp_ctx\fP *, \fBX509_EXTENSION\fP *, \fBvoid\fP *)"

.PP
Definition at line 495 of file include/openssl/ts\&.h\&.
.SS "typedef struct \fBTS_msg_imprint_st\fP  \fBTS_MSG_IMPRINT\fP"

.SS "typedef struct \fBTS_req_st\fP  \fBTS_REQ\fP"

.SS "typedef struct \fBTS_resp_st\fP  \fBTS_RESP\fP"

.SS "typedef struct \fBTS_resp_ctx\fP  \fBTS_RESP_CTX\fP"

.SS "typedef \fBASN1_INTEGER\fP*(* TS_serial_cb) (struct \fBTS_resp_ctx\fP *, \fBvoid\fP *)"

.PP
Definition at line 480 of file include/openssl/ts\&.h\&.
.SS "typedef struct \fBTS_status_info_st\fP  \fBTS_STATUS_INFO\fP"

.SS "typedef int(* TS_time_cb) (struct \fBTS_resp_ctx\fP *, \fBvoid\fP *, long *sec, long *usec)"

.PP
Definition at line 487 of file include/openssl/ts\&.h\&.
.SS "typedef struct \fBTS_tst_info_st\fP  \fBTS_TST_INFO\fP"

.SS "typedef struct \fBTS_verify_ctx\fP  \fBTS_VERIFY_CTX\fP"

.SH "Function Documentation"
.PP 
.SS "\fBESS_CERT_ID\fP* d2i_ESS_CERT_ID (\fBESS_CERT_ID\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBESS_ISSUER_SERIAL\fP* d2i_ESS_ISSUER_SERIAL (\fBESS_ISSUER_SERIAL\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBESS_SIGNING_CERT\fP* d2i_ESS_SIGNING_CERT (\fBESS_SIGNING_CERT\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_ACCURACY\fP* d2i_TS_ACCURACY (\fBTS_ACCURACY\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_MSG_IMPRINT\fP* d2i_TS_MSG_IMPRINT (\fBTS_MSG_IMPRINT\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_MSG_IMPRINT\fP* d2i_TS_MSG_IMPRINT_bio (\fBBIO\fP * fp, \fBTS_MSG_IMPRINT\fP ** a)"

.SS "\fBTS_MSG_IMPRINT\fP* d2i_TS_MSG_IMPRINT_fp (FILE * fp, \fBTS_MSG_IMPRINT\fP ** a)"

.SS "\fBTS_REQ\fP* d2i_TS_REQ (\fBTS_REQ\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_REQ\fP* d2i_TS_REQ_bio (\fBBIO\fP * fp, \fBTS_REQ\fP ** a)"

.SS "\fBTS_REQ\fP* d2i_TS_REQ_fp (FILE * fp, \fBTS_REQ\fP ** a)"

.SS "\fBTS_RESP\fP* d2i_TS_RESP (\fBTS_RESP\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_RESP\fP* d2i_TS_RESP_bio (\fBBIO\fP * fp, \fBTS_RESP\fP ** a)"

.SS "\fBTS_RESP\fP* d2i_TS_RESP_fp (FILE * fp, \fBTS_RESP\fP ** a)"

.SS "\fBTS_STATUS_INFO\fP* d2i_TS_STATUS_INFO (\fBTS_STATUS_INFO\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_TST_INFO\fP* d2i_TS_TST_INFO (\fBTS_TST_INFO\fP ** a, const unsigned char ** pp, long length)"

.SS "\fBTS_TST_INFO\fP* d2i_TS_TST_INFO_bio (\fBBIO\fP * fp, \fBTS_TST_INFO\fP ** a)"

.SS "\fBTS_TST_INFO\fP* d2i_TS_TST_INFO_fp (FILE * fp, \fBTS_TST_INFO\fP ** a)"

.SS "\fBvoid\fP ERR_load_TS_strings (\fBvoid\fP)"

.SS "\fBESS_CERT_ID\fP* ESS_CERT_ID_dup (\fBESS_CERT_ID\fP * a)"

.SS "\fBvoid\fP ESS_CERT_ID_free (\fBESS_CERT_ID\fP * a)"

.SS "\fBESS_CERT_ID\fP* ESS_CERT_ID_new (\fBvoid\fP)"

.SS "\fBESS_ISSUER_SERIAL\fP* ESS_ISSUER_SERIAL_dup (\fBESS_ISSUER_SERIAL\fP * a)"

.SS "\fBvoid\fP ESS_ISSUER_SERIAL_free (\fBESS_ISSUER_SERIAL\fP * a)"

.SS "\fBESS_ISSUER_SERIAL\fP* ESS_ISSUER_SERIAL_new (\fBvoid\fP)"

.SS "\fBESS_SIGNING_CERT\fP* ESS_SIGNING_CERT_dup (\fBESS_SIGNING_CERT\fP * a)"

.SS "\fBvoid\fP ESS_SIGNING_CERT_free (\fBESS_SIGNING_CERT\fP * a)"

.SS "\fBESS_SIGNING_CERT\fP* ESS_SIGNING_CERT_new (\fBvoid\fP)"

.SS "int i2d_ESS_CERT_ID (const \fBESS_CERT_ID\fP * a, unsigned char ** pp)"

.SS "int i2d_ESS_ISSUER_SERIAL (const \fBESS_ISSUER_SERIAL\fP * a, unsigned char ** pp)"

.SS "int i2d_ESS_SIGNING_CERT (const \fBESS_SIGNING_CERT\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_ACCURACY (const \fBTS_ACCURACY\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_MSG_IMPRINT (const \fBTS_MSG_IMPRINT\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_MSG_IMPRINT_bio (\fBBIO\fP * fp, \fBTS_MSG_IMPRINT\fP * a)"

.SS "int i2d_TS_MSG_IMPRINT_fp (FILE * fp, \fBTS_MSG_IMPRINT\fP * a)"

.SS "int i2d_TS_REQ (const \fBTS_REQ\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_REQ_bio (\fBBIO\fP * fp, \fBTS_REQ\fP * a)"

.SS "int i2d_TS_REQ_fp (FILE * fp, \fBTS_REQ\fP * a)"

.SS "int i2d_TS_RESP (const \fBTS_RESP\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_RESP_bio (\fBBIO\fP * fp, \fBTS_RESP\fP * a)"

.SS "int i2d_TS_RESP_fp (FILE * fp, \fBTS_RESP\fP * a)"

.SS "int i2d_TS_STATUS_INFO (const \fBTS_STATUS_INFO\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_TST_INFO (const \fBTS_TST_INFO\fP * a, unsigned char ** pp)"

.SS "int i2d_TS_TST_INFO_bio (\fBBIO\fP * fp, \fBTS_TST_INFO\fP * a)"

.SS "int i2d_TS_TST_INFO_fp (FILE * fp, \fBTS_TST_INFO\fP * a)"

.SS "\fBTS_TST_INFO\fP* PKCS7_to_TS_TST_INFO (\fBPKCS7\fP * token)"

.SS "STACK_OF (\fBX509_EXTENSION\fP)"

.SS "STACK_OF (\fBX509\fP) const"

.SS "\fBTS_ACCURACY\fP* TS_ACCURACY_dup (\fBTS_ACCURACY\fP * a)"

.SS "\fBvoid\fP TS_ACCURACY_free (\fBTS_ACCURACY\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_micros (const \fBTS_ACCURACY\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_millis (const \fBTS_ACCURACY\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_ACCURACY_get_seconds (const \fBTS_ACCURACY\fP * a)"

.SS "\fBTS_ACCURACY\fP* TS_ACCURACY_new (\fBvoid\fP)"

.SS "int TS_ACCURACY_set_micros (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * micros)"

.SS "int TS_ACCURACY_set_millis (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * millis)"

.SS "int TS_ACCURACY_set_seconds (\fBTS_ACCURACY\fP * a, const \fBASN1_INTEGER\fP * seconds)"

.SS "int TS_ASN1_INTEGER_print_bio (\fBBIO\fP * bio, const \fBASN1_INTEGER\fP * num)"

.SS "const char* TS_CONF_get_tsa_section (\fBCONF\fP * conf, const char * section)"

.SS "\fBX509\fP* TS_CONF_load_cert (const char * file)"

.SS "\fBEVP_PKEY\fP* TS_CONF_load_key (const char * file, const char * pass)"

.SS "int TS_CONF_set_accuracy (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_certs (\fBCONF\fP * conf, const char * section, const char * certs, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_clock_precision_digits (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_crypto_device (\fBCONF\fP * conf, const char * section, const char * device)"

.SS "int TS_CONF_set_def_policy (\fBCONF\fP * conf, const char * section, const char * policy, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_default_engine (const char * name)"

.SS "int TS_CONF_set_digests (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_ess_cert_id_chain (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_ordering (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_policies (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_serial (\fBCONF\fP * conf, const char * section, \fBTS_serial_cb\fP cb, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_signer_cert (\fBCONF\fP * conf, const char * section, const char * cert, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_signer_key (\fBCONF\fP * conf, const char * section, const char * key, const char * pass, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_CONF_set_tsa_name (\fBCONF\fP * conf, const char * section, \fBTS_RESP_CTX\fP * ctx)"

.SS "int TS_ext_print_bio (\fBBIO\fP * bio, const \fBSTACK_OF\fP(\fBX509_EXTENSION\fP)* extensions)"

.SS "\fBTS_MSG_IMPRINT\fP* TS_MSG_IMPRINT_dup (\fBTS_MSG_IMPRINT\fP * a)"

.SS "\fBvoid\fP TS_MSG_IMPRINT_free (\fBTS_MSG_IMPRINT\fP * a)"

.SS "\fBX509_ALGOR\fP* TS_MSG_IMPRINT_get_algo (\fBTS_MSG_IMPRINT\fP * a)"

.SS "\fBASN1_OCTET_STRING\fP* TS_MSG_IMPRINT_get_msg (\fBTS_MSG_IMPRINT\fP * a)"

.SS "\fBTS_MSG_IMPRINT\fP* TS_MSG_IMPRINT_new (\fBvoid\fP)"

.SS "int TS_MSG_IMPRINT_print_bio (\fBBIO\fP * bio, \fBTS_MSG_IMPRINT\fP * msg)"

.SS "int TS_MSG_IMPRINT_set_algo (\fBTS_MSG_IMPRINT\fP * a, \fBX509_ALGOR\fP * alg)"

.SS "int TS_MSG_IMPRINT_set_msg (\fBTS_MSG_IMPRINT\fP * a, unsigned char * d, int len)"

.SS "int TS_OBJ_print_bio (\fBBIO\fP * bio, const \fBASN1_OBJECT\fP * obj)"

.SS "int TS_REQ_add_ext (\fBTS_REQ\fP * a, \fBX509_EXTENSION\fP * ex, int loc)"

.SS "\fBX509_EXTENSION\fP* TS_REQ_delete_ext (\fBTS_REQ\fP * a, int loc)"

.SS "\fBTS_REQ\fP* TS_REQ_dup (\fBTS_REQ\fP * a)"

.SS "\fBvoid\fP TS_REQ_ext_free (\fBTS_REQ\fP * a)"

.SS "\fBvoid\fP TS_REQ_free (\fBTS_REQ\fP * a)"

.SS "int TS_REQ_get_cert_req (const \fBTS_REQ\fP * a)"

.SS "\fBX509_EXTENSION\fP* TS_REQ_get_ext (\fBTS_REQ\fP * a, int loc)"

.SS "int TS_REQ_get_ext_by_critical (\fBTS_REQ\fP * a, int crit, int lastpos)"

.SS "int TS_REQ_get_ext_by_NID (\fBTS_REQ\fP * a, int nid, int lastpos)"

.SS "int TS_REQ_get_ext_by_OBJ (\fBTS_REQ\fP * a, \fBASN1_OBJECT\fP * obj, int lastpos)"

.SS "int TS_REQ_get_ext_count (\fBTS_REQ\fP * a)"

.SS "\fBvoid\fP* TS_REQ_get_ext_d2i (\fBTS_REQ\fP * a, int nid, int * crit, int * idx)"

.SS "\fBTS_MSG_IMPRINT\fP* TS_REQ_get_msg_imprint (\fBTS_REQ\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_REQ_get_nonce (const \fBTS_REQ\fP * a)"

.SS "\fBASN1_OBJECT\fP* TS_REQ_get_policy_id (\fBTS_REQ\fP * a)"

.SS "long TS_REQ_get_version (const \fBTS_REQ\fP * a)"

.SS "\fBTS_REQ\fP* TS_REQ_new (\fBvoid\fP)"

.SS "int TS_REQ_print_bio (\fBBIO\fP * bio, \fBTS_REQ\fP * a)"

.SS "int TS_REQ_set_cert_req (\fBTS_REQ\fP * a, int cert_req)"

.SS "int TS_REQ_set_msg_imprint (\fBTS_REQ\fP * a, \fBTS_MSG_IMPRINT\fP * msg_imprint)"

.SS "int TS_REQ_set_nonce (\fBTS_REQ\fP * a, const \fBASN1_INTEGER\fP * nonce)"

.SS "int TS_REQ_set_policy_id (\fBTS_REQ\fP * a, \fBASN1_OBJECT\fP * policy)"

.SS "int TS_REQ_set_version (\fBTS_REQ\fP * a, long version)"

.SS "\fBTS_VERIFY_CTX\fP* TS_REQ_to_TS_VERIFY_CTX (\fBTS_REQ\fP * req, \fBTS_VERIFY_CTX\fP * ctx)"

.SS "\fBTS_RESP\fP* TS_RESP_create_response (\fBTS_RESP_CTX\fP * ctx, \fBBIO\fP * req_bio)"

.SS "int TS_RESP_CTX_add_failure_info (\fBTS_RESP_CTX\fP * ctx, int failure)"

.SS "\fBvoid\fP TS_RESP_CTX_add_flags (\fBTS_RESP_CTX\fP * ctx, int flags)"

.SS "int TS_RESP_CTX_add_md (\fBTS_RESP_CTX\fP * ctx, const \fBEVP_MD\fP * md)"

.SS "int TS_RESP_CTX_add_policy (\fBTS_RESP_CTX\fP * ctx, \fBASN1_OBJECT\fP * policy)"

.SS "\fBvoid\fP TS_RESP_CTX_free (\fBTS_RESP_CTX\fP * ctx)"

.SS "\fBTS_REQ\fP* TS_RESP_CTX_get_request (\fBTS_RESP_CTX\fP * ctx)"

.SS "\fBTS_TST_INFO\fP* TS_RESP_CTX_get_tst_info (\fBTS_RESP_CTX\fP * ctx)"

.SS "\fBTS_RESP_CTX\fP* TS_RESP_CTX_new (\fBvoid\fP)"

.SS "int TS_RESP_CTX_set_accuracy (\fBTS_RESP_CTX\fP * ctx, int secs, int millis, int micros)"

.SS "int TS_RESP_CTX_set_certs (\fBTS_RESP_CTX\fP * ctx, \fBSTACK_OF\fP(\fBX509\fP)* certs)"

.SS "int TS_RESP_CTX_set_clock_precision_digits (\fBTS_RESP_CTX\fP * ctx, unsigned clock_precision_digits)"

.SS "int TS_RESP_CTX_set_def_policy (\fBTS_RESP_CTX\fP * ctx, \fBASN1_OBJECT\fP * def_policy)"

.SS "\fBvoid\fP TS_RESP_CTX_set_extension_cb (\fBTS_RESP_CTX\fP * ctx, \fBTS_extension_cb\fP cb, \fBvoid\fP * data)"

.SS "\fBvoid\fP TS_RESP_CTX_set_serial_cb (\fBTS_RESP_CTX\fP * ctx, \fBTS_serial_cb\fP cb, \fBvoid\fP * data)"

.SS "int TS_RESP_CTX_set_signer_cert (\fBTS_RESP_CTX\fP * ctx, \fBX509\fP * signer)"

.SS "int TS_RESP_CTX_set_signer_key (\fBTS_RESP_CTX\fP * ctx, \fBEVP_PKEY\fP * key)"

.SS "int TS_RESP_CTX_set_status_info (\fBTS_RESP_CTX\fP * ctx, int status, const char * text)"

.SS "int TS_RESP_CTX_set_status_info_cond (\fBTS_RESP_CTX\fP * ctx, int status, const char * text)"

.SS "\fBvoid\fP TS_RESP_CTX_set_time_cb (\fBTS_RESP_CTX\fP * ctx, \fBTS_time_cb\fP cb, \fBvoid\fP * data)"

.SS "\fBTS_RESP\fP* TS_RESP_dup (\fBTS_RESP\fP * a)"

.SS "\fBvoid\fP TS_RESP_free (\fBTS_RESP\fP * a)"

.SS "\fBTS_STATUS_INFO\fP* TS_RESP_get_status_info (\fBTS_RESP\fP * a)"

.SS "\fBPKCS7\fP* TS_RESP_get_token (\fBTS_RESP\fP * a)"

.SS "\fBTS_TST_INFO\fP* TS_RESP_get_tst_info (\fBTS_RESP\fP * a)"

.SS "\fBTS_RESP\fP* TS_RESP_new (\fBvoid\fP)"

.SS "int TS_RESP_print_bio (\fBBIO\fP * bio, \fBTS_RESP\fP * a)"

.SS "int TS_RESP_set_status_info (\fBTS_RESP\fP * a, \fBTS_STATUS_INFO\fP * info)"

.SS "\fBvoid\fP TS_RESP_set_tst_info (\fBTS_RESP\fP * a, \fBPKCS7\fP * p7, \fBTS_TST_INFO\fP * tst_info)"

.SS "int TS_RESP_verify_response (\fBTS_VERIFY_CTX\fP * ctx, \fBTS_RESP\fP * response)"

.SS "int TS_RESP_verify_signature (\fBPKCS7\fP * token, \fBSTACK_OF\fP(\fBX509\fP)* certs, \fBX509_STORE\fP * store, \fBX509\fP ** signer_out)"

.SS "int TS_RESP_verify_token (\fBTS_VERIFY_CTX\fP * ctx, \fBPKCS7\fP * token)"

.SS "\fBTS_STATUS_INFO\fP* TS_STATUS_INFO_dup (\fBTS_STATUS_INFO\fP * a)"

.SS "\fBvoid\fP TS_STATUS_INFO_free (\fBTS_STATUS_INFO\fP * a)"

.SS "\fBTS_STATUS_INFO\fP* TS_STATUS_INFO_new (\fBvoid\fP)"

.SS "int TS_STATUS_INFO_print_bio (\fBBIO\fP * bio, \fBTS_STATUS_INFO\fP * a)"

.SS "int TS_TST_INFO_add_ext (\fBTS_TST_INFO\fP * a, \fBX509_EXTENSION\fP * ex, int loc)"

.SS "\fBX509_EXTENSION\fP* TS_TST_INFO_delete_ext (\fBTS_TST_INFO\fP * a, int loc)"

.SS "\fBTS_TST_INFO\fP* TS_TST_INFO_dup (\fBTS_TST_INFO\fP * a)"

.SS "\fBvoid\fP TS_TST_INFO_ext_free (\fBTS_TST_INFO\fP * a)"

.SS "\fBvoid\fP TS_TST_INFO_free (\fBTS_TST_INFO\fP * a)"

.SS "\fBTS_ACCURACY\fP* TS_TST_INFO_get_accuracy (\fBTS_TST_INFO\fP * a)"

.SS "\fBX509_EXTENSION\fP* TS_TST_INFO_get_ext (\fBTS_TST_INFO\fP * a, int loc)"

.SS "int TS_TST_INFO_get_ext_by_critical (\fBTS_TST_INFO\fP * a, int crit, int lastpos)"

.SS "int TS_TST_INFO_get_ext_by_NID (\fBTS_TST_INFO\fP * a, int nid, int lastpos)"

.SS "int TS_TST_INFO_get_ext_by_OBJ (\fBTS_TST_INFO\fP * a, \fBASN1_OBJECT\fP * obj, int lastpos)"

.SS "int TS_TST_INFO_get_ext_count (\fBTS_TST_INFO\fP * a)"

.SS "\fBvoid\fP* TS_TST_INFO_get_ext_d2i (\fBTS_TST_INFO\fP * a, int nid, int * crit, int * idx)"

.SS "\fBTS_MSG_IMPRINT\fP* TS_TST_INFO_get_msg_imprint (\fBTS_TST_INFO\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_TST_INFO_get_nonce (const \fBTS_TST_INFO\fP * a)"

.SS "int TS_TST_INFO_get_ordering (const \fBTS_TST_INFO\fP * a)"

.SS "\fBASN1_OBJECT\fP* TS_TST_INFO_get_policy_id (\fBTS_TST_INFO\fP * a)"

.SS "const \fBASN1_INTEGER\fP* TS_TST_INFO_get_serial (const \fBTS_TST_INFO\fP * a)"

.SS "const \fBASN1_GENERALIZEDTIME\fP* TS_TST_INFO_get_time (const \fBTS_TST_INFO\fP * a)"

.SS "\fBGENERAL_NAME\fP* TS_TST_INFO_get_tsa (\fBTS_TST_INFO\fP * a)"

.SS "long TS_TST_INFO_get_version (const \fBTS_TST_INFO\fP * a)"

.SS "\fBTS_TST_INFO\fP* TS_TST_INFO_new (\fBvoid\fP)"

.SS "int TS_TST_INFO_print_bio (\fBBIO\fP * bio, \fBTS_TST_INFO\fP * a)"

.SS "int TS_TST_INFO_set_accuracy (\fBTS_TST_INFO\fP * a, \fBTS_ACCURACY\fP * accuracy)"

.SS "int TS_TST_INFO_set_msg_imprint (\fBTS_TST_INFO\fP * a, \fBTS_MSG_IMPRINT\fP * msg_imprint)"

.SS "int TS_TST_INFO_set_nonce (\fBTS_TST_INFO\fP * a, const \fBASN1_INTEGER\fP * nonce)"

.SS "int TS_TST_INFO_set_ordering (\fBTS_TST_INFO\fP * a, int ordering)"

.SS "int TS_TST_INFO_set_policy_id (\fBTS_TST_INFO\fP * a, \fBASN1_OBJECT\fP * policy_id)"

.SS "int TS_TST_INFO_set_serial (\fBTS_TST_INFO\fP * a, const \fBASN1_INTEGER\fP * serial)"

.SS "int TS_TST_INFO_set_time (\fBTS_TST_INFO\fP * a, const \fBASN1_GENERALIZEDTIME\fP * gtime)"

.SS "int TS_TST_INFO_set_tsa (\fBTS_TST_INFO\fP * a, \fBGENERAL_NAME\fP * tsa)"

.SS "int TS_TST_INFO_set_version (\fBTS_TST_INFO\fP * a, long version)"

.SS "\fBvoid\fP TS_VERIFY_CTX_cleanup (\fBTS_VERIFY_CTX\fP * ctx)"

.SS "\fBvoid\fP TS_VERIFY_CTX_free (\fBTS_VERIFY_CTX\fP * ctx)"

.SS "\fBvoid\fP TS_VERIFY_CTX_init (\fBTS_VERIFY_CTX\fP * ctx)"

.SS "\fBTS_VERIFY_CTX\fP* TS_VERIFY_CTX_new (\fBvoid\fP)"

.SS "int TS_X509_ALGOR_print_bio (\fBBIO\fP * bio, const \fBX509_ALGOR\fP * alg)"

.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

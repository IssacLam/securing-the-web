.TH "s2n-master/tests/unit/s2n_tls_prf_test.c" 3 "Fri Aug 19 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
s2n-master/tests/unit/s2n_tls_prf_test.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 's2n_test\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <s2n\&.h>\fP
.br
\fC#include 'testlib/s2n_testlib\&.h'\fP
.br
\fC#include 'stuffer/s2n_stuffer\&.h'\fP
.br
\fC#include 'tls/s2n_prf\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int main (int argc, char ** argv)"

.PP
Definition at line 35 of file s2n_tls_prf_test\&.c\&.
.PP
.nf
36 {
37     uint8_t master_secret_hex_pad[96];
38     char premaster_secret_hex_in[] = "0301bebf2a5707c7bda6bfe5a8971a351a9ebd019de412212da021fd802e03f49f231d4e959c7352679f892f9d7f9748";
39     char client_random_hex_in[] = "537eefc1e720b311ff8483d057ae750a3667af9d5b496cc0d2edfb0dd309a286";
40     char server_random_hex_in[] = "537eefc29f337c5eedacd00a1889b031261701872d666a74fa999dc13bcd8821";
41     char master_secret_hex_in[] = "c8c610686237cd024a2d8e0391f61a8a4464c2c9576ea2b5ccf3af68139ec07c6a1720097063de968f2341f77b837120";
42 
43     struct s2n_stuffer client_random_in;
44     struct s2n_stuffer server_random_in;
45     struct s2n_stuffer premaster_secret_in;
46     struct s2n_stuffer master_secret_hex_out;
47     struct s2n_blob master_secret = {\&.data = master_secret_hex_pad,\&.size = sizeof(master_secret_hex_pad) };
48     struct s2n_blob pms;
49 
50     struct s2n_connection *conn;
51 
52     BEGIN_TEST();
53 
54     EXPECT_NOT_NULL(conn = s2n_connection_new(S2N_SERVER));
55 
56     /* Check the most common PRF */
57     conn->actual_protocol_version = S2N_TLS11;
58 
59     EXPECT_SUCCESS(s2n_stuffer_alloc_ro_from_string(&client_random_in, client_random_hex_in));
60     EXPECT_SUCCESS(s2n_stuffer_alloc_ro_from_string(&server_random_in, server_random_hex_in));
61     EXPECT_SUCCESS(s2n_stuffer_alloc_ro_from_string(&premaster_secret_in, premaster_secret_hex_in));
62 
63     EXPECT_SUCCESS(s2n_stuffer_init(&master_secret_hex_out, &master_secret));
64 
65     /* Parse the hex */
66     for (int i = 0; i < 48; i++) {
67         uint8_t c;
68         EXPECT_SUCCESS(s2n_stuffer_read_uint8_hex(&premaster_secret_in, &c));
69         conn->secure\&.rsa_premaster_secret[i] = c;
70     }
71     for (int i = 0; i < 32; i++) {
72         uint8_t c;
73         EXPECT_SUCCESS(s2n_stuffer_read_uint8_hex(&client_random_in, &c));
74         conn->secure\&.client_random[i] = c;
75     }
76     for (int i = 0; i < 32; i++) {
77         uint8_t c;
78         EXPECT_SUCCESS(s2n_stuffer_read_uint8_hex(&server_random_in, &c));
79         conn->secure\&.server_random[i] = c;
80     }
81 
82     pms\&.data = conn->secure\&.rsa_premaster_secret;
83     pms\&.size = sizeof(conn->secure\&.rsa_premaster_secret);
84     EXPECT_SUCCESS(s2n_prf_master_secret(conn, &pms));
85 
86     /* Convert the master secret to hex */
87     for (int i = 0; i < 48; i++) {
88         EXPECT_SUCCESS(s2n_stuffer_write_uint8_hex(&master_secret_hex_out, conn->secure\&.master_secret[i]));
89     }
90 
91     EXPECT_EQUAL(memcmp(master_secret_hex_pad, master_secret_hex_in, sizeof(master_secret_hex_pad)), 0);
92 
93     EXPECT_SUCCESS(s2n_connection_free(conn));
94     EXPECT_SUCCESS(s2n_stuffer_free(&client_random_in));
95     EXPECT_SUCCESS(s2n_stuffer_free(&server_random_in));
96     EXPECT_SUCCESS(s2n_stuffer_free(&premaster_secret_in));
97 
98     END_TEST();
99 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

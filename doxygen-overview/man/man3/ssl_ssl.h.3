.TH "ssl.h" 3 "Fri Aug 12 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ssl.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/e_os2\&.h>\fP
.br
\fC#include <openssl/comp\&.h>\fP
.br
\fC#include <openssl/bio\&.h>\fP
.br
\fC#include <openssl/x509\&.h>\fP
.br
\fC#include <openssl/crypto\&.h>\fP
.br
\fC#include <openssl/lhash\&.h>\fP
.br
\fC#include <openssl/buffer\&.h>\fP
.br
\fC#include <openssl/pem\&.h>\fP
.br
\fC#include <openssl/hmac\&.h>\fP
.br
\fC#include <openssl/kssl\&.h>\fP
.br
\fC#include <openssl/safestack\&.h>\fP
.br
\fC#include <openssl/symhacks\&.h>\fP
.br
\fC#include <openssl/ssl2\&.h>\fP
.br
\fC#include <openssl/ssl3\&.h>\fP
.br
\fC#include <openssl/tls1\&.h>\fP
.br
\fC#include <openssl/dtls1\&.h>\fP
.br
\fC#include <openssl/ssl23\&.h>\fP
.br
\fC#include <openssl/srtp\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsrtp_protection_profile_st\fP"
.br
.ti -1c
.RI "struct \fBssl_cipher_st\fP"
.br
.ti -1c
.RI "struct \fBssl_method_st\fP"
.br
.ti -1c
.RI "struct \fBssl_session_st\fP"
.br
.ti -1c
.RI "struct \fBsrp_ctx_st\fP"
.br
.ti -1c
.RI "struct \fBssl_comp_st\fP"
.br
.ti -1c
.RI "struct \fBssl_ctx_st\fP"
.br
.ti -1c
.RI "struct \fBssl_st\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSSL_SESSION_ASN1_VERSION\fP   0x0001"
.br
.ti -1c
.RI "#define \fBSSL_TXT_NULL_WITH_MD5\fP   \fBSSL2_TXT_NULL_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC4_128_WITH_MD5\fP   \fBSSL2_TXT_RC4_128_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC4_128_EXPORT40_WITH_MD5\fP   \fBSSL2_TXT_RC4_128_EXPORT40_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC2_128_CBC_WITH_MD5\fP   \fBSSL2_TXT_RC2_128_CBC_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC2_128_CBC_EXPORT40_WITH_MD5\fP   \fBSSL2_TXT_RC2_128_CBC_EXPORT40_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_IDEA_128_CBC_WITH_MD5\fP   \fBSSL2_TXT_IDEA_128_CBC_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DES_64_CBC_WITH_MD5\fP   \fBSSL2_TXT_DES_64_CBC_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DES_64_CBC_WITH_SHA\fP   \fBSSL2_TXT_DES_64_CBC_WITH_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DES_192_EDE3_CBC_WITH_MD5\fP   \fBSSL2_TXT_DES_192_EDE3_CBC_WITH_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DES_192_EDE3_CBC_WITH_SHA\fP   \fBSSL2_TXT_DES_192_EDE3_CBC_WITH_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_64_CBC_SHA\fP   \fBSSL3_TXT_KRB5_DES_64_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_192_CBC3_SHA\fP   \fBSSL3_TXT_KRB5_DES_192_CBC3_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC4_128_SHA\fP   \fBSSL3_TXT_KRB5_RC4_128_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_IDEA_128_CBC_SHA\fP   \fBSSL3_TXT_KRB5_IDEA_128_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_64_CBC_MD5\fP   \fBSSL3_TXT_KRB5_DES_64_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_192_CBC3_MD5\fP   \fBSSL3_TXT_KRB5_DES_192_CBC3_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC4_128_MD5\fP   \fBSSL3_TXT_KRB5_RC4_128_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_IDEA_128_CBC_MD5\fP   \fBSSL3_TXT_KRB5_IDEA_128_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_40_CBC_SHA\fP   \fBSSL3_TXT_KRB5_DES_40_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC2_40_CBC_SHA\fP   \fBSSL3_TXT_KRB5_RC2_40_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC4_40_SHA\fP   \fBSSL3_TXT_KRB5_RC4_40_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_40_CBC_MD5\fP   \fBSSL3_TXT_KRB5_DES_40_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC2_40_CBC_MD5\fP   \fBSSL3_TXT_KRB5_RC2_40_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_RC4_40_MD5\fP   \fBSSL3_TXT_KRB5_RC4_40_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_40_CBC_SHA\fP   \fBSSL3_TXT_KRB5_DES_40_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_40_CBC_MD5\fP   \fBSSL3_TXT_KRB5_DES_40_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_64_CBC_SHA\fP   \fBSSL3_TXT_KRB5_DES_64_CBC_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_64_CBC_MD5\fP   \fBSSL3_TXT_KRB5_DES_64_CBC_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_192_CBC3_SHA\fP   \fBSSL3_TXT_KRB5_DES_192_CBC3_SHA\fP"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5_DES_192_CBC3_MD5\fP   \fBSSL3_TXT_KRB5_DES_192_CBC3_MD5\fP"
.br
.ti -1c
.RI "#define \fBSSL_MAX_KRB5_PRINCIPAL_LENGTH\fP   256"
.br
.ti -1c
.RI "#define \fBSSL_MAX_SSL_SESSION_ID_LENGTH\fP   32"
.br
.ti -1c
.RI "#define \fBSSL_MAX_SID_CTX_LENGTH\fP   32"
.br
.ti -1c
.RI "#define \fBSSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES\fP   (512/8)"
.br
.ti -1c
.RI "#define \fBSSL_MAX_KEY_ARG_LENGTH\fP   8"
.br
.ti -1c
.RI "#define \fBSSL_MAX_MASTER_KEY_LENGTH\fP   48"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EXP40\fP   'EXPORT40'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EXP56\fP   'EXPORT56'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_LOW\fP   'LOW'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_MEDIUM\fP   'MEDIUM'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_HIGH\fP   'HIGH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_FIPS\fP   'FIPS'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kFZA\fP   'kFZA'/* unused! */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aFZA\fP   'aFZA'/* unused! */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_eFZA\fP   'eFZA'/* unused! */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_FZA\fP   'FZA'/* unused! */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aNULL\fP   'aNULL'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_eNULL\fP   'eNULL'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_NULL\fP   'NULL'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kRSA\fP   'kRSA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kDHr\fP   'kDHr'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kDHd\fP   'kDHd'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kDH\fP   'kDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kEDH\fP   'kEDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kDHE\fP   'kDHE'/* alias for kEDH */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kKRB5\fP   'kKRB5'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kECDHr\fP   'kECDHr'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kECDHe\fP   'kECDHe'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kECDH\fP   'kECDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kEECDH\fP   'kEECDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kECDHE\fP   'kECDHE'/* alias for kEECDH */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kPSK\fP   'kPSK'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kGOST\fP   'kGOST'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_kSRP\fP   'kSRP'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aRSA\fP   'aRSA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aDSS\fP   'aDSS'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aDH\fP   'aDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aECDH\fP   'aECDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aKRB5\fP   'aKRB5'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aECDSA\fP   'aECDSA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aPSK\fP   'aPSK'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aGOST94\fP   'aGOST94'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aGOST01\fP   'aGOST01'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aGOST\fP   'aGOST'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_aSRP\fP   'aSRP'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DSS\fP   'DSS'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DH\fP   'DH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EDH\fP   'EDH'/* same as 'kEDH:\-ADH' */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DHE\fP   'DHE'/* alias for EDH */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_ADH\fP   'ADH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RSA\fP   'RSA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_ECDH\fP   'ECDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EECDH\fP   'EECDH'/* same as 'kEECDH:\-AECDH' */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_ECDHE\fP   'ECDHE'/* alias for ECDHE' */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_AECDH\fP   'AECDH'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_ECDSA\fP   'ECDSA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_KRB5\fP   'KRB5'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_PSK\fP   'PSK'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SRP\fP   'SRP'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_DES\fP   'DES'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_3DES\fP   '3DES'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC4\fP   'RC4'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_RC2\fP   'RC2'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_IDEA\fP   'IDEA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SEED\fP   'SEED'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_AES128\fP   'AES128'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_AES256\fP   'AES256'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_AES\fP   'AES'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_AES_GCM\fP   'AESGCM'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_CAMELLIA128\fP   'CAMELLIA128'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_CAMELLIA256\fP   'CAMELLIA256'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_CAMELLIA\fP   'CAMELLIA'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_MD5\fP   'MD5'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SHA1\fP   'SHA1'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SHA\fP   'SHA'/* same as 'SHA1' */"
.br
.ti -1c
.RI "#define \fBSSL_TXT_GOST94\fP   'GOST94'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_GOST89MAC\fP   'GOST89MAC'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SHA256\fP   'SHA256'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SHA384\fP   'SHA384'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SSLV2\fP   'SSLv2'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_SSLV3\fP   'SSLv3'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_TLSV1\fP   'TLSv1'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_TLSV1_1\fP   'TLSv1\&.1'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_TLSV1_2\fP   'TLSv1\&.2'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EXP\fP   'EXP'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_EXPORT\fP   'EXPORT'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_ALL\fP   'ALL'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_CMPALL\fP   'COMPLEMENTOFALL'"
.br
.ti -1c
.RI "#define \fBSSL_TXT_CMPDEF\fP   'COMPLEMENTOFDEFAULT'"
.br
.ti -1c
.RI "#define \fBSSL_DEFAULT_CIPHER_LIST\fP   'ALL:!EXPORT:!LOW:!aNULL:!eNULL:!SSLv2'"
.br
.ti -1c
.RI "#define \fBSSL_SENT_SHUTDOWN\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_RECEIVED_SHUTDOWN\fP   2"
.br
.ti -1c
.RI "#define \fBSSL_FILETYPE_ASN1\fP   \fBX509_FILETYPE_ASN1\fP"
.br
.ti -1c
.RI "#define \fBSSL_FILETYPE_PEM\fP   \fBX509_FILETYPE_PEM\fP"
.br
.ti -1c
.RI "#define \fBSSL_OP_MICROSOFT_SESS_ID_BUG\fP   0x00000001L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NETSCAPE_CHALLENGE_BUG\fP   0x00000002L"
.br
.ti -1c
.RI "#define \fBSSL_OP_LEGACY_SERVER_CONNECT\fP   0x00000004L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG\fP   0x00000008L"
.br
.ti -1c
.RI "#define \fBSSL_OP_TLSEXT_PADDING\fP   0x00000010L"
.br
.ti -1c
.RI "#define \fBSSL_OP_MICROSOFT_BIG_SSLV3_BUFFER\fP   0x00000020L"
.br
.ti -1c
.RI "#define \fBSSL_OP_SAFARI_ECDHE_ECDSA_BUG\fP   0x00000040L"
.br
.ti -1c
.RI "#define \fBSSL_OP_SSLEAY_080_CLIENT_DH_BUG\fP   0x00000080L"
.br
.ti -1c
.RI "#define \fBSSL_OP_TLS_D5_BUG\fP   0x00000100L"
.br
.ti -1c
.RI "#define \fBSSL_OP_TLS_BLOCK_PADDING_BUG\fP   0x00000200L"
.br
.ti -1c
.RI "#define \fBSSL_OP_MSIE_SSLV2_RSA_PADDING\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_OP_DONT_INSERT_EMPTY_FRAGMENTS\fP   0x00000800L"
.br
.ti -1c
.RI "#define \fBSSL_OP_ALL\fP   0x80000BFFL"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_QUERY_MTU\fP   0x00001000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_COOKIE_EXCHANGE\fP   0x00002000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_TICKET\fP   0x00004000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_CISCO_ANYCONNECT\fP   0x00008000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION\fP   0x00010000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_COMPRESSION\fP   0x00020000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION\fP   0x00040000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_SINGLE_ECDH_USE\fP   0x00080000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_SINGLE_DH_USE\fP   0x00100000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_EPHEMERAL_RSA\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_OP_CIPHER_SERVER_PREFERENCE\fP   0x00400000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_TLS_ROLLBACK_BUG\fP   0x00800000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_SSLv2\fP   0x01000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_SSLv3\fP   0x02000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_TLSv1\fP   0x04000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_TLSv1_2\fP   0x08000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_TLSv1_1\fP   0x10000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_DTLSv1\fP   0x04000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_DTLSv1_2\fP   0x08000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NO_SSL_MASK\fP"
.br
.ti -1c
.RI "#define \fBSSL_OP_PKCS1_CHECK_1\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_OP_PKCS1_CHECK_2\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_OP_NETSCAPE_CA_DN_BUG\fP   0x20000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG\fP   0x40000000L"
.br
.ti -1c
.RI "#define \fBSSL_OP_CRYPTOPRO_TLSEXT_BUG\fP   0x80000000L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_ENABLE_PARTIAL_WRITE\fP   0x00000001L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_ACCEPT_MOVING_WRITE_BUFFER\fP   0x00000002L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_AUTO_RETRY\fP   0x00000004L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_NO_AUTO_CHAIN\fP   0x00000008L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_RELEASE_BUFFERS\fP   0x00000010L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_SEND_CLIENTHELLO_TIME\fP   0x00000020L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_SEND_SERVERHELLO_TIME\fP   0x00000040L"
.br
.ti -1c
.RI "#define \fBSSL_MODE_SEND_FALLBACK_SCSV\fP   0x00000080L"
.br
.ti -1c
.RI "#define \fBSSL_CERT_FLAG_TLS_STRICT\fP   0x00000001L"
.br
.ti -1c
.RI "#define \fBSSL_CERT_FLAG_SUITEB_128_LOS_ONLY\fP   0x10000"
.br
.ti -1c
.RI "#define \fBSSL_CERT_FLAG_SUITEB_192_LOS\fP   0x20000"
.br
.ti -1c
.RI "#define \fBSSL_CERT_FLAG_SUITEB_128_LOS\fP   0x30000"
.br
.ti -1c
.RI "#define \fBSSL_CERT_FLAG_BROKEN_PROTOCOL\fP   0x10000000"
.br
.ti -1c
.RI "#define \fBSSL_BUILD_CHAIN_FLAG_UNTRUSTED\fP   0x1"
.br
.ti -1c
.RI "#define \fBSSL_BUILD_CHAIN_FLAG_NO_ROOT\fP   0x2"
.br
.ti -1c
.RI "#define \fBSSL_BUILD_CHAIN_FLAG_CHECK\fP   0x4"
.br
.ti -1c
.RI "#define \fBSSL_BUILD_CHAIN_FLAG_IGNORE_ERROR\fP   0x8"
.br
.ti -1c
.RI "#define \fBSSL_BUILD_CHAIN_FLAG_CLEAR_ERROR\fP   0x10"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_VALID\fP   0x1"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_SIGN\fP   0x2"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_EE_SIGNATURE\fP   0x10"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_CA_SIGNATURE\fP   0x20"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_EE_PARAM\fP   0x40"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_CA_PARAM\fP   0x80"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_EXPLICIT_SIGN\fP   0x100"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_ISSUER_NAME\fP   0x200"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_CERT_TYPE\fP   0x400"
.br
.ti -1c
.RI "#define \fBCERT_PKEY_SUITEB\fP   0x800"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_CMDLINE\fP   0x1"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_FILE\fP   0x2"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_CLIENT\fP   0x4"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_SERVER\fP   0x8"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_SHOW_ERRORS\fP   0x10"
.br
.ti -1c
.RI "#define \fBSSL_CONF_FLAG_CERTIFICATE\fP   0x20"
.br
.ti -1c
.RI "#define \fBSSL_CONF_TYPE_UNKNOWN\fP   0x0"
.br
.ti -1c
.RI "#define \fBSSL_CONF_TYPE_STRING\fP   0x1"
.br
.ti -1c
.RI "#define \fBSSL_CONF_TYPE_FILE\fP   0x2"
.br
.ti -1c
.RI "#define \fBSSL_CONF_TYPE_DIR\fP   0x3"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_options\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_OPTIONS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_clear_options\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_OPTIONS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_options\fP(ctx)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_OPTIONS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_options\fP(ssl,  op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_OPTIONS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_clear_options\fP(ssl,  op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_OPTIONS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_get_options\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_OPTIONS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_mode\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_MODE\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_clear_mode\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_MODE\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_mode\fP(ctx)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_MODE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_clear_mode\fP(ssl,  op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_MODE\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_mode\fP(ssl,  op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_MODE\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_get_mode\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_MODE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_mtu\fP(ssl,  mtu)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_SET_MTU\fP,(mtu),NULL)"
.br
.ti -1c
.RI "#define \fBDTLS_set_link_mtu\fP(ssl,  mtu)   \fBSSL_ctrl\fP((ssl),\fBDTLS_CTRL_SET_LINK_MTU\fP,(mtu),NULL)"
.br
.ti -1c
.RI "#define \fBDTLS_get_link_min_mtu\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBDTLS_CTRL_GET_LINK_MIN_MTU\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_get_secure_renegotiation_support\fP(ssl)   \fBSSL_ctrl\fP((ssl), \fBSSL_CTRL_GET_RI_SUPPORT\fP, 0, NULL)"
.br
.ti -1c
.RI "#define \fBSSL_heartbeat\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_TLS_EXT_SEND_HEARTBEAT\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_cert_flags\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CERT_FLAGS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_cert_flags\fP(s,  op)   \fBSSL_ctrl\fP((s),\fBSSL_CTRL_CERT_FLAGS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_clear_cert_flags\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_CERT_FLAGS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_clear_cert_flags\fP(s,  op)   \fBSSL_ctrl\fP((s),\fBSSL_CTRL_CLEAR_CERT_FLAGS\fP,(op),NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_msg_callback_arg\fP(ctx,  arg)   \fBSSL_CTX_ctrl\fP((ctx), \fBSSL_CTRL_SET_MSG_CALLBACK_ARG\fP, 0, (arg))"
.br
.ti -1c
.RI "#define \fBSSL_set_msg_callback_arg\fP(ssl,  arg)   \fBSSL_ctrl\fP((ssl), \fBSSL_CTRL_SET_MSG_CALLBACK_ARG\fP, 0, (arg))"
.br
.ti -1c
.RI "#define \fBSSL_MAX_CERT_LIST_DEFAULT\fP   1024*100"
.br
.ti -1c
.RI "#define \fBSSL_SESSION_CACHE_MAX_SIZE_DEFAULT\fP   (1024*20)"
.br
.ti -1c
.RI "#define \fBSSL_MAX_BUF_FREELIST_LEN_DEFAULT\fP   32"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_OFF\fP   0x0000"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_CLIENT\fP   0x0001"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_SERVER\fP   0x0002"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_BOTH\fP   (\fBSSL_SESS_CACHE_CLIENT\fP|\fBSSL_SESS_CACHE_SERVER\fP)"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_NO_AUTO_CLEAR\fP   0x0080"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_NO_INTERNAL_LOOKUP\fP   0x0100"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_NO_INTERNAL_STORE\fP   0x0200"
.br
.ti -1c
.RI "#define \fBSSL_SESS_CACHE_NO_INTERNAL\fP   (\fBSSL_SESS_CACHE_NO_INTERNAL_LOOKUP\fP|\fBSSL_SESS_CACHE_NO_INTERNAL_STORE\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_number\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_NUMBER\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_connect\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_connect_good\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT_GOOD\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_connect_renegotiate\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT_RENEGOTIATE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_accept\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_accept_renegotiate\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT_RENEGOTIATE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_accept_good\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT_GOOD\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_hits\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_HIT\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_cb_hits\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CB_HIT\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_misses\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_MISSES\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_timeouts\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_TIMEOUTS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_cache_full\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CACHE_FULL\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBOPENSSL_NPN_UNSUPPORTED\fP   0"
.br
.ti -1c
.RI "#define \fBOPENSSL_NPN_NEGOTIATED\fP   1"
.br
.ti -1c
.RI "#define \fBOPENSSL_NPN_NO_OVERLAP\fP   2"
.br
.ti -1c
.RI "#define \fBPSK_MAX_IDENTITY_LEN\fP   128"
.br
.ti -1c
.RI "#define \fBPSK_MAX_PSK_LEN\fP   256"
.br
.ti -1c
.RI "#define \fBSSL_NOTHING\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_WRITING\fP   2"
.br
.ti -1c
.RI "#define \fBSSL_READING\fP   3"
.br
.ti -1c
.RI "#define \fBSSL_X509_LOOKUP\fP   4"
.br
.ti -1c
.RI "#define \fBSSL_want_nothing\fP(s)         (\fBSSL_want\fP(s) == \fBSSL_NOTHING\fP)"
.br
.ti -1c
.RI "#define \fBSSL_want_read\fP(s)               (\fBSSL_want\fP(s) == \fBSSL_READING\fP)"
.br
.ti -1c
.RI "#define \fBSSL_want_write\fP(s)             (\fBSSL_want\fP(s) == \fBSSL_WRITING\fP)"
.br
.ti -1c
.RI "#define \fBSSL_want_x509_lookup\fP(s)   (\fBSSL_want\fP(s) == \fBSSL_X509_LOOKUP\fP)"
.br
.ti -1c
.RI "#define \fBSSL_MAC_FLAG_READ_MAC_STREAM\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_MAC_FLAG_WRITE_MAC_STREAM\fP   2"
.br
.ti -1c
.RI "#define \fBsession_ctx\fP   initial_ctx"
.br
.ti -1c
.RI "#define \fBSSL_set_app_data\fP(s,  arg)                 (\fBSSL_set_ex_data\fP(s,0,(char *)arg))"
.br
.ti -1c
.RI "#define \fBSSL_get_app_data\fP(s)                         (\fBSSL_get_ex_data\fP(s,0))"
.br
.ti -1c
.RI "#define \fBSSL_SESSION_set_app_data\fP(s,  \fBa\fP)     (\fBSSL_SESSION_set_ex_data\fP(s,0,(char *)\fBa\fP))"
.br
.ti -1c
.RI "#define \fBSSL_SESSION_get_app_data\fP(s)         (\fBSSL_SESSION_get_ex_data\fP(s,0))"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_app_data\fP(ctx)             (\fBSSL_CTX_get_ex_data\fP(ctx,0))"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_app_data\fP(ctx,  arg)     (\fBSSL_CTX_set_ex_data\fP(ctx,0,(char *)arg))"
.br
.ti -1c
.RI "#define \fBSSL_ST_CONNECT\fP   0x1000"
.br
.ti -1c
.RI "#define \fBSSL_ST_ACCEPT\fP   0x2000"
.br
.ti -1c
.RI "#define \fBSSL_ST_MASK\fP   0x0FFF"
.br
.ti -1c
.RI "#define \fBSSL_ST_INIT\fP   (\fBSSL_ST_CONNECT\fP|\fBSSL_ST_ACCEPT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_ST_BEFORE\fP   0x4000"
.br
.ti -1c
.RI "#define \fBSSL_ST_OK\fP   0x03"
.br
.ti -1c
.RI "#define \fBSSL_ST_RENEGOTIATE\fP   (0x04|SSL_ST_INIT)"
.br
.ti -1c
.RI "#define \fBSSL_ST_ERR\fP   0x05"
.br
.ti -1c
.RI "#define \fBSSL_CB_LOOP\fP   0x01"
.br
.ti -1c
.RI "#define \fBSSL_CB_EXIT\fP   0x02"
.br
.ti -1c
.RI "#define \fBSSL_CB_READ\fP   0x04"
.br
.ti -1c
.RI "#define \fBSSL_CB_WRITE\fP   0x08"
.br
.ti -1c
.RI "#define \fBSSL_CB_ALERT\fP   0x4000/* used in callback */"
.br
.ti -1c
.RI "#define \fBSSL_CB_READ_ALERT\fP   (\fBSSL_CB_ALERT\fP|\fBSSL_CB_READ\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_WRITE_ALERT\fP   (\fBSSL_CB_ALERT\fP|\fBSSL_CB_WRITE\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_ACCEPT_LOOP\fP   (\fBSSL_ST_ACCEPT\fP|\fBSSL_CB_LOOP\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_ACCEPT_EXIT\fP   (\fBSSL_ST_ACCEPT\fP|\fBSSL_CB_EXIT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_CONNECT_LOOP\fP   (\fBSSL_ST_CONNECT\fP|\fBSSL_CB_LOOP\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_CONNECT_EXIT\fP   (\fBSSL_ST_CONNECT\fP|\fBSSL_CB_EXIT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_CB_HANDSHAKE_START\fP   0x10"
.br
.ti -1c
.RI "#define \fBSSL_CB_HANDSHAKE_DONE\fP   0x20"
.br
.ti -1c
.RI "#define \fBSSL_get_state\fP(\fBa\fP)                               \fBSSL_state\fP(\fBa\fP)"
.br
.ti -1c
.RI "#define \fBSSL_is_init_finished\fP(\fBa\fP)                 (\fBSSL_state\fP(\fBa\fP) == \fBSSL_ST_OK\fP)"
.br
.ti -1c
.RI "#define \fBSSL_in_init\fP(\fBa\fP)                                   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_INIT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_in_before\fP(\fBa\fP)                               (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_BEFORE\fP)"
.br
.ti -1c
.RI "#define \fBSSL_in_connect_init\fP(\fBa\fP)                   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_CONNECT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_in_accept_init\fP(\fBa\fP)                     (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_ACCEPT\fP)"
.br
.ti -1c
.RI "#define \fBSSL_ST_READ_HEADER\fP   0xF0"
.br
.ti -1c
.RI "#define \fBSSL_ST_READ_BODY\fP   0xF1"
.br
.ti -1c
.RI "#define \fBSSL_ST_READ_DONE\fP   0xF2"
.br
.ti -1c
.RI "#define \fBSSL_VERIFY_NONE\fP   0x00"
.br
.ti -1c
.RI "#define \fBSSL_VERIFY_PEER\fP   0x01"
.br
.ti -1c
.RI "#define \fBSSL_VERIFY_FAIL_IF_NO_PEER_CERT\fP   0x02"
.br
.ti -1c
.RI "#define \fBSSL_VERIFY_CLIENT_ONCE\fP   0x04"
.br
.ti -1c
.RI "#define \fBOpenSSL_add_ssl_algorithms\fP()       \fBSSL_library_init\fP()"
.br
.ti -1c
.RI "#define \fBSSLeay_add_ssl_algorithms\fP()         \fBSSL_library_init\fP()"
.br
.ti -1c
.RI "#define \fBSSL_get_cipher\fP(s)   \fBSSL_CIPHER_get_name\fP(\fBSSL_get_current_cipher\fP(s))"
.br
.ti -1c
.RI "#define \fBSSL_get_cipher_bits\fP(s,  np)   \fBSSL_CIPHER_get_bits\fP(\fBSSL_get_current_cipher\fP(s),np)"
.br
.ti -1c
.RI "#define \fBSSL_get_cipher_version\fP(s)   \fBSSL_CIPHER_get_version\fP(\fBSSL_get_current_cipher\fP(s))"
.br
.ti -1c
.RI "#define \fBSSL_get_cipher_name\fP(s)   \fBSSL_CIPHER_get_name\fP(\fBSSL_get_current_cipher\fP(s))"
.br
.ti -1c
.RI "#define \fBSSL_get_time\fP(\fBa\fP)                 \fBSSL_SESSION_get_time\fP(\fBa\fP)"
.br
.ti -1c
.RI "#define \fBSSL_set_time\fP(\fBa\fP,  b)             \fBSSL_SESSION_set_time\fP((\fBa\fP),(b))"
.br
.ti -1c
.RI "#define \fBSSL_get_timeout\fP(\fBa\fP)           \fBSSL_SESSION_get_timeout\fP(\fBa\fP)"
.br
.ti -1c
.RI "#define \fBSSL_set_timeout\fP(\fBa\fP,  b)       \fBSSL_SESSION_set_timeout\fP((\fBa\fP),(b))"
.br
.ti -1c
.RI "#define \fBd2i_SSL_SESSION_bio\fP(\fBbp\fP,  s_id)   \fBASN1_d2i_bio_of\fP(\fBSSL_SESSION\fP,\fBSSL_SESSION_new\fP,\fBd2i_SSL_SESSION\fP,\fBbp\fP,s_id)"
.br
.ti -1c
.RI "#define \fBi2d_SSL_SESSION_bio\fP(\fBbp\fP,  s_id)   \fBASN1_i2d_bio_of\fP(\fBSSL_SESSION\fP,\fBi2d_SSL_SESSION\fP,\fBbp\fP,s_id)"
.br
.ti -1c
.RI "#define \fBSSL_AD_REASON_OFFSET\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_CLOSE_NOTIFY\fP   \fBSSL3_AD_CLOSE_NOTIFY\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNEXPECTED_MESSAGE\fP   \fBSSL3_AD_UNEXPECTED_MESSAGE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_BAD_RECORD_MAC\fP   \fBSSL3_AD_BAD_RECORD_MAC\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_DECRYPTION_FAILED\fP   \fBTLS1_AD_DECRYPTION_FAILED\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_RECORD_OVERFLOW\fP   \fBTLS1_AD_RECORD_OVERFLOW\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_DECOMPRESSION_FAILURE\fP   \fBSSL3_AD_DECOMPRESSION_FAILURE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_HANDSHAKE_FAILURE\fP   \fBSSL3_AD_HANDSHAKE_FAILURE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_NO_CERTIFICATE\fP   \fBSSL3_AD_NO_CERTIFICATE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_BAD_CERTIFICATE\fP   \fBSSL3_AD_BAD_CERTIFICATE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNSUPPORTED_CERTIFICATE\fP   \fBSSL3_AD_UNSUPPORTED_CERTIFICATE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_CERTIFICATE_REVOKED\fP   \fBSSL3_AD_CERTIFICATE_REVOKED\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_CERTIFICATE_EXPIRED\fP   \fBSSL3_AD_CERTIFICATE_EXPIRED\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_CERTIFICATE_UNKNOWN\fP   \fBSSL3_AD_CERTIFICATE_UNKNOWN\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_ILLEGAL_PARAMETER\fP   \fBSSL3_AD_ILLEGAL_PARAMETER\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNKNOWN_CA\fP   \fBTLS1_AD_UNKNOWN_CA\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_ACCESS_DENIED\fP   \fBTLS1_AD_ACCESS_DENIED\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_DECODE_ERROR\fP   \fBTLS1_AD_DECODE_ERROR\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_DECRYPT_ERROR\fP   \fBTLS1_AD_DECRYPT_ERROR\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_EXPORT_RESTRICTION\fP   \fBTLS1_AD_EXPORT_RESTRICTION\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_PROTOCOL_VERSION\fP   \fBTLS1_AD_PROTOCOL_VERSION\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_INSUFFICIENT_SECURITY\fP   \fBTLS1_AD_INSUFFICIENT_SECURITY\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_INTERNAL_ERROR\fP   \fBTLS1_AD_INTERNAL_ERROR\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_USER_CANCELLED\fP   \fBTLS1_AD_USER_CANCELLED\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_NO_RENEGOTIATION\fP   \fBTLS1_AD_NO_RENEGOTIATION\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNSUPPORTED_EXTENSION\fP   \fBTLS1_AD_UNSUPPORTED_EXTENSION\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_CERTIFICATE_UNOBTAINABLE\fP   \fBTLS1_AD_CERTIFICATE_UNOBTAINABLE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNRECOGNIZED_NAME\fP   \fBTLS1_AD_UNRECOGNIZED_NAME\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE\fP   \fBTLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_BAD_CERTIFICATE_HASH_VALUE\fP   \fBTLS1_AD_BAD_CERTIFICATE_HASH_VALUE\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_UNKNOWN_PSK_IDENTITY\fP   \fBTLS1_AD_UNKNOWN_PSK_IDENTITY\fP"
.br
.ti -1c
.RI "#define \fBSSL_AD_INAPPROPRIATE_FALLBACK\fP   \fBTLS1_AD_INAPPROPRIATE_FALLBACK\fP"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_NONE\fP   0"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_SSL\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_WANT_READ\fP   2"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_WANT_WRITE\fP   3"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_WANT_X509_LOOKUP\fP   4"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_SYSCALL\fP"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_ZERO_RETURN\fP   6"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_WANT_CONNECT\fP   7"
.br
.ti -1c
.RI "#define \fBSSL_ERROR_WANT_ACCEPT\fP   8"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_NEED_TMP_RSA\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_RSA\fP   2"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_DH\fP   3"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_ECDH\fP   4"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_RSA_CB\fP   5"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_DH_CB\fP   6"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TMP_ECDH_CB\fP   7"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_SESSION_REUSED\fP   8"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_CLIENT_CERT_REQUEST\fP   9"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_NUM_RENEGOTIATIONS\fP   10"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CLEAR_NUM_RENEGOTIATIONS\fP   11"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TOTAL_RENEGOTIATIONS\fP   12"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_FLAGS\fP   13"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_EXTRA_CHAIN_CERT\fP   14"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_MSG_CALLBACK\fP   15"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_MSG_CALLBACK_ARG\fP   16"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_MTU\fP   17"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_NUMBER\fP   20"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_CONNECT\fP   21"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_CONNECT_GOOD\fP   22"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_CONNECT_RENEGOTIATE\fP   23"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_ACCEPT\fP   24"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_ACCEPT_GOOD\fP   25"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_ACCEPT_RENEGOTIATE\fP   26"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_HIT\fP   27"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_CB_HIT\fP   28"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_MISSES\fP   29"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_TIMEOUTS\fP   30"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SESS_CACHE_FULL\fP   31"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_OPTIONS\fP   32"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_MODE\fP   33"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_READ_AHEAD\fP   40"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_READ_AHEAD\fP   41"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SESS_CACHE_SIZE\fP   42"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_SESS_CACHE_SIZE\fP   43"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SESS_CACHE_MODE\fP   44"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_SESS_CACHE_MODE\fP   45"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_MAX_CERT_LIST\fP   50"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_MAX_CERT_LIST\fP   51"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_MAX_SEND_FRAGMENT\fP   52"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_SERVERNAME_CB\fP   53"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_SERVERNAME_ARG\fP   54"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_HOSTNAME\fP   55"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_DEBUG_CB\fP   56"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_DEBUG_ARG\fP   57"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TLSEXT_TICKET_KEYS\fP   58"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_TICKET_KEYS\fP   59"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT\fP   60"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB\fP   61"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB_ARG\fP   62"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_CB\fP   63"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG\fP   64"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE\fP   65"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS\fP   66"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS\fP   67"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS\fP   68"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS\fP   69"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP\fP   70"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP\fP   71"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLSEXT_TICKET_KEY_CB\fP   72"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB\fP   75"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SRP_VERIFY_PARAM_CB\fP   76"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB\fP   77"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SRP_ARG\fP   78"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLS_EXT_SRP_USERNAME\fP   79"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLS_EXT_SRP_STRENGTH\fP   80"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLS_EXT_SRP_PASSWORD\fP   81"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_TLS_EXT_SEND_HEARTBEAT\fP   85"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_TLS_EXT_HEARTBEAT_PENDING\fP   86"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_TLS_EXT_HEARTBEAT_NO_REQUESTS\fP   87"
.br
.ti -1c
.RI "#define \fBDTLS_CTRL_GET_TIMEOUT\fP   73"
.br
.ti -1c
.RI "#define \fBDTLS_CTRL_HANDLE_TIMEOUT\fP   74"
.br
.ti -1c
.RI "#define \fBDTLS_CTRL_LISTEN\fP   75"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_RI_SUPPORT\fP   76"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CLEAR_OPTIONS\fP   77"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CLEAR_MODE\fP   78"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_EXTRA_CHAIN_CERTS\fP   82"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS\fP   83"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CHAIN\fP   88"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CHAIN_CERT\fP   89"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_CURVES\fP   90"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CURVES\fP   91"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CURVES_LIST\fP   92"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_SHARED_CURVE\fP   93"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_ECDH_AUTO\fP   94"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SIGALGS\fP   97"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_SIGALGS_LIST\fP   98"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CERT_FLAGS\fP   99"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CLEAR_CERT_FLAGS\fP   100"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CLIENT_SIGALGS\fP   101"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CLIENT_SIGALGS_LIST\fP   102"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_CLIENT_CERT_TYPES\fP   103"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CLIENT_CERT_TYPES\fP   104"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_BUILD_CERT_CHAIN\fP   105"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP   106"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP   107"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_PEER_SIGNATURE_NID\fP   108"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_SERVER_TMP_KEY\fP   109"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_RAW_CIPHERLIST\fP   110"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_EC_POINT_FORMATS\fP   111"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_GET_CHAIN_CERTS\fP   115"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SELECT_CURRENT_CERT\fP   116"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_SET_CURRENT_CERT\fP   117"
.br
.ti -1c
.RI "#define \fBSSL_CTRL_CHECK_PROTO_VERSION\fP   119"
.br
.ti -1c
.RI "#define \fBDTLS_CTRL_SET_LINK_MTU\fP   120"
.br
.ti -1c
.RI "#define \fBDTLS_CTRL_GET_LINK_MIN_MTU\fP   121"
.br
.ti -1c
.RI "#define \fBSSL_CERT_SET_FIRST\fP   1"
.br
.ti -1c
.RI "#define \fBSSL_CERT_SET_NEXT\fP   2"
.br
.ti -1c
.RI "#define \fBSSL_CERT_SET_SERVER\fP   3"
.br
.ti -1c
.RI "#define \fBDTLSv1_get_timeout\fP(ssl,  arg)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_GET_TIMEOUT\fP,0, (\fBvoid\fP *)arg)"
.br
.ti -1c
.RI "#define \fBDTLSv1_handle_timeout\fP(ssl)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_HANDLE_TIMEOUT\fP,0, NULL)"
.br
.ti -1c
.RI "#define \fBDTLSv1_listen\fP(ssl,  peer)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_LISTEN\fP,0, (\fBvoid\fP *)peer)"
.br
.ti -1c
.RI "#define \fBSSL_session_reused\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_SESSION_REUSED\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_num_renegotiations\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_NUM_RENEGOTIATIONS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_clear_num_renegotiations\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_NUM_RENEGOTIATIONS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_total_renegotiations\fP(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_TOTAL_RENEGOTIATIONS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_need_tmp_RSA\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_NEED_TMP_RSA\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_tmp_rsa\fP(ctx,  rsa)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_RSA\fP,0,(char *)rsa)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_tmp_dh\fP(ctx,  dh)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_DH\fP,0,(char *)dh)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_tmp_ecdh\fP(ctx,  ecdh)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_ECDH\fP,0,(char *)ecdh)"
.br
.ti -1c
.RI "#define \fBSSL_need_tmp_RSA\fP(ssl)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_NEED_TMP_RSA\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_tmp_rsa\fP(ssl,  rsa)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_RSA\fP,0,(char *)rsa)"
.br
.ti -1c
.RI "#define \fBSSL_set_tmp_dh\fP(ssl,  dh)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_DH\fP,0,(char *)dh)"
.br
.ti -1c
.RI "#define \fBSSL_set_tmp_ecdh\fP(ssl,  ecdh)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_ECDH\fP,0,(char *)ecdh)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_add_extra_chain_cert\fP(ctx,  x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_EXTRA_CHAIN_CERT\fP,0,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_extra_chain_certs\fP(ctx,  px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_EXTRA_CHAIN_CERTS\fP,0,px509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_extra_chain_certs_only\fP(ctx,  px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_EXTRA_CHAIN_CERTS\fP,1,px509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_clear_extra_chain_certs\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set0_chain\fP(ctx,  sk)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,0,(char *)sk)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_chain\fP(ctx,  sk)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,1,(char *)sk)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_add0_chain_cert\fP(ctx,  x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,0,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_add1_chain_cert\fP(ctx,  x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,1,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get0_chain_certs\fP(ctx,  px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_CHAIN_CERTS\fP,0,px509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_clear_chain_certs\fP(ctx)   \fBSSL_CTX_set0_chain\fP(ctx,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_build_cert_chain\fP(ctx,  \fBflags\fP)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_BUILD_CERT_CHAIN\fP, \fBflags\fP, NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_select_current_cert\fP(ctx,  x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SELECT_CURRENT_CERT\fP,0,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_current_cert\fP(ctx,  op)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURRENT_CERT\fP, op, NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set0_verify_cert_store\fP(ctx,  st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,0,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_verify_cert_store\fP(ctx,  st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,1,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set0_chain_cert_store\fP(ctx,  st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,0,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_chain_cert_store\fP(ctx,  st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,1,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_set0_chain\fP(ctx,  sk)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,0,(char *)sk)"
.br
.ti -1c
.RI "#define \fBSSL_set1_chain\fP(ctx,  sk)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,1,(char *)sk)"
.br
.ti -1c
.RI "#define \fBSSL_add0_chain_cert\fP(ctx,  x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,0,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_add1_chain_cert\fP(ctx,  x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,1,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_get0_chain_certs\fP(ctx,  px509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_GET_CHAIN_CERTS\fP,0,px509)"
.br
.ti -1c
.RI "#define \fBSSL_clear_chain_certs\fP(ctx)   \fBSSL_set0_chain\fP(ctx,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_build_cert_chain\fP(s,  \fBflags\fP)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_BUILD_CERT_CHAIN\fP, \fBflags\fP, NULL)"
.br
.ti -1c
.RI "#define \fBSSL_select_current_cert\fP(ctx,  x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SELECT_CURRENT_CERT\fP,0,(char *)x509)"
.br
.ti -1c
.RI "#define \fBSSL_set_current_cert\fP(ctx,  op)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURRENT_CERT\fP, op, NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set0_verify_cert_store\fP(s,  st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,0,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_set1_verify_cert_store\fP(s,  st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,1,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_set0_chain_cert_store\fP(s,  st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,0,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_set1_chain_cert_store\fP(s,  st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,1,(char *)st)"
.br
.ti -1c
.RI "#define \fBSSL_get1_curves\fP(ctx,  s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_GET_CURVES\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_curves\fP(ctx,  clist,  clistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES\fP,clistlen,(char *)clist)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_curves_list\fP(ctx,  s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_set1_curves\fP(ctx,  clist,  clistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES\fP,clistlen,(char *)clist)"
.br
.ti -1c
.RI "#define \fBSSL_set1_curves_list\fP(ctx,  s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_get_shared_curve\fP(s,  n)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_SHARED_CURVE\fP,n,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_ecdh_auto\fP(ctx,  onoff)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_ECDH_AUTO\fP,onoff,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_ecdh_auto\fP(s,  onoff)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_ECDH_AUTO\fP,onoff,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_sigalgs\fP(ctx,  slist,  slistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS\fP,slistlen,(int *)slist)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_sigalgs_list\fP(ctx,  s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_set1_sigalgs\fP(ctx,  slist,  slistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS\fP,slistlen,(int *)slist)"
.br
.ti -1c
.RI "#define \fBSSL_set1_sigalgs_list\fP(ctx,  s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_client_sigalgs\fP(ctx,  slist,  slistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS\fP,slistlen,(int *)slist)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_client_sigalgs_list\fP(ctx,  s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_set1_client_sigalgs\fP(ctx,  slist,  slistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS\fP,clistlen,(int *)slist)"
.br
.ti -1c
.RI "#define \fBSSL_set1_client_sigalgs_list\fP(ctx,  s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS_LIST\fP,0,(char *)s)"
.br
.ti -1c
.RI "#define \fBSSL_get0_certificate_types\fP(s,  clist)   \fBSSL_ctrl\fP(s, \fBSSL_CTRL_GET_CLIENT_CERT_TYPES\fP, 0, (char *)clist)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set1_client_certificate_types\fP(ctx,  clist,  clistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_CERT_TYPES\fP,clistlen,(char *)clist)"
.br
.ti -1c
.RI "#define \fBSSL_set1_client_certificate_types\fP(s,  clist,  clistlen)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CLIENT_CERT_TYPES\fP,clistlen,(char *)clist)"
.br
.ti -1c
.RI "#define \fBSSL_get_peer_signature_nid\fP(s,  pn)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_PEER_SIGNATURE_NID\fP,0,pn)"
.br
.ti -1c
.RI "#define \fBSSL_get_server_tmp_key\fP(s,  pk)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_SERVER_TMP_KEY\fP,0,pk)"
.br
.ti -1c
.RI "#define \fBSSL_get0_raw_cipherlist\fP(s,  plst)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_RAW_CIPHERLIST\fP,0,(char *)plst)"
.br
.ti -1c
.RI "#define \fBSSL_get0_ec_point_formats\fP(s,  plst)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_EC_POINT_FORMATS\fP,0,(char *)plst)"
.br
.ti -1c
.RI "#define \fBSSL_get0_session\fP   \fBSSL_get_session\fP/* just peek at pointer */"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_set_cache_size\fP(ctx,  \fBt\fP)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SESS_CACHE_SIZE\fP,\fBt\fP,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_sess_get_cache_size\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_SESS_CACHE_SIZE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_session_cache_mode\fP(ctx,  m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SESS_CACHE_MODE\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_session_cache_mode\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_SESS_CACHE_MODE\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_default_read_ahead\fP(ctx)   \fBSSL_CTX_get_read_ahead\fP(ctx)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_default_read_ahead\fP(ctx,  m)   \fBSSL_CTX_set_read_ahead\fP(ctx,m)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_read_ahead\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_READ_AHEAD\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_read_ahead\fP(ctx,  m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_READ_AHEAD\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_get_max_cert_list\fP(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_MAX_CERT_LIST\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_max_cert_list\fP(ctx,  m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_MAX_CERT_LIST\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_get_max_cert_list\fP(ssl)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_GET_MAX_CERT_LIST\fP,0,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_max_cert_list\fP(ssl,  m)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_MAX_CERT_LIST\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_CTX_set_max_send_fragment\fP(ctx,  m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_MAX_SEND_FRAGMENT\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_set_max_send_fragment\fP(ssl,  m)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_MAX_SEND_FRAGMENT\fP,m,NULL)"
.br
.ti -1c
.RI "#define \fBSSL_F_CHECK_SUITEB_CIPHER_LIST\fP   331"
.br
.ti -1c
.RI "#define \fBSSL_F_CLIENT_CERTIFICATE\fP   100"
.br
.ti -1c
.RI "#define \fBSSL_F_CLIENT_FINISHED\fP   167"
.br
.ti -1c
.RI "#define \fBSSL_F_CLIENT_HELLO\fP   101"
.br
.ti -1c
.RI "#define \fBSSL_F_CLIENT_MASTER_KEY\fP   102"
.br
.ti -1c
.RI "#define \fBSSL_F_D2I_SSL_SESSION\fP   103"
.br
.ti -1c
.RI "#define \fBSSL_F_DO_DTLS1_WRITE\fP   245"
.br
.ti -1c
.RI "#define \fBSSL_F_DO_SSL3_WRITE\fP   104"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_ACCEPT\fP   246"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_ADD_CERT_TO_BUF\fP   295"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_BUFFER_RECORD\fP   247"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_CHECK_TIMEOUT_NUM\fP   316"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_CLIENT_HELLO\fP   248"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_CONNECT\fP   249"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_ENC\fP   250"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_GET_HELLO_VERIFY\fP   251"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_GET_MESSAGE\fP   252"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_GET_MESSAGE_FRAGMENT\fP   253"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_GET_RECORD\fP   254"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_HANDLE_TIMEOUT\fP   297"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_HEARTBEAT\fP   305"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_OUTPUT_CERT_CHAIN\fP   255"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_PREPROCESS_FRAGMENT\fP   288"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE\fP   256"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_PROCESS_RECORD\fP   257"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_READ_BYTES\fP   258"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_READ_FAILED\fP   259"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_CERTIFICATE_REQUEST\fP   260"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_CLIENT_CERTIFICATE\fP   261"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_CLIENT_KEY_EXCHANGE\fP   262"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_CLIENT_VERIFY\fP   263"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_HELLO_VERIFY_REQUEST\fP   264"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_SERVER_CERTIFICATE\fP   265"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_SERVER_HELLO\fP   266"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_SEND_SERVER_KEY_EXCHANGE\fP   267"
.br
.ti -1c
.RI "#define \fBSSL_F_DTLS1_WRITE_APP_DATA_BYTES\fP   268"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_CLIENT_FINISHED\fP   105"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_CLIENT_HELLO\fP   106"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_CLIENT_MASTER_KEY\fP   107"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_SERVER_FINISHED\fP   108"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_SERVER_HELLO\fP   109"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_SERVER_STATIC_DH_KEY\fP   340"
.br
.ti -1c
.RI "#define \fBSSL_F_GET_SERVER_VERIFY\fP   110"
.br
.ti -1c
.RI "#define \fBSSL_F_I2D_SSL_SESSION\fP   111"
.br
.ti -1c
.RI "#define \fBSSL_F_READ_N\fP   112"
.br
.ti -1c
.RI "#define \fBSSL_F_REQUEST_CERTIFICATE\fP   113"
.br
.ti -1c
.RI "#define \fBSSL_F_SERVER_FINISH\fP   239"
.br
.ti -1c
.RI "#define \fBSSL_F_SERVER_HELLO\fP   114"
.br
.ti -1c
.RI "#define \fBSSL_F_SERVER_VERIFY\fP   240"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_ACCEPT\fP   115"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_CLIENT_HELLO\fP   116"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_CONNECT\fP   117"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_GET_CLIENT_HELLO\fP   118"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_GET_SERVER_HELLO\fP   119"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_PEEK\fP   237"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_READ\fP   120"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL23_WRITE\fP   121"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_ACCEPT\fP   122"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_CONNECT\fP   123"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_ENC_INIT\fP   124"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_GENERATE_KEY_MATERIAL\fP   241"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_PEEK\fP   234"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_READ\fP   125"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_READ_INTERNAL\fP   236"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_SET_CERTIFICATE\fP   126"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL2_WRITE\fP   127"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_ACCEPT\fP   128"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_ADD_CERT_TO_BUF\fP   296"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CALLBACK_CTRL\fP   233"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CHANGE_CIPHER_STATE\fP   129"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CHECK_CERT_AND_ALGORITHM\fP   130"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CHECK_CLIENT_HELLO\fP   304"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CHECK_FINISHED\fP   339"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CLIENT_HELLO\fP   131"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CONNECT\fP   132"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CTRL\fP   213"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_CTX_CTRL\fP   133"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_DIGEST_CACHED_RECORDS\fP   293"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_DO_CHANGE_CIPHER_SPEC\fP   292"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_ENC\fP   134"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GENERATE_KEY_BLOCK\fP   238"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GENERATE_MASTER_SECRET\fP   388"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CERTIFICATE_REQUEST\fP   135"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CERT_STATUS\fP   289"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CERT_VERIFY\fP   136"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CLIENT_CERTIFICATE\fP   137"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CLIENT_HELLO\fP   138"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_CLIENT_KEY_EXCHANGE\fP   139"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_FINISHED\fP   140"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_KEY_EXCHANGE\fP   141"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_MESSAGE\fP   142"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_NEW_SESSION_TICKET\fP   283"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_NEXT_PROTO\fP   306"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_RECORD\fP   143"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_SERVER_CERTIFICATE\fP   144"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_SERVER_DONE\fP   145"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_GET_SERVER_HELLO\fP   146"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_HANDSHAKE_MAC\fP   285"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_NEW_SESSION_TICKET\fP   287"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_OUTPUT_CERT_CHAIN\fP   147"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_PEEK\fP   235"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_READ_BYTES\fP   148"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_READ_N\fP   149"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_CERTIFICATE_REQUEST\fP   150"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_CLIENT_CERTIFICATE\fP   151"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_CLIENT_KEY_EXCHANGE\fP   152"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_CLIENT_VERIFY\fP   153"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_SERVER_CERTIFICATE\fP   154"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_SERVER_HELLO\fP   242"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SEND_SERVER_KEY_EXCHANGE\fP   155"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SETUP_KEY_BLOCK\fP   157"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SETUP_READ_BUFFER\fP   156"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_SETUP_WRITE_BUFFER\fP   291"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_WRITE_BYTES\fP   158"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL3_WRITE_PENDING\fP   159"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_CERT_CHAIN\fP   318"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_CERT_TO_BUF\fP   319"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT\fP   298"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_CLIENTHELLO_TLSEXT\fP   277"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT\fP   307"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK\fP   215"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK\fP   216"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT\fP   299"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_SERVERHELLO_TLSEXT\fP   278"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT\fP   308"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_BAD_METHOD\fP   160"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_BUILD_CERT_CHAIN\fP   332"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_BYTES_TO_CIPHER_LIST\fP   161"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CERT_DUP\fP   221"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CERT_INST\fP   222"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CERT_INSTANTIATE\fP   214"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CERT_NEW\fP   162"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CHECK_PRIVATE_KEY\fP   163"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CHECK_SERVERHELLO_TLSEXT\fP   280"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG\fP   279"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CIPHER_PROCESS_RULESTR\fP   230"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CIPHER_STRENGTH_SORT\fP   231"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CLEAR\fP   164"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_COMP_ADD_COMPRESSION_METHOD\fP   165"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CONF_CMD\fP   334"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CREATE_CIPHER_LIST\fP   166"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTRL\fP   232"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_CHECK_PRIVATE_KEY\fP   168"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_MAKE_PROFILES\fP   309"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_NEW\fP   169"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_CIPHER_LIST\fP   269"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE\fP   290"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_PURPOSE\fP   226"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT\fP   219"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_SSL_VERSION\fP   170"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_SET_TRUST\fP   229"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_CERTIFICATE\fP   171"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_CERTIFICATE_ASN1\fP   172"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_CERTIFICATE_CHAIN_FILE\fP   220"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_CERTIFICATE_FILE\fP   173"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_PRIVATEKEY\fP   174"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1\fP   175"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_PRIVATEKEY_FILE\fP   176"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT\fP   272"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_RSAPRIVATEKEY\fP   177"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1\fP   178"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE\fP   179"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_SERVERINFO\fP   336"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_CTX_USE_SERVERINFO_FILE\fP   337"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_DO_HANDSHAKE\fP   180"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_NEW_SESSION\fP   181"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_PREV_SESSION\fP   217"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_SERVER_CERT_INDEX\fP   322"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_SERVER_SEND_CERT\fP   182"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_SERVER_SEND_PKEY\fP   317"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_GET_SIGN_PKEY\fP   183"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_INIT_WBIO_BUFFER\fP   184"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_LOAD_CLIENT_CA_FILE\fP   185"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_NEW\fP   186"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT\fP   300"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT\fP   302"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT\fP   310"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT\fP   301"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_SERVERHELLO_TLSEXT\fP   303"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT\fP   311"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PEEK\fP   270"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PREPARE_CLIENTHELLO_TLSEXT\fP   281"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_PREPARE_SERVERHELLO_TLSEXT\fP   282"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_READ\fP   223"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_RSA_PRIVATE_DECRYPT\fP   187"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_RSA_PUBLIC_ENCRYPT\fP   188"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT\fP   320"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SCAN_SERVERHELLO_TLSEXT\fP   321"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SESSION_DUP\fP   348"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SESSION_NEW\fP   189"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SESSION_PRINT_FP\fP   190"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SESSION_SET1_ID_CONTEXT\fP   312"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SESS_CERT_NEW\fP   225"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_CERT\fP   191"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_CIPHER_LIST\fP   271"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_FD\fP   192"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_PKEY\fP   193"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_PURPOSE\fP   227"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_RFD\fP   194"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_SESSION\fP   195"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_SESSION_ID_CONTEXT\fP   218"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_SESSION_TICKET_EXT\fP   294"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_TRUST\fP   228"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SET_WFD\fP   196"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SHUTDOWN\fP   224"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_SRP_CTX_INIT\fP   313"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_UNDEFINED_CONST_FUNCTION\fP   243"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_UNDEFINED_FUNCTION\fP   197"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_UNDEFINED_VOID_FUNCTION\fP   244"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_CERTIFICATE\fP   198"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_CERTIFICATE_ASN1\fP   199"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_CERTIFICATE_FILE\fP   200"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_PRIVATEKEY\fP   201"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_PRIVATEKEY_ASN1\fP   202"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_PRIVATEKEY_FILE\fP   203"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_PSK_IDENTITY_HINT\fP   273"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_RSAPRIVATEKEY\fP   204"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_RSAPRIVATEKEY_ASN1\fP   205"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_USE_RSAPRIVATEKEY_FILE\fP   206"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_VERIFY_CERT_CHAIN\fP   207"
.br
.ti -1c
.RI "#define \fBSSL_F_SSL_WRITE\fP   208"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS12_CHECK_PEER_SIGALG\fP   333"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_CERT_VERIFY_MAC\fP   286"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_CHANGE_CIPHER_STATE\fP   209"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_CHECK_SERVERHELLO_TLSEXT\fP   274"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_ENC\fP   210"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_EXPORT_KEYING_MATERIAL\fP   314"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_GET_CURVELIST\fP   338"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_HEARTBEAT\fP   315"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_PREPARE_CLIENTHELLO_TLSEXT\fP   275"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_PREPARE_SERVERHELLO_TLSEXT\fP   276"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_PRF\fP   284"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_SETUP_KEY_BLOCK\fP   211"
.br
.ti -1c
.RI "#define \fBSSL_F_TLS1_SET_SERVER_SIGALGS\fP   335"
.br
.ti -1c
.RI "#define \fBSSL_F_WRITE_PENDING\fP   212"
.br
.ti -1c
.RI "#define \fBSSL_R_APP_DATA_IN_HANDSHAKE\fP   100"
.br
.ti -1c
.RI "#define \fBSSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT\fP   272"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_ALERT_RECORD\fP   101"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_AUTHENTICATION_TYPE\fP   102"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_CHANGE_CIPHER_SPEC\fP   103"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_CHECKSUM\fP   104"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DATA\fP   390"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DATA_RETURNED_BY_CALLBACK\fP   106"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DECOMPRESSION\fP   107"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_G_LENGTH\fP   108"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_G_VALUE\fP   375"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_PUB_KEY_LENGTH\fP   109"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_PUB_KEY_VALUE\fP   393"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_P_LENGTH\fP   110"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DH_P_VALUE\fP   395"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DIGEST_LENGTH\fP   111"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_DSA_SIGNATURE\fP   112"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_ECC_CERT\fP   304"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_ECDSA_SIGNATURE\fP   305"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_ECPOINT\fP   306"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_HANDSHAKE_LENGTH\fP   332"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_HELLO_REQUEST\fP   105"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_LENGTH\fP   271"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_MAC_DECODE\fP   113"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_MAC_LENGTH\fP   333"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_MESSAGE_TYPE\fP   114"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_PACKET_LENGTH\fP   115"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_PROTOCOL_VERSION_NUMBER\fP   116"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_PSK_IDENTITY_HINT_LENGTH\fP   316"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RESPONSE_ARGUMENT\fP   117"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RSA_DECRYPT\fP   118"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RSA_ENCRYPT\fP   119"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RSA_E_LENGTH\fP   120"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RSA_MODULUS_LENGTH\fP   121"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_RSA_SIGNATURE\fP   122"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SIGNATURE\fP   123"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_A_LENGTH\fP   347"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_B_LENGTH\fP   348"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_G_LENGTH\fP   349"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_N_LENGTH\fP   350"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_PARAMETERS\fP   371"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRP_S_LENGTH\fP   351"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRTP_MKI_VALUE\fP   352"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST\fP   353"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SSL_FILETYPE\fP   124"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_SSL_SESSION_ID_LENGTH\fP   125"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_STATE\fP   126"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_VALUE\fP   384"
.br
.ti -1c
.RI "#define \fBSSL_R_BAD_WRITE_RETRY\fP   127"
.br
.ti -1c
.RI "#define \fBSSL_R_BIO_NOT_SET\fP   128"
.br
.ti -1c
.RI "#define \fBSSL_R_BLOCK_CIPHER_PAD_IS_WRONG\fP   129"
.br
.ti -1c
.RI "#define \fBSSL_R_BN_LIB\fP   130"
.br
.ti -1c
.RI "#define \fBSSL_R_CA_DN_LENGTH_MISMATCH\fP   131"
.br
.ti -1c
.RI "#define \fBSSL_R_CA_DN_TOO_LONG\fP   132"
.br
.ti -1c
.RI "#define \fBSSL_R_CCS_RECEIVED_EARLY\fP   133"
.br
.ti -1c
.RI "#define \fBSSL_R_CERTIFICATE_VERIFY_FAILED\fP   134"
.br
.ti -1c
.RI "#define \fBSSL_R_CERT_CB_ERROR\fP   377"
.br
.ti -1c
.RI "#define \fBSSL_R_CERT_LENGTH_MISMATCH\fP   135"
.br
.ti -1c
.RI "#define \fBSSL_R_CHALLENGE_IS_DIFFERENT\fP   136"
.br
.ti -1c
.RI "#define \fBSSL_R_CIPHER_CODE_WRONG_LENGTH\fP   137"
.br
.ti -1c
.RI "#define \fBSSL_R_CIPHER_OR_HASH_UNAVAILABLE\fP   138"
.br
.ti -1c
.RI "#define \fBSSL_R_CIPHER_TABLE_SRC_ERROR\fP   139"
.br
.ti -1c
.RI "#define \fBSSL_R_CLIENTHELLO_TLSEXT\fP   226"
.br
.ti -1c
.RI "#define \fBSSL_R_COMPRESSED_LENGTH_TOO_LONG\fP   140"
.br
.ti -1c
.RI "#define \fBSSL_R_COMPRESSION_DISABLED\fP   343"
.br
.ti -1c
.RI "#define \fBSSL_R_COMPRESSION_FAILURE\fP   141"
.br
.ti -1c
.RI "#define \fBSSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE\fP   307"
.br
.ti -1c
.RI "#define \fBSSL_R_COMPRESSION_LIBRARY_ERROR\fP   142"
.br
.ti -1c
.RI "#define \fBSSL_R_CONNECTION_ID_IS_DIFFERENT\fP   143"
.br
.ti -1c
.RI "#define \fBSSL_R_CONNECTION_TYPE_NOT_SET\fP   144"
.br
.ti -1c
.RI "#define \fBSSL_R_COOKIE_MISMATCH\fP   308"
.br
.ti -1c
.RI "#define \fBSSL_R_DATA_BETWEEN_CCS_AND_FINISHED\fP   145"
.br
.ti -1c
.RI "#define \fBSSL_R_DATA_LENGTH_TOO_LONG\fP   146"
.br
.ti -1c
.RI "#define \fBSSL_R_DECRYPTION_FAILED\fP   147"
.br
.ti -1c
.RI "#define \fBSSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC\fP   281"
.br
.ti -1c
.RI "#define \fBSSL_R_DH_KEY_TOO_SMALL\fP   372"
.br
.ti -1c
.RI "#define \fBSSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG\fP   148"
.br
.ti -1c
.RI "#define \fBSSL_R_DIGEST_CHECK_FAILED\fP   149"
.br
.ti -1c
.RI "#define \fBSSL_R_DTLS_MESSAGE_TOO_BIG\fP   334"
.br
.ti -1c
.RI "#define \fBSSL_R_DUPLICATE_COMPRESSION_ID\fP   309"
.br
.ti -1c
.RI "#define \fBSSL_R_ECC_CERT_NOT_FOR_KEY_AGREEMENT\fP   317"
.br
.ti -1c
.RI "#define \fBSSL_R_ECC_CERT_NOT_FOR_SIGNING\fP   318"
.br
.ti -1c
.RI "#define \fBSSL_R_ECC_CERT_SHOULD_HAVE_RSA_SIGNATURE\fP   322"
.br
.ti -1c
.RI "#define \fBSSL_R_ECC_CERT_SHOULD_HAVE_SHA1_SIGNATURE\fP   323"
.br
.ti -1c
.RI "#define \fBSSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE\fP   374"
.br
.ti -1c
.RI "#define \fBSSL_R_ECGROUP_TOO_LARGE_FOR_CIPHER\fP   310"
.br
.ti -1c
.RI "#define \fBSSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST\fP   354"
.br
.ti -1c
.RI "#define \fBSSL_R_ENCRYPTED_LENGTH_TOO_LONG\fP   150"
.br
.ti -1c
.RI "#define \fBSSL_R_ERROR_GENERATING_TMP_RSA_KEY\fP   282"
.br
.ti -1c
.RI "#define \fBSSL_R_ERROR_IN_RECEIVED_CIPHER_LIST\fP   151"
.br
.ti -1c
.RI "#define \fBSSL_R_EXCESSIVE_MESSAGE_SIZE\fP   152"
.br
.ti -1c
.RI "#define \fBSSL_R_EXTRA_DATA_IN_MESSAGE\fP   153"
.br
.ti -1c
.RI "#define \fBSSL_R_GOT_A_FIN_BEFORE_A_CCS\fP   154"
.br
.ti -1c
.RI "#define \fBSSL_R_GOT_NEXT_PROTO_BEFORE_A_CCS\fP   355"
.br
.ti -1c
.RI "#define \fBSSL_R_GOT_NEXT_PROTO_WITHOUT_EXTENSION\fP   356"
.br
.ti -1c
.RI "#define \fBSSL_R_HTTPS_PROXY_REQUEST\fP   155"
.br
.ti -1c
.RI "#define \fBSSL_R_HTTP_REQUEST\fP   156"
.br
.ti -1c
.RI "#define \fBSSL_R_ILLEGAL_PADDING\fP   283"
.br
.ti -1c
.RI "#define \fBSSL_R_ILLEGAL_SUITEB_DIGEST\fP   380"
.br
.ti -1c
.RI "#define \fBSSL_R_INAPPROPRIATE_FALLBACK\fP   373"
.br
.ti -1c
.RI "#define \fBSSL_R_INCONSISTENT_COMPRESSION\fP   340"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_CHALLENGE_LENGTH\fP   158"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_COMMAND\fP   280"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_COMPRESSION_ALGORITHM\fP   341"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_NULL_CMD_NAME\fP   385"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_PURPOSE\fP   278"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_SERVERINFO_DATA\fP   388"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_SRP_USERNAME\fP   357"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_STATUS_RESPONSE\fP   328"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_TICKET_KEYS_LENGTH\fP   325"
.br
.ti -1c
.RI "#define \fBSSL_R_INVALID_TRUST\fP   279"
.br
.ti -1c
.RI "#define \fBSSL_R_KEY_ARG_TOO_LONG\fP   284"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5\fP   285"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_C_CC_PRINC\fP   286"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_C_GET_CRED\fP   287"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_C_INIT\fP   288"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_C_MK_REQ\fP   289"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_BAD_TICKET\fP   290"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_INIT\fP   291"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_RD_REQ\fP   292"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_TKT_EXPIRED\fP   293"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_TKT_NYV\fP   294"
.br
.ti -1c
.RI "#define \fBSSL_R_KRB5_S_TKT_SKEW\fP   295"
.br
.ti -1c
.RI "#define \fBSSL_R_LENGTH_MISMATCH\fP   159"
.br
.ti -1c
.RI "#define \fBSSL_R_LENGTH_TOO_SHORT\fP   160"
.br
.ti -1c
.RI "#define \fBSSL_R_LIBRARY_BUG\fP   274"
.br
.ti -1c
.RI "#define \fBSSL_R_LIBRARY_HAS_NO_CIPHERS\fP   161"
.br
.ti -1c
.RI "#define \fBSSL_R_MESSAGE_TOO_LONG\fP   296"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_DH_DSA_CERT\fP   162"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_DH_KEY\fP   163"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_DH_RSA_CERT\fP   164"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_DSA_SIGNING_CERT\fP   165"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_ECDH_CERT\fP   382"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_ECDSA_SIGNING_CERT\fP   381"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_EXPORT_TMP_DH_KEY\fP   166"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_EXPORT_TMP_RSA_KEY\fP   167"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_RSA_CERTIFICATE\fP   168"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_RSA_ENCRYPTING_CERT\fP   169"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_RSA_SIGNING_CERT\fP   170"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_SRP_PARAM\fP   358"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_TMP_DH_KEY\fP   171"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_TMP_ECDH_KEY\fP   311"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_TMP_RSA_KEY\fP   172"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_TMP_RSA_PKEY\fP   173"
.br
.ti -1c
.RI "#define \fBSSL_R_MISSING_VERIFY_MESSAGE\fP   174"
.br
.ti -1c
.RI "#define \fBSSL_R_MULTIPLE_SGC_RESTARTS\fP   346"
.br
.ti -1c
.RI "#define \fBSSL_R_NON_SSLV2_INITIAL_PACKET\fP   175"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CERTIFICATES_RETURNED\fP   176"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CERTIFICATE_ASSIGNED\fP   177"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CERTIFICATE_RETURNED\fP   178"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CERTIFICATE_SET\fP   179"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CERTIFICATE_SPECIFIED\fP   180"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CIPHERS_AVAILABLE\fP   181"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CIPHERS_PASSED\fP   182"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CIPHERS_SPECIFIED\fP   183"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CIPHER_LIST\fP   184"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CIPHER_MATCH\fP   185"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CLIENT_CERT_METHOD\fP   331"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_CLIENT_CERT_RECEIVED\fP   186"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_COMPRESSION_SPECIFIED\fP   187"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER\fP   330"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_METHOD_SPECIFIED\fP   188"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_PEM_EXTENSIONS\fP   389"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_PRIVATEKEY\fP   189"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_PRIVATE_KEY_ASSIGNED\fP   190"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_PROTOCOLS_AVAILABLE\fP   191"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_PUBLICKEY\fP   192"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_RENEGOTIATION\fP   339"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_REQUIRED_DIGEST\fP   324"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_SHARED_CIPHER\fP   193"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_SHARED_SIGATURE_ALGORITHMS\fP   376"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_SRTP_PROFILES\fP   359"
.br
.ti -1c
.RI "#define \fBSSL_R_NO_VERIFY_CALLBACK\fP   194"
.br
.ti -1c
.RI "#define \fBSSL_R_NULL_SSL_CTX\fP   195"
.br
.ti -1c
.RI "#define \fBSSL_R_NULL_SSL_METHOD_PASSED\fP   196"
.br
.ti -1c
.RI "#define \fBSSL_R_OLD_SESSION_CIPHER_NOT_RETURNED\fP   197"
.br
.ti -1c
.RI "#define \fBSSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED\fP   344"
.br
.ti -1c
.RI "#define \fBSSL_R_ONLY_DTLS_1_2_ALLOWED_IN_SUITEB_MODE\fP   387"
.br
.ti -1c
.RI "#define \fBSSL_R_ONLY_TLS_1_2_ALLOWED_IN_SUITEB_MODE\fP   379"
.br
.ti -1c
.RI "#define \fBSSL_R_ONLY_TLS_ALLOWED_IN_FIPS_MODE\fP   297"
.br
.ti -1c
.RI "#define \fBSSL_R_OPAQUE_PRF_INPUT_TOO_LONG\fP   327"
.br
.ti -1c
.RI "#define \fBSSL_R_PACKET_LENGTH_TOO_LONG\fP   198"
.br
.ti -1c
.RI "#define \fBSSL_R_PARSE_TLSEXT\fP   227"
.br
.ti -1c
.RI "#define \fBSSL_R_PATH_TOO_LONG\fP   270"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE\fP   199"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_ERROR\fP   200"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_ERROR_CERTIFICATE\fP   201"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_ERROR_NO_CERTIFICATE\fP   202"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_ERROR_NO_CIPHER\fP   203"
.br
.ti -1c
.RI "#define \fBSSL_R_PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE\fP   204"
.br
.ti -1c
.RI "#define \fBSSL_R_PEM_NAME_BAD_PREFIX\fP   391"
.br
.ti -1c
.RI "#define \fBSSL_R_PEM_NAME_TOO_SHORT\fP   392"
.br
.ti -1c
.RI "#define \fBSSL_R_PRE_MAC_LENGTH_TOO_LONG\fP   205"
.br
.ti -1c
.RI "#define \fBSSL_R_PROBLEMS_MAPPING_CIPHER_FUNCTIONS\fP   206"
.br
.ti -1c
.RI "#define \fBSSL_R_PROTOCOL_IS_SHUTDOWN\fP   207"
.br
.ti -1c
.RI "#define \fBSSL_R_PSK_IDENTITY_NOT_FOUND\fP   223"
.br
.ti -1c
.RI "#define \fBSSL_R_PSK_NO_CLIENT_CB\fP   224"
.br
.ti -1c
.RI "#define \fBSSL_R_PSK_NO_SERVER_CB\fP   225"
.br
.ti -1c
.RI "#define \fBSSL_R_PUBLIC_KEY_ENCRYPT_ERROR\fP   208"
.br
.ti -1c
.RI "#define \fBSSL_R_PUBLIC_KEY_IS_NOT_RSA\fP   209"
.br
.ti -1c
.RI "#define \fBSSL_R_PUBLIC_KEY_NOT_RSA\fP   210"
.br
.ti -1c
.RI "#define \fBSSL_R_READ_BIO_NOT_SET\fP   211"
.br
.ti -1c
.RI "#define \fBSSL_R_READ_TIMEOUT_EXPIRED\fP   312"
.br
.ti -1c
.RI "#define \fBSSL_R_READ_WRONG_PACKET_TYPE\fP   212"
.br
.ti -1c
.RI "#define \fBSSL_R_RECORD_LENGTH_MISMATCH\fP   213"
.br
.ti -1c
.RI "#define \fBSSL_R_RECORD_TOO_LARGE\fP   214"
.br
.ti -1c
.RI "#define \fBSSL_R_RECORD_TOO_SMALL\fP   298"
.br
.ti -1c
.RI "#define \fBSSL_R_RENEGOTIATE_EXT_TOO_LONG\fP   335"
.br
.ti -1c
.RI "#define \fBSSL_R_RENEGOTIATION_ENCODING_ERR\fP   336"
.br
.ti -1c
.RI "#define \fBSSL_R_RENEGOTIATION_MISMATCH\fP   337"
.br
.ti -1c
.RI "#define \fBSSL_R_REQUIRED_CIPHER_MISSING\fP   215"
.br
.ti -1c
.RI "#define \fBSSL_R_REQUIRED_COMPRESSSION_ALGORITHM_MISSING\fP   342"
.br
.ti -1c
.RI "#define \fBSSL_R_REUSE_CERT_LENGTH_NOT_ZERO\fP   216"
.br
.ti -1c
.RI "#define \fBSSL_R_REUSE_CERT_TYPE_NOT_ZERO\fP   217"
.br
.ti -1c
.RI "#define \fBSSL_R_REUSE_CIPHER_LIST_NOT_ZERO\fP   218"
.br
.ti -1c
.RI "#define \fBSSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING\fP   345"
.br
.ti -1c
.RI "#define \fBSSL_R_SERVERHELLO_TLSEXT\fP   275"
.br
.ti -1c
.RI "#define \fBSSL_R_SESSION_ID_CONTEXT_UNINITIALIZED\fP   277"
.br
.ti -1c
.RI "#define \fBSSL_R_SHORT_READ\fP   219"
.br
.ti -1c
.RI "#define \fBSSL_R_SHUTDOWN_WHILE_IN_INIT\fP   407"
.br
.ti -1c
.RI "#define \fBSSL_R_SIGNATURE_ALGORITHMS_ERROR\fP   360"
.br
.ti -1c
.RI "#define \fBSSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE\fP   220"
.br
.ti -1c
.RI "#define \fBSSL_R_SRP_A_CALC\fP   361"
.br
.ti -1c
.RI "#define \fBSSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES\fP   362"
.br
.ti -1c
.RI "#define \fBSSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG\fP   363"
.br
.ti -1c
.RI "#define \fBSSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE\fP   364"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL23_DOING_SESSION_ID_REUSE\fP   221"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL2_CONNECTION_ID_TOO_LONG\fP   299"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL3_EXT_INVALID_ECPOINTFORMAT\fP   321"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL3_EXT_INVALID_SERVERNAME\fP   319"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE\fP   320"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL3_SESSION_ID_TOO_LONG\fP   300"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL3_SESSION_ID_TOO_SHORT\fP   222"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_BAD_CERTIFICATE\fP   1042"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_BAD_RECORD_MAC\fP   1020"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED\fP   1045"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED\fP   1044"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN\fP   1046"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE\fP   1030"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE\fP   1040"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER\fP   1047"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_NO_CERTIFICATE\fP   1041"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE\fP   1010"
.br
.ti -1c
.RI "#define \fBSSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE\fP   1043"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION\fP   228"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_HANDSHAKE_FAILURE\fP   229"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_LIBRARY_HAS_NO_CIPHERS\fP   230"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_SESSION_ID_CALLBACK_FAILED\fP   301"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_SESSION_ID_CONFLICT\fP   302"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG\fP   273"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH\fP   303"
.br
.ti -1c
.RI "#define \fBSSL_R_SSL_SESSION_ID_IS_DIFFERENT\fP   231"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_ACCESS_DENIED\fP   1049"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_DECODE_ERROR\fP   1050"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_DECRYPTION_FAILED\fP   1021"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_DECRYPT_ERROR\fP   1051"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_EXPORT_RESTRICTION\fP   1060"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK\fP   1086"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY\fP   1071"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_INTERNAL_ERROR\fP   1080"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_NO_RENEGOTIATION\fP   1100"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_PROTOCOL_VERSION\fP   1070"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_RECORD_OVERFLOW\fP   1022"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_UNKNOWN_CA\fP   1048"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_ALERT_USER_CANCELLED\fP   1090"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE\fP   1114"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE\fP   1113"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE\fP   1111"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_UNRECOGNIZED_NAME\fP   1112"
.br
.ti -1c
.RI "#define \fBSSL_R_TLSV1_UNSUPPORTED_EXTENSION\fP   1110"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER\fP   232"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT\fP   365"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_HEARTBEAT_PENDING\fP   366"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_ILLEGAL_EXPORTER_LABEL\fP   367"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_INVALID_ECPOINTFORMAT_LIST\fP   157"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST\fP   233"
.br
.ti -1c
.RI "#define \fBSSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG\fP   234"
.br
.ti -1c
.RI "#define \fBSSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER\fP   235"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_DECODE_DH_CERTS\fP   236"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_DECODE_ECDH_CERTS\fP   313"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_EXTRACT_PUBLIC_KEY\fP   237"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_FIND_DH_PARAMETERS\fP   238"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS\fP   314"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS\fP   239"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_FIND_SSL_METHOD\fP   240"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_LOAD_SSL2_MD5_ROUTINES\fP   241"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES\fP   242"
.br
.ti -1c
.RI "#define \fBSSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES\fP   243"
.br
.ti -1c
.RI "#define \fBSSL_R_UNEXPECTED_MESSAGE\fP   244"
.br
.ti -1c
.RI "#define \fBSSL_R_UNEXPECTED_RECORD\fP   245"
.br
.ti -1c
.RI "#define \fBSSL_R_UNINITIALIZED\fP   276"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_ALERT_TYPE\fP   246"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_CERTIFICATE_TYPE\fP   247"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_CIPHER_RETURNED\fP   248"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_CIPHER_TYPE\fP   249"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_CMD_NAME\fP   386"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_DIGEST\fP   368"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_KEY_EXCHANGE_TYPE\fP   250"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_PKEY_TYPE\fP   251"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_PROTOCOL\fP   252"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_REMOTE_ERROR_TYPE\fP   253"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_SSL_VERSION\fP   254"
.br
.ti -1c
.RI "#define \fBSSL_R_UNKNOWN_STATE\fP   255"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED\fP   338"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_CIPHER\fP   256"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM\fP   257"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_DIGEST_TYPE\fP   326"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_ELLIPTIC_CURVE\fP   315"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_PROTOCOL\fP   258"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_SSL_VERSION\fP   259"
.br
.ti -1c
.RI "#define \fBSSL_R_UNSUPPORTED_STATUS_TYPE\fP   329"
.br
.ti -1c
.RI "#define \fBSSL_R_USE_SRTP_NOT_NEGOTIATED\fP   369"
.br
.ti -1c
.RI "#define \fBSSL_R_WRITE_BIO_NOT_SET\fP   260"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_CERTIFICATE_TYPE\fP   383"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_CIPHER_RETURNED\fP   261"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_CURVE\fP   378"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_MESSAGE_TYPE\fP   262"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_NUMBER_OF_KEY_BITS\fP   263"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_SIGNATURE_LENGTH\fP   264"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_SIGNATURE_SIZE\fP   265"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_SIGNATURE_TYPE\fP   370"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_SSL_VERSION\fP   266"
.br
.ti -1c
.RI "#define \fBSSL_R_WRONG_VERSION_NUMBER\fP   267"
.br
.ti -1c
.RI "#define \fBSSL_R_X509_LIB\fP   268"
.br
.ti -1c
.RI "#define \fBSSL_R_X509_VERIFICATION_SETUP_PROBLEMS\fP   269"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBssl_st\fP * \fBssl_crock_st\fP"
.br
.ti -1c
.RI "typedef struct \fBtls_session_ticket_ext_st\fP \fBTLS_SESSION_TICKET_EXT\fP"
.br
.ti -1c
.RI "typedef struct \fBssl_method_st\fP \fBSSL_METHOD\fP"
.br
.ti -1c
.RI "typedef struct \fBssl_cipher_st\fP \fBSSL_CIPHER\fP"
.br
.ti -1c
.RI "typedef struct \fBssl_session_st\fP \fBSSL_SESSION\fP"
.br
.ti -1c
.RI "typedef struct \fBtls_sigalgs_st\fP \fBTLS_SIGALGS\fP"
.br
.ti -1c
.RI "typedef struct ssl_conf_ctx_st \fBSSL_CONF_CTX\fP"
.br
.ti -1c
.RI "typedef struct \fBsrtp_protection_profile_st\fP \fBSRTP_PROTECTION_PROFILE\fP"
.br
.ti -1c
.RI "typedef int(* \fBtls_session_ticket_ext_cb_fn\fP) (\fBSSL\fP *s, const unsigned char *data, int \fBlen\fP, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "typedef int(* \fBtls_session_secret_cb_fn\fP) (\fBSSL\fP *s, \fBvoid\fP *secret, int *secret_len, \fBSTACK_OF\fP(\fBSSL_CIPHER\fP)*peer_ciphers, \fBSSL_CIPHER\fP **cipher, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "typedef int(* \fBcustom_ext_add_cb\fP) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char **out, size_t *outlen, int *al, \fBvoid\fP *add_arg)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBcustom_ext_free_cb\fP) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char *out, \fBvoid\fP *add_arg)"
.br
.ti -1c
.RI "typedef int(* \fBcustom_ext_parse_cb\fP) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char *in, size_t inlen, int *al, \fBvoid\fP *parse_arg)"
.br
.ti -1c
.RI "typedef struct \fBsrp_ctx_st\fP \fBSRP_CTX\fP"
.br
.ti -1c
.RI "typedef int(* \fBGEN_SESSION_CB\fP) (const \fBSSL\fP *ssl, unsigned char *id, unsigned int *id_len)"
.br
.ti -1c
.RI "typedef struct \fBssl_comp_st\fP \fBSSL_COMP\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_msg_callback\fP (\fBSSL_CTX\fP *ctx, \fBvoid\fP(*\fBcb\fP)(int write_p, int \fBversion\fP,                                                                                                                                                               int content_type, const \fBvoid\fP *buf,                                                                                                                                                               size_t \fBlen\fP, \fBSSL\fP *ssl, \fBvoid\fP *arg))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_msg_callback\fP (\fBSSL\fP *ssl, \fBvoid\fP(*\fBcb\fP)(int write_p, int \fBversion\fP,                                                                                                                                               int content_type, const \fBvoid\fP *buf,                                                                                                                                               size_t \fBlen\fP, \fBSSL\fP *ssl, \fBvoid\fP *arg))"
.br
.ti -1c
.RI "int \fBSSL_SRP_CTX_init\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_CTX_SRP_CTX_init\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_SRP_CTX_free\fP (\fBSSL\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_CTX_SRP_CTX_free\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_srp_server_param_with_username\fP (\fBSSL\fP *s, int *ad)"
.br
.ti -1c
.RI "int \fBSRP_generate_server_master_secret\fP (\fBSSL\fP *s, unsigned char *master_key)"
.br
.ti -1c
.RI "int \fBSRP_Calc_A_param\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSRP_generate_client_master_secret\fP (\fBSSL\fP *s, unsigned char *master_key)"
.br
.ti -1c
.RI "\fBDECLARE_LHASH_OF\fP (\fBSSL_SESSION\fP)"
.br
.ti -1c
.RI "\fBLHASH_OF\fP (\fBSSL_SESSION\fP)*SSL_CTX_sessions(\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_sess_set_new_cb\fP (\fBSSL_CTX\fP *ctx, int(*new_session_cb)(struct \fBssl_st\fP *ssl,                                                                                                                                                                                                       \fBSSL_SESSION\fP *sess))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_sess_set_remove_cb\fP (\fBSSL_CTX\fP *ctx, \fBvoid\fP(*remove_session_cb)(struct \fBssl_ctx_st\fP                                                                                                                                                                                                                                   *ctx,                                                                                                                                                                                                                                   \fBSSL_SESSION\fP                                                                                                                                                                                                                                   *sess))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_sess_set_get_cb\fP (\fBSSL_CTX\fP *ctx, \fBSSL_SESSION\fP *(*get_session_cb)(struct \fBssl_st\fP                                                                                                                                                                                                                                           *ssl,                                                                                                                                                                                                                                           unsigned char                                                                                                                                                                                                                                           *data, int \fBlen\fP,                                                                                                                                                                                                                                           int *copy))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_info_callback\fP (\fBSSL_CTX\fP *ctx, \fBvoid\fP(*\fBcb\fP)(const \fBSSL\fP *ssl, int \fBtype\fP,                                                                                                                                                                   int val))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_client_cert_cb\fP (\fBSSL_CTX\fP *ctx, int(*client_cert_cb)(\fBSSL\fP *ssl, \fBX509\fP **x509,                                                                                                                                                                                                                   \fBEVP_PKEY\fP **pkey))"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_client_cert_engine\fP (\fBSSL_CTX\fP *ctx, \fBENGINE\fP *\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_cookie_generate_cb\fP (\fBSSL_CTX\fP *ctx, int(*app_gen_cookie_cb)(\fBSSL\fP *ssl,                                                                                                                                                                                                                                               unsigned char                                                                                                                                                                                                                                               *cookie,                                                                                                                                                                                                                                               unsigned int                                                                                                                                                                                                                                               *cookie_len))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_cookie_verify_cb\fP (\fBSSL_CTX\fP *ctx, int(*app_verify_cookie_cb)(\fBSSL\fP *ssl,                                                                                                                                                                                                                                                   unsigned char                                                                                                                                                                                                                                                   *cookie,                                                                                                                                                                                                                                                   unsigned int                                                                                                                                                                                                                                                   cookie_len))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_next_protos_advertised_cb\fP (\fBSSL_CTX\fP *s, int(*\fBcb\fP)(\fBSSL\fP *ssl,                                                                                                                                                                                                               const unsigned char                                                                                                                                                                                                               **out,                                                                                                                                                                                                               unsigned int *outlen,                                                                                                                                                                                                               \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_next_proto_select_cb\fP (\fBSSL_CTX\fP *s, int(*\fBcb\fP)(\fBSSL\fP *ssl,                                                                                                                                                                                           unsigned char **out,                                                                                                                                                                                           unsigned char *outlen,                                                                                                                                                                                           const unsigned char *in,                                                                                                                                                                                           unsigned int inlen,                                                                                                                                                                                           \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_get0_next_proto_negotiated\fP (const \fBSSL\fP *s, const unsigned char **data, unsigned *\fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_select_next_proto\fP (unsigned char **out, unsigned char *outlen, const unsigned char *in, unsigned int inlen, const unsigned char *client, unsigned int client_len)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_alpn_protos\fP (\fBSSL_CTX\fP *ctx, const unsigned char *protos, unsigned protos_len)"
.br
.ti -1c
.RI "int \fBSSL_set_alpn_protos\fP (\fBSSL\fP *ssl, const unsigned char *protos, unsigned protos_len)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_alpn_select_cb\fP (\fBSSL_CTX\fP *ctx, int(*\fBcb\fP)(\fBSSL\fP *ssl,                                                                                                                                                                   const unsigned char **out,                                                                                                                                                                   unsigned char *outlen,                                                                                                                                                                   const unsigned char *in,                                                                                                                                                                   unsigned int inlen,                                                                                                                                                                   \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_get0_alpn_selected\fP (const \fBSSL\fP *ssl, const unsigned char **data, unsigned *\fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_psk_client_callback\fP (\fBSSL_CTX\fP *ctx, unsigned int(*psk_client_callback)(\fBSSL\fP                                                                                                                                                                                                                                                                                               *ssl,                                                                                                                                                                                                                                                                                               const                                                                                                                                                                                                                                                                                                  char                                                                                                                                                                                                                                                                                               *hint,                                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                                               *identity,                                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                                               max_identity_len,                                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                                               *psk,                                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                                               max_psk_len))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_psk_client_callback\fP (\fBSSL\fP *ssl, unsigned int(*psk_client_callback)(\fBSSL\fP                                                                                                                                                                                                                                                                               *ssl,                                                                                                                                                                                                                                                                               const                                                                                                                                                                                                                                                                                  char                                                                                                                                                                                                                                                                               *hint,                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                               *identity,                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                               max_identity_len,                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                               *psk,                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                               max_psk_len))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_psk_server_callback\fP (\fBSSL_CTX\fP *ctx, unsigned int(*psk_server_callback)(\fBSSL\fP                                                                                                                                                                                                                                                                                               *ssl,                                                                                                                                                                                                                                                                                               const                                                                                                                                                                                                                                                                                                  char                                                                                                                                                                                                                                                                                               *identity,                                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                                               *psk,                                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                                               max_psk_len))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_psk_server_callback\fP (\fBSSL\fP *ssl, unsigned int(*psk_server_callback)(\fBSSL\fP                                                                                                                                                                                                                                                                               *ssl,                                                                                                                                                                                                                                                                               const                                                                                                                                                                                                                                                                                  char                                                                                                                                                                                                                                                                               *identity,                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                               char                                                                                                                                                                                                                                                                               *psk,                                                                                                                                                                                                                                                                               unsigned                                                                                                                                                                                                                                                                               int                                                                                                                                                                                                                                                                               max_psk_len))"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_psk_identity_hint\fP (\fBSSL_CTX\fP *ctx, const char *identity_hint)"
.br
.ti -1c
.RI "int \fBSSL_use_psk_identity_hint\fP (\fBSSL\fP *s, const char *identity_hint)"
.br
.ti -1c
.RI "const char * \fBSSL_get_psk_identity_hint\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_get_psk_identity\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_CTX_add_client_custom_ext\fP (\fBSSL_CTX\fP *ctx, unsigned int ext_type, \fBcustom_ext_add_cb\fP add_cb, \fBcustom_ext_free_cb\fP free_cb, \fBvoid\fP *add_arg, \fBcustom_ext_parse_cb\fP parse_cb, \fBvoid\fP *parse_arg)"
.br
.ti -1c
.RI "int \fBSSL_CTX_add_server_custom_ext\fP (\fBSSL_CTX\fP *ctx, unsigned int ext_type, \fBcustom_ext_add_cb\fP add_cb, \fBcustom_ext_free_cb\fP free_cb, \fBvoid\fP *add_arg, \fBcustom_ext_parse_cb\fP parse_cb, \fBvoid\fP *parse_arg)"
.br
.ti -1c
.RI "int \fBSSL_extension_supported\fP (unsigned int ext_type)"
.br
.ti -1c
.RI "size_t \fBSSL_get_finished\fP (const \fBSSL\fP *s, \fBvoid\fP *buf, size_t count)"
.br
.ti -1c
.RI "size_t \fBSSL_get_peer_finished\fP (const \fBSSL\fP *s, \fBvoid\fP *buf, size_t count)"
.br
.ti -1c
.RI "\fBDECLARE_PEM_rw\fP (\fBSSL_SESSION\fP, \fBSSL_SESSION\fP)                                                                                                                                                                                                                                                                                                                                                                           \fBBIO_METHOD\fP *BIO_f_ssl(\fBvoid\fP)"
.br
.ti -1c
.RI "\fBBIO\fP * \fBBIO_new_ssl\fP (\fBSSL_CTX\fP *ctx, int client)"
.br
.ti -1c
.RI "\fBBIO\fP * \fBBIO_new_ssl_connect\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBBIO\fP * \fBBIO_new_buffer_ssl_connect\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBBIO_ssl_copy_session_id\fP (\fBBIO\fP *to, \fBBIO\fP *from)"
.br
.ti -1c
.RI "\fBvoid\fP \fBBIO_ssl_shutdown\fP (\fBBIO\fP *ssl_bio)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_cipher_list\fP (\fBSSL_CTX\fP *, const char *str)"
.br
.ti -1c
.RI "\fBSSL_CTX\fP * \fBSSL_CTX_new\fP (const \fBSSL_METHOD\fP *meth)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_free\fP (\fBSSL_CTX\fP *)"
.br
.ti -1c
.RI "long \fBSSL_CTX_set_timeout\fP (\fBSSL_CTX\fP *ctx, long \fBt\fP)"
.br
.ti -1c
.RI "long \fBSSL_CTX_get_timeout\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBX509_STORE\fP * \fBSSL_CTX_get_cert_store\fP (const \fBSSL_CTX\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_cert_store\fP (\fBSSL_CTX\fP *, \fBX509_STORE\fP *)"
.br
.ti -1c
.RI "int \fBSSL_want\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_clear\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_flush_sessions\fP (\fBSSL_CTX\fP *ctx, long tm)"
.br
.ti -1c
.RI "const \fBSSL_CIPHER\fP * \fBSSL_get_current_cipher\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_CIPHER_get_bits\fP (const \fBSSL_CIPHER\fP *\fBc\fP, int *alg_bits)"
.br
.ti -1c
.RI "char * \fBSSL_CIPHER_get_version\fP (const \fBSSL_CIPHER\fP *\fBc\fP)"
.br
.ti -1c
.RI "const char * \fBSSL_CIPHER_get_name\fP (const \fBSSL_CIPHER\fP *\fBc\fP)"
.br
.ti -1c
.RI "unsigned long \fBSSL_CIPHER_get_id\fP (const \fBSSL_CIPHER\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBSSL_get_fd\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_get_rfd\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_get_wfd\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_get_cipher_list\fP (const \fBSSL\fP *s, int n)"
.br
.ti -1c
.RI "char * \fBSSL_get_shared_ciphers\fP (const \fBSSL\fP *s, char *buf, int \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_get_read_ahead\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_pending\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_set_fd\fP (\fBSSL\fP *s, int fd)"
.br
.ti -1c
.RI "int \fBSSL_set_rfd\fP (\fBSSL\fP *s, int fd)"
.br
.ti -1c
.RI "int \fBSSL_set_wfd\fP (\fBSSL\fP *s, int fd)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_bio\fP (\fBSSL\fP *s, \fBBIO\fP *rbio, \fBBIO\fP *wbio)"
.br
.ti -1c
.RI "\fBBIO\fP * \fBSSL_get_rbio\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBBIO\fP * \fBSSL_get_wbio\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_set_cipher_list\fP (\fBSSL\fP *s, const char *str)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_read_ahead\fP (\fBSSL\fP *s, int yes)"
.br
.ti -1c
.RI "int \fBSSL_get_verify_mode\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_get_verify_depth\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_verify\fP (\fBSSL\fP *s, int mode, int(*callback)(int ok, \fBX509_STORE_CTX\fP *ctx))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_verify_depth\fP (\fBSSL\fP *s, int depth)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_cert_cb\fP (\fBSSL\fP *s, int(*\fBcb\fP)(\fBSSL\fP *ssl, \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "int \fBSSL_use_RSAPrivateKey\fP (\fBSSL\fP *ssl, \fBRSA\fP *rsa)"
.br
.ti -1c
.RI "int \fBSSL_use_RSAPrivateKey_ASN1\fP (\fBSSL\fP *ssl, unsigned char *d, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_PrivateKey\fP (\fBSSL\fP *ssl, \fBEVP_PKEY\fP *pkey)"
.br
.ti -1c
.RI "int \fBSSL_use_PrivateKey_ASN1\fP (int pk, \fBSSL\fP *ssl, const unsigned char *d, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_certificate\fP (\fBSSL\fP *ssl, \fBX509\fP *\fBx\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_certificate_ASN1\fP (\fBSSL\fP *ssl, const unsigned char *d, int \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_serverinfo\fP (\fBSSL_CTX\fP *ctx, const unsigned char *serverinfo, size_t serverinfo_length)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_serverinfo_file\fP (\fBSSL_CTX\fP *ctx, const char *\fBfile\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_RSAPrivateKey_file\fP (\fBSSL\fP *ssl, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_PrivateKey_file\fP (\fBSSL\fP *ssl, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_use_certificate_file\fP (\fBSSL\fP *ssl, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_RSAPrivateKey_file\fP (\fBSSL_CTX\fP *ctx, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_PrivateKey_file\fP (\fBSSL_CTX\fP *ctx, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_certificate_file\fP (\fBSSL_CTX\fP *ctx, const char *\fBfile\fP, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_certificate_chain_file\fP (\fBSSL_CTX\fP *ctx, const char *\fBfile\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509_NAME\fP)*SSL_load_client_CA_file(const char *\fBfile\fP)"
.br
.ti -1c
.RI "int \fBSSL_add_file_cert_subjects_to_stack\fP (\fBSTACK_OF\fP(\fBX509_NAME\fP)*stackCAs, const char *\fBfile\fP)"
.br
.ti -1c
.RI "int \fBSSL_add_dir_cert_subjects_to_stack\fP (\fBSTACK_OF\fP(\fBX509_NAME\fP)*stackCAs, const char *dir)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_load_error_strings\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const char * \fBSSL_state_string\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_rstate_string\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_state_string_long\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_rstate_string_long\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "long \fBSSL_SESSION_get_time\fP (const \fBSSL_SESSION\fP *s)"
.br
.ti -1c
.RI "long \fBSSL_SESSION_set_time\fP (\fBSSL_SESSION\fP *s, long \fBt\fP)"
.br
.ti -1c
.RI "long \fBSSL_SESSION_get_timeout\fP (const \fBSSL_SESSION\fP *s)"
.br
.ti -1c
.RI "long \fBSSL_SESSION_set_timeout\fP (\fBSSL_SESSION\fP *s, long \fBt\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_copy_session_id\fP (\fBSSL\fP *to, const \fBSSL\fP *from)"
.br
.ti -1c
.RI "\fBX509\fP * \fBSSL_SESSION_get0_peer\fP (\fBSSL_SESSION\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_SESSION_set1_id_context\fP (\fBSSL_SESSION\fP *s, const unsigned char *sid_ctx, unsigned int sid_ctx_len)"
.br
.ti -1c
.RI "\fBSSL_SESSION\fP * \fBSSL_SESSION_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const unsigned char * \fBSSL_SESSION_get_id\fP (const \fBSSL_SESSION\fP *s, unsigned int *\fBlen\fP)"
.br
.ti -1c
.RI "unsigned int \fBSSL_SESSION_get_compress_id\fP (const \fBSSL_SESSION\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_SESSION_print_fp\fP (FILE *\fBfp\fP, const \fBSSL_SESSION\fP *ses)"
.br
.ti -1c
.RI "int \fBSSL_SESSION_print\fP (\fBBIO\fP *\fBfp\fP, const \fBSSL_SESSION\fP *ses)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_SESSION_free\fP (\fBSSL_SESSION\fP *ses)"
.br
.ti -1c
.RI "int \fBi2d_SSL_SESSION\fP (\fBSSL_SESSION\fP *in, unsigned char **\fBpp\fP)"
.br
.ti -1c
.RI "int \fBSSL_set_session\fP (\fBSSL\fP *to, \fBSSL_SESSION\fP *session)"
.br
.ti -1c
.RI "int \fBSSL_CTX_add_session\fP (\fBSSL_CTX\fP *s, \fBSSL_SESSION\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_remove_session\fP (\fBSSL_CTX\fP *, \fBSSL_SESSION\fP *\fBc\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_generate_session_id\fP (\fBSSL_CTX\fP *, \fBGEN_SESSION_CB\fP)"
.br
.ti -1c
.RI "int \fBSSL_set_generate_session_id\fP (\fBSSL\fP *, \fBGEN_SESSION_CB\fP)"
.br
.ti -1c
.RI "int \fBSSL_has_matching_session_id\fP (const \fBSSL\fP *ssl, const unsigned char *id, unsigned int id_len)"
.br
.ti -1c
.RI "\fBSSL_SESSION\fP * \fBd2i_SSL_SESSION\fP (\fBSSL_SESSION\fP **\fBa\fP, const unsigned char **\fBpp\fP, long \fBlength\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBX509\fP)*SSL_get_peer_cert_chain(const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_CTX_get_verify_mode\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_CTX_get_verify_depth\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_verify\fP (\fBSSL_CTX\fP *ctx, int mode, int(*callback)(int, \fBX509_STORE_CTX\fP *))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_verify_depth\fP (\fBSSL_CTX\fP *ctx, int depth)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_cert_verify_callback\fP (\fBSSL_CTX\fP *ctx, int(*\fBcb\fP)(\fBX509_STORE_CTX\fP *, \fBvoid\fP *), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_cert_cb\fP (\fBSSL_CTX\fP *\fBc\fP, int(*\fBcb\fP)(\fBSSL\fP *ssl, \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_RSAPrivateKey\fP (\fBSSL_CTX\fP *ctx, \fBRSA\fP *rsa)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_RSAPrivateKey_ASN1\fP (\fBSSL_CTX\fP *ctx, const unsigned char *d, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_PrivateKey\fP (\fBSSL_CTX\fP *ctx, \fBEVP_PKEY\fP *pkey)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_PrivateKey_ASN1\fP (int pk, \fBSSL_CTX\fP *ctx, const unsigned char *d, long \fBlen\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_certificate\fP (\fBSSL_CTX\fP *ctx, \fBX509\fP *\fBx\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_use_certificate_ASN1\fP (\fBSSL_CTX\fP *ctx, int \fBlen\fP, const unsigned char *d)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_default_passwd_cb\fP (\fBSSL_CTX\fP *ctx, \fBpem_password_cb\fP *\fBcb\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_default_passwd_cb_userdata\fP (\fBSSL_CTX\fP *ctx, \fBvoid\fP *\fBu\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_check_private_key\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_check_private_key\fP (const \fBSSL\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_session_id_context\fP (\fBSSL_CTX\fP *ctx, const unsigned char *sid_ctx, unsigned int sid_ctx_len)"
.br
.ti -1c
.RI "\fBSSL\fP * \fBSSL_new\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_set_session_id_context\fP (\fBSSL\fP *ssl, const unsigned char *sid_ctx, unsigned int sid_ctx_len)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_purpose\fP (\fBSSL_CTX\fP *s, int purpose)"
.br
.ti -1c
.RI "int \fBSSL_set_purpose\fP (\fBSSL\fP *s, int purpose)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_trust\fP (\fBSSL_CTX\fP *s, int trust)"
.br
.ti -1c
.RI "int \fBSSL_set_trust\fP (\fBSSL\fP *s, int trust)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set1_param\fP (\fBSSL_CTX\fP *ctx, \fBX509_VERIFY_PARAM\fP *vpm)"
.br
.ti -1c
.RI "int \fBSSL_set1_param\fP (\fBSSL\fP *ssl, \fBX509_VERIFY_PARAM\fP *vpm)"
.br
.ti -1c
.RI "\fBX509_VERIFY_PARAM\fP * \fBSSL_CTX_get0_param\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBX509_VERIFY_PARAM\fP * \fBSSL_get0_param\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_username\fP (\fBSSL_CTX\fP *ctx, char *name)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_password\fP (\fBSSL_CTX\fP *ctx, char *password)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_strength\fP (\fBSSL_CTX\fP *ctx, int strength)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_client_pwd_callback\fP (\fBSSL_CTX\fP *ctx, char *(*\fBcb\fP)(\fBSSL\fP *, \fBvoid\fP *))"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_verify_param_callback\fP (\fBSSL_CTX\fP *ctx, int(*\fBcb\fP)(\fBSSL\fP *, \fBvoid\fP *))"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_username_callback\fP (\fBSSL_CTX\fP *ctx, int(*\fBcb\fP)(\fBSSL\fP *, int *, \fBvoid\fP *))"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_srp_cb_arg\fP (\fBSSL_CTX\fP *ctx, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "int \fBSSL_set_srp_server_param\fP (\fBSSL\fP *s, const \fBBIGNUM\fP *N, const \fBBIGNUM\fP *g, \fBBIGNUM\fP *sa, \fBBIGNUM\fP *v, char *info)"
.br
.ti -1c
.RI "int \fBSSL_set_srp_server_param_pw\fP (\fBSSL\fP *s, const char *user, const char *\fBpass\fP, const char *grp)"
.br
.ti -1c
.RI "\fBBIGNUM\fP * \fBSSL_get_srp_g\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBBIGNUM\fP * \fBSSL_get_srp_N\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "char * \fBSSL_get_srp_username\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "char * \fBSSL_get_srp_userinfo\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_certs_clear\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_free\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_accept\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_connect\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_read\fP (\fBSSL\fP *ssl, \fBvoid\fP *buf, int \fBnum\fP)"
.br
.ti -1c
.RI "int \fBSSL_peek\fP (\fBSSL\fP *ssl, \fBvoid\fP *buf, int \fBnum\fP)"
.br
.ti -1c
.RI "int \fBSSL_write\fP (\fBSSL\fP *ssl, const \fBvoid\fP *buf, int \fBnum\fP)"
.br
.ti -1c
.RI "long \fBSSL_ctrl\fP (\fBSSL\fP *ssl, int cmd, long larg, \fBvoid\fP *parg)"
.br
.ti -1c
.RI "long \fBSSL_callback_ctrl\fP (\fBSSL\fP *, int, \fBvoid\fP(*)(\fBvoid\fP))"
.br
.ti -1c
.RI "long \fBSSL_CTX_ctrl\fP (\fBSSL_CTX\fP *ctx, int cmd, long larg, \fBvoid\fP *parg)"
.br
.ti -1c
.RI "long \fBSSL_CTX_callback_ctrl\fP (\fBSSL_CTX\fP *, int, \fBvoid\fP(*)(\fBvoid\fP))"
.br
.ti -1c
.RI "int \fBSSL_get_error\fP (const \fBSSL\fP *s, int ret_code)"
.br
.ti -1c
.RI "const char * \fBSSL_get_version\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_ssl_version\fP (\fBSSL_CTX\fP *ctx, const \fBSSL_METHOD\fP *meth)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv2_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv2_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv2_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv3_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv3_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv3_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv23_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv23_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSLv23_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_1_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_1_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_1_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_2_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_2_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBTLSv1_2_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_2_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_2_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLSv1_2_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLS_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLS_server_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBDTLS_client_method\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBSSL_CIPHER\fP)*SSL_get_ciphers(const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_do_handshake\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_renegotiate\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_renegotiate_abbreviated\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_renegotiate_pending\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_shutdown\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSL_CTX_get_ssl_method\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "const \fBSSL_METHOD\fP * \fBSSL_get_ssl_method\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_set_ssl_method\fP (\fBSSL\fP *s, const \fBSSL_METHOD\fP *method)"
.br
.ti -1c
.RI "const char * \fBSSL_alert_type_string_long\fP (int value)"
.br
.ti -1c
.RI "const char * \fBSSL_alert_type_string\fP (int value)"
.br
.ti -1c
.RI "const char * \fBSSL_alert_desc_string_long\fP (int value)"
.br
.ti -1c
.RI "const char * \fBSSL_alert_desc_string\fP (int value)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_client_CA_list\fP (\fBSSL\fP *s, \fBSTACK_OF\fP(\fBX509_NAME\fP)*name_list)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_client_CA_list\fP (\fBSSL_CTX\fP *ctx, \fBSTACK_OF\fP(\fBX509_NAME\fP)*name_list)"
.br
.ti -1c
.RI "int \fBSSL_add_client_CA\fP (\fBSSL\fP *ssl, \fBX509\fP *\fBx\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_add_client_CA\fP (\fBSSL_CTX\fP *ctx, \fBX509\fP *\fBx\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_connect_state\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_accept_state\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "long \fBSSL_get_default_timeout\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_library_init\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "char * \fBSSL_CIPHER_description\fP (const \fBSSL_CIPHER\fP *, char *buf, int size)"
.br
.ti -1c
.RI "\fBSSL\fP * \fBSSL_dup\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBX509\fP * \fBSSL_get_certificate\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "struct \fBevp_pkey_st\fP * \fBSSL_get_privatekey\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBX509\fP * \fBSSL_CTX_get0_certificate\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBEVP_PKEY\fP * \fBSSL_CTX_get0_privatekey\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_quiet_shutdown\fP (\fBSSL_CTX\fP *ctx, int mode)"
.br
.ti -1c
.RI "int \fBSSL_CTX_get_quiet_shutdown\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_quiet_shutdown\fP (\fBSSL\fP *ssl, int mode)"
.br
.ti -1c
.RI "int \fBSSL_get_quiet_shutdown\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_shutdown\fP (\fBSSL\fP *ssl, int mode)"
.br
.ti -1c
.RI "int \fBSSL_get_shutdown\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_version\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_default_verify_paths\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_CTX_load_verify_locations\fP (\fBSSL_CTX\fP *ctx, const char *CAfile, const char *CApath)"
.br
.ti -1c
.RI "\fBSSL_SESSION\fP * \fBSSL_get_session\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBSSL_SESSION\fP * \fBSSL_get1_session\fP (\fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBSSL_CTX\fP * \fBSSL_get_SSL_CTX\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBSSL_CTX\fP * \fBSSL_set_SSL_CTX\fP (\fBSSL\fP *ssl, \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_info_callback\fP (\fBSSL\fP *ssl, \fBvoid\fP(*\fBcb\fP)(const \fBSSL\fP *ssl, int \fBtype\fP, int val))"
.br
.ti -1c
.RI "int \fBSSL_state\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_state\fP (\fBSSL\fP *ssl, int state)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_verify_result\fP (\fBSSL\fP *ssl, long v)"
.br
.ti -1c
.RI "long \fBSSL_get_verify_result\fP (const \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "int \fBSSL_set_ex_data\fP (\fBSSL\fP *ssl, int idx, \fBvoid\fP *data)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBSSL_get_ex_data\fP (const \fBSSL\fP *ssl, int idx)"
.br
.ti -1c
.RI "int \fBSSL_get_ex_new_index\fP (long argl, \fBvoid\fP *argp, \fBCRYPTO_EX_new\fP *new_func, \fBCRYPTO_EX_dup\fP *dup_func, \fBCRYPTO_EX_free\fP *\fBfree_func\fP)"
.br
.ti -1c
.RI "int \fBSSL_SESSION_set_ex_data\fP (\fBSSL_SESSION\fP *ss, int idx, \fBvoid\fP *data)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBSSL_SESSION_get_ex_data\fP (const \fBSSL_SESSION\fP *ss, int idx)"
.br
.ti -1c
.RI "int \fBSSL_SESSION_get_ex_new_index\fP (long argl, \fBvoid\fP *argp, \fBCRYPTO_EX_new\fP *new_func, \fBCRYPTO_EX_dup\fP *dup_func, \fBCRYPTO_EX_free\fP *\fBfree_func\fP)"
.br
.ti -1c
.RI "int \fBSSL_CTX_set_ex_data\fP (\fBSSL_CTX\fP *ssl, int idx, \fBvoid\fP *data)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBSSL_CTX_get_ex_data\fP (const \fBSSL_CTX\fP *ssl, int idx)"
.br
.ti -1c
.RI "int \fBSSL_CTX_get_ex_new_index\fP (long argl, \fBvoid\fP *argp, \fBCRYPTO_EX_new\fP *new_func, \fBCRYPTO_EX_dup\fP *dup_func, \fBCRYPTO_EX_free\fP *\fBfree_func\fP)"
.br
.ti -1c
.RI "int \fBSSL_get_ex_data_X509_STORE_CTX_idx\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_tmp_rsa_callback\fP (\fBSSL_CTX\fP *ctx, \fBRSA\fP *(*\fBcb\fP)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                                               int keylength))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_tmp_rsa_callback\fP (\fBSSL\fP *ssl, \fBRSA\fP *(*\fBcb\fP)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                               int keylength))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_tmp_dh_callback\fP (\fBSSL_CTX\fP *ctx, \fBDH\fP *(*dh)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                                       int keylength))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_tmp_dh_callback\fP (\fBSSL\fP *ssl, \fBDH\fP *(*dh)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                       int keylength))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CTX_set_tmp_ecdh_callback\fP (\fBSSL_CTX\fP *ctx, \fBEC_KEY\fP *(*ecdh)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                                                                       int keylength))"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_tmp_ecdh_callback\fP (\fBSSL\fP *ssl, \fBEC_KEY\fP *(*ecdh)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                                                       int keylength))"
.br
.ti -1c
.RI "const \fBCOMP_METHOD\fP * \fBSSL_get_current_compression\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "const \fBCOMP_METHOD\fP * \fBSSL_get_current_expansion\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "const char * \fBSSL_COMP_get_name\fP (const \fBCOMP_METHOD\fP *comp)"
.br
.ti -1c
.RI "\fBSTACK_OF\fP (\fBSSL_COMP\fP)*SSL_COMP_get_compression_methods(\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_COMP_free_compression_methods\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBSSL_COMP_add_compression_method\fP (int id, \fBCOMP_METHOD\fP *cm)"
.br
.ti -1c
.RI "const \fBSSL_CIPHER\fP * \fBSSL_CIPHER_find\fP (\fBSSL\fP *ssl, const unsigned char *ptr)"
.br
.ti -1c
.RI "int \fBSSL_set_session_ticket_ext\fP (\fBSSL\fP *s, \fBvoid\fP *ext_data, int ext_len)"
.br
.ti -1c
.RI "int \fBSSL_set_session_ticket_ext_cb\fP (\fBSSL\fP *s, \fBtls_session_ticket_ext_cb_fn\fP \fBcb\fP, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "int \fBSSL_set_session_secret_cb\fP (\fBSSL\fP *s, \fBtls_session_secret_cb_fn\fP tls_session_secret_cb, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_set_debug\fP (\fBSSL\fP *s, int debug)"
.br
.ti -1c
.RI "int \fBSSL_cache_hit\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "int \fBSSL_is_server\fP (\fBSSL\fP *s)"
.br
.ti -1c
.RI "\fBSSL_CONF_CTX\fP * \fBSSL_CONF_CTX_new\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBSSL_CONF_CTX_finish\fP (\fBSSL_CONF_CTX\fP *cctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CONF_CTX_free\fP (\fBSSL_CONF_CTX\fP *cctx)"
.br
.ti -1c
.RI "unsigned int \fBSSL_CONF_CTX_set_flags\fP (\fBSSL_CONF_CTX\fP *cctx, unsigned int \fBflags\fP)"
.br
.ti -1c
.RI "unsigned int \fBSSL_CONF_CTX_clear_flags\fP (\fBSSL_CONF_CTX\fP *cctx, unsigned int \fBflags\fP)"
.br
.ti -1c
.RI "int \fBSSL_CONF_CTX_set1_prefix\fP (\fBSSL_CONF_CTX\fP *cctx, const char *pre)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CONF_CTX_set_ssl\fP (\fBSSL_CONF_CTX\fP *cctx, \fBSSL\fP *ssl)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_CONF_CTX_set_ssl_ctx\fP (\fBSSL_CONF_CTX\fP *cctx, \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int \fBSSL_CONF_cmd\fP (\fBSSL_CONF_CTX\fP *cctx, const char *cmd, const char *value)"
.br
.ti -1c
.RI "int \fBSSL_CONF_cmd_argv\fP (\fBSSL_CONF_CTX\fP *cctx, int *pargc, char ***pargv)"
.br
.ti -1c
.RI "int \fBSSL_CONF_cmd_value_type\fP (\fBSSL_CONF_CTX\fP *cctx, const char *cmd)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSSL_trace\fP (int write_p, int \fBversion\fP, int content_type, const \fBvoid\fP *buf, size_t \fBlen\fP, \fBSSL\fP *ssl, \fBvoid\fP *arg)"
.br
.ti -1c
.RI "const char * \fBSSL_CIPHER_standard_name\fP (const \fBSSL_CIPHER\fP *\fBc\fP)"
.br
.ti -1c
.RI "const struct \fBopenssl_ssl_test_functions\fP * \fBSSL_test_functions\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBERR_load_SSL_strings\fP (\fBvoid\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int(*)(struct \fBssl_st\fP *ssl, \fBSSL_SESSION\fP *sess) \fBSSL_CTX_sess_get_new_cb\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP(*)(struct \fBssl_ctx_st\fP *ctx, \fBSSL_SESSION\fP *sess) \fBSSL_CTX_sess_get_remove_cb\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBSSL_SESSION\fP *(*)(struct \fBssl_st\fP *ssl, unsigned char *Data, int \fBlen\fP, int *copy) \fBSSL_CTX_sess_get_get_cb\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fP, int val) \fBSSL_CTX_get_info_callback\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int(*)(\fBSSL\fP *ssl, \fBX509\fP **x509, \fBEVP_PKEY\fP **pkey) \fBSSL_CTX_get_client_cert_cb\fP (\fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "int(*)(int, \fBX509_STORE_CTX\fP *) \fBSSL_get_verify_callback\fP (const \fBSSL\fP *s)"
.br
.ti -1c
.RI "int(*)(int, \fBX509_STORE_CTX\fP *) \fBSSL_CTX_get_verify_callback\fP (const \fBSSL_CTX\fP *ctx)"
.br
.ti -1c
.RI "\fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fP, int val) \fBSSL_get_info_callback\fP (const \fBSSL\fP *ssl)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CERT_PKEY_CA_PARAM   0x80"

.PP
Definition at line 758 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_CA_SIGNATURE   0x20"

.PP
Definition at line 754 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_CERT_TYPE   0x400"

.PP
Definition at line 764 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_EE_PARAM   0x40"

.PP
Definition at line 756 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_EE_SIGNATURE   0x10"

.PP
Definition at line 752 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_EXPLICIT_SIGN   0x100"

.PP
Definition at line 760 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_ISSUER_NAME   0x200"

.PP
Definition at line 762 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_SIGN   0x2"

.PP
Definition at line 750 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_SUITEB   0x800"

.PP
Definition at line 766 of file ssl/ssl\&.h\&.
.SS "#define CERT_PKEY_VALID   0x1"

.PP
Definition at line 748 of file ssl/ssl\&.h\&.
.SS "#define d2i_SSL_SESSION_bio(\fBbp\fP, s_id)   \fBASN1_d2i_bio_of\fP(\fBSSL_SESSION\fP,\fBSSL_SESSION_new\fP,\fBd2i_SSL_SESSION\fP,\fBbp\fP,s_id)"

.PP
Definition at line 1805 of file ssl/ssl\&.h\&.
.SS "#define DTLS_CTRL_GET_LINK_MIN_MTU   121"

.SS "#define DTLS_CTRL_GET_TIMEOUT   73"

.SS "#define DTLS_CTRL_HANDLE_TIMEOUT   74"

.SS "#define DTLS_CTRL_LISTEN   75"

.SS "#define DTLS_CTRL_SET_LINK_MTU   120"

.SS "#define DTLS_get_link_min_mtu(ssl)   \fBSSL_ctrl\fP((ssl),\fBDTLS_CTRL_GET_LINK_MIN_MTU\fP,0,NULL)"

.PP
Definition at line 814 of file ssl/ssl\&.h\&.
.SS "#define DTLS_set_link_mtu(ssl, mtu)   \fBSSL_ctrl\fP((ssl),\fBDTLS_CTRL_SET_LINK_MTU\fP,(mtu),NULL)"

.PP
Definition at line 812 of file ssl/ssl\&.h\&.
.SS "#define DTLSv1_get_timeout(ssl, arg)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_GET_TIMEOUT\fP,0, (\fBvoid\fP *)arg)"

.SS "#define DTLSv1_handle_timeout(ssl)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_HANDLE_TIMEOUT\fP,0, NULL)"

.SS "#define DTLSv1_listen(ssl, peer)   \fBSSL_ctrl\fP(ssl,\fBDTLS_CTRL_LISTEN\fP,0, (\fBvoid\fP *)peer)"

.SS "#define i2d_SSL_SESSION_bio(\fBbp\fP, s_id)   \fBASN1_i2d_bio_of\fP(\fBSSL_SESSION\fP,\fBi2d_SSL_SESSION\fP,\fBbp\fP,s_id)"

.PP
Definition at line 1806 of file ssl/ssl\&.h\&.
.SS "#define OpenSSL_add_ssl_algorithms()   \fBSSL_library_init\fP()"

.PP
Definition at line 1780 of file ssl/ssl\&.h\&.
.SS "#define OPENSSL_NPN_NEGOTIATED   1"

.PP
Definition at line 1297 of file ssl/ssl\&.h\&.
.SS "#define OPENSSL_NPN_NO_OVERLAP   2"

.PP
Definition at line 1298 of file ssl/ssl\&.h\&.
.SS "#define OPENSSL_NPN_UNSUPPORTED   0"

.PP
Definition at line 1296 of file ssl/ssl\&.h\&.
.SS "#define PSK_MAX_IDENTITY_LEN   128"

.PP
Definition at line 1319 of file ssl/ssl\&.h\&.
.SS "#define PSK_MAX_PSK_LEN   256"

.PP
Definition at line 1320 of file ssl/ssl\&.h\&.
.SS "#define session_ctx   initial_ctx"

.PP
Definition at line 1651 of file ssl/ssl\&.h\&.
.SS "#define SSL_AD_ACCESS_DENIED   \fBTLS1_AD_ACCESS_DENIED\fP"

.SS "#define SSL_AD_BAD_CERTIFICATE   \fBSSL3_AD_BAD_CERTIFICATE\fP"

.SS "#define SSL_AD_BAD_CERTIFICATE_HASH_VALUE   \fBTLS1_AD_BAD_CERTIFICATE_HASH_VALUE\fP"

.SS "#define SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE   \fBTLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE\fP"

.SS "#define SSL_AD_BAD_RECORD_MAC   \fBSSL3_AD_BAD_RECORD_MAC\fP"

.SS "#define SSL_AD_CERTIFICATE_EXPIRED   \fBSSL3_AD_CERTIFICATE_EXPIRED\fP"

.SS "#define SSL_AD_CERTIFICATE_REVOKED   \fBSSL3_AD_CERTIFICATE_REVOKED\fP"

.SS "#define SSL_AD_CERTIFICATE_UNKNOWN   \fBSSL3_AD_CERTIFICATE_UNKNOWN\fP"

.SS "#define SSL_AD_CERTIFICATE_UNOBTAINABLE   \fBTLS1_AD_CERTIFICATE_UNOBTAINABLE\fP"

.SS "#define SSL_AD_CLOSE_NOTIFY   \fBSSL3_AD_CLOSE_NOTIFY\fP"

.SS "#define SSL_AD_DECODE_ERROR   \fBTLS1_AD_DECODE_ERROR\fP"

.SS "#define SSL_AD_DECOMPRESSION_FAILURE   \fBSSL3_AD_DECOMPRESSION_FAILURE\fP"

.SS "#define SSL_AD_DECRYPT_ERROR   \fBTLS1_AD_DECRYPT_ERROR\fP"

.SS "#define SSL_AD_DECRYPTION_FAILED   \fBTLS1_AD_DECRYPTION_FAILED\fP"

.SS "#define SSL_AD_EXPORT_RESTRICTION   \fBTLS1_AD_EXPORT_RESTRICTION\fP"

.SS "#define SSL_AD_HANDSHAKE_FAILURE   \fBSSL3_AD_HANDSHAKE_FAILURE\fP"

.SS "#define SSL_AD_ILLEGAL_PARAMETER   \fBSSL3_AD_ILLEGAL_PARAMETER\fP"

.SS "#define SSL_AD_INAPPROPRIATE_FALLBACK   \fBTLS1_AD_INAPPROPRIATE_FALLBACK\fP"

.SS "#define SSL_AD_INSUFFICIENT_SECURITY   \fBTLS1_AD_INSUFFICIENT_SECURITY\fP"

.SS "#define SSL_AD_INTERNAL_ERROR   \fBTLS1_AD_INTERNAL_ERROR\fP"

.SS "#define SSL_AD_NO_CERTIFICATE   \fBSSL3_AD_NO_CERTIFICATE\fP"

.SS "#define SSL_AD_NO_RENEGOTIATION   \fBTLS1_AD_NO_RENEGOTIATION\fP"

.SS "#define SSL_AD_PROTOCOL_VERSION   \fBTLS1_AD_PROTOCOL_VERSION\fP"

.SS "#define SSL_AD_REASON_OFFSET"
\fBValue:\fP
.PP
.nf
1000/* offset to get SSL_R_\&.\&.\&. value
                                              * from SSL_AD_\&.\&.\&. */
.fi
.SS "#define SSL_AD_RECORD_OVERFLOW   \fBTLS1_AD_RECORD_OVERFLOW\fP"

.SS "#define SSL_AD_UNEXPECTED_MESSAGE   \fBSSL3_AD_UNEXPECTED_MESSAGE\fP"

.SS "#define SSL_AD_UNKNOWN_CA   \fBTLS1_AD_UNKNOWN_CA\fP"

.SS "#define SSL_AD_UNKNOWN_PSK_IDENTITY   \fBTLS1_AD_UNKNOWN_PSK_IDENTITY\fP"

.SS "#define SSL_AD_UNRECOGNIZED_NAME   \fBTLS1_AD_UNRECOGNIZED_NAME\fP"

.SS "#define SSL_AD_UNSUPPORTED_CERTIFICATE   \fBSSL3_AD_UNSUPPORTED_CERTIFICATE\fP"

.SS "#define SSL_AD_UNSUPPORTED_EXTENSION   \fBTLS1_AD_UNSUPPORTED_EXTENSION\fP"

.SS "#define SSL_AD_USER_CANCELLED   \fBTLS1_AD_USER_CANCELLED\fP"

.SS "#define SSL_add0_chain_cert(ctx, x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,0,(char *)x509)"

.SS "#define SSL_add1_chain_cert(ctx, x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,1,(char *)x509)"

.SS "#define SSL_build_cert_chain(s, \fBflags\fP)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_BUILD_CERT_CHAIN\fP, \fBflags\fP, NULL)"

.SS "#define SSL_BUILD_CHAIN_FLAG_CHECK   0x4"

.PP
Definition at line 740 of file ssl/ssl\&.h\&.
.SS "#define SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR   0x10"

.PP
Definition at line 744 of file ssl/ssl\&.h\&.
.SS "#define SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR   0x8"

.PP
Definition at line 742 of file ssl/ssl\&.h\&.
.SS "#define SSL_BUILD_CHAIN_FLAG_NO_ROOT   0x2"

.PP
Definition at line 738 of file ssl/ssl\&.h\&.
.SS "#define SSL_BUILD_CHAIN_FLAG_UNTRUSTED   0x1"

.PP
Definition at line 736 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_ACCEPT_EXIT   (\fBSSL_ST_ACCEPT\fP|\fBSSL_CB_EXIT\fP)"

.PP
Definition at line 1740 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_ACCEPT_LOOP   (\fBSSL_ST_ACCEPT\fP|\fBSSL_CB_LOOP\fP)"

.PP
Definition at line 1739 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_ALERT   0x4000/* used in callback */"

.PP
Definition at line 1736 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_CONNECT_EXIT   (\fBSSL_ST_CONNECT\fP|\fBSSL_CB_EXIT\fP)"

.PP
Definition at line 1742 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_CONNECT_LOOP   (\fBSSL_ST_CONNECT\fP|\fBSSL_CB_LOOP\fP)"

.PP
Definition at line 1741 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_EXIT   0x02"

.PP
Definition at line 1733 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_HANDSHAKE_DONE   0x20"

.PP
Definition at line 1744 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_HANDSHAKE_START   0x10"

.PP
Definition at line 1743 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_LOOP   0x01"

.PP
Definition at line 1732 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_READ   0x04"

.PP
Definition at line 1734 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_READ_ALERT   (\fBSSL_CB_ALERT\fP|\fBSSL_CB_READ\fP)"

.PP
Definition at line 1737 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_WRITE   0x08"

.PP
Definition at line 1735 of file ssl/ssl\&.h\&.
.SS "#define SSL_CB_WRITE_ALERT   (\fBSSL_CB_ALERT\fP|\fBSSL_CB_WRITE\fP)"

.PP
Definition at line 1738 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_FLAG_BROKEN_PROTOCOL   0x10000000"

.PP
Definition at line 732 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_FLAG_SUITEB_128_LOS   0x30000"

.PP
Definition at line 729 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_FLAG_SUITEB_128_LOS_ONLY   0x10000"

.PP
Definition at line 725 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_FLAG_SUITEB_192_LOS   0x20000"

.PP
Definition at line 727 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_FLAG_TLS_STRICT   0x00000001L"

.PP
Definition at line 722 of file ssl/ssl\&.h\&.
.SS "#define SSL_CERT_SET_FIRST   1"

.SS "#define SSL_CERT_SET_NEXT   2"

.SS "#define SSL_CERT_SET_SERVER   3"

.SS "#define SSL_clear_cert_flags(s, op)   \fBSSL_ctrl\fP((s),\fBSSL_CTRL_CLEAR_CERT_FLAGS\fP,(op),NULL)"

.PP
Definition at line 831 of file ssl/ssl\&.h\&.
.SS "#define SSL_clear_chain_certs(ctx)   \fBSSL_set0_chain\fP(ctx,NULL)"

.SS "#define SSL_clear_mode(ssl, op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_MODE\fP,(op),NULL)"

.PP
Definition at line 804 of file ssl/ssl\&.h\&.
.SS "#define SSL_clear_num_renegotiations(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_NUM_RENEGOTIATIONS\fP,0,NULL)"

.SS "#define SSL_clear_options(ssl, op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_CLEAR_OPTIONS\fP,(op),NULL)"

.PP
Definition at line 793 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_CERTIFICATE   0x20"

.PP
Definition at line 773 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_CLIENT   0x4"

.PP
Definition at line 770 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_CMDLINE   0x1"

.PP
Definition at line 768 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_FILE   0x2"

.PP
Definition at line 769 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_SERVER   0x8"

.PP
Definition at line 771 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_FLAG_SHOW_ERRORS   0x10"

.PP
Definition at line 772 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_TYPE_DIR   0x3"

.PP
Definition at line 778 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_TYPE_FILE   0x2"

.PP
Definition at line 777 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_TYPE_STRING   0x1"

.PP
Definition at line 776 of file ssl/ssl\&.h\&.
.SS "#define SSL_CONF_TYPE_UNKNOWN   0x0"

.PP
Definition at line 775 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTRL_BUILD_CERT_CHAIN   105"

.SS "#define SSL_CTRL_CERT_FLAGS   99"

.SS "#define SSL_CTRL_CHAIN   88"

.SS "#define SSL_CTRL_CHAIN_CERT   89"

.SS "#define SSL_CTRL_CHECK_PROTO_VERSION   119"

.SS "#define SSL_CTRL_CLEAR_CERT_FLAGS   100"

.SS "#define SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS   83"

.SS "#define SSL_CTRL_CLEAR_MODE   78"

.SS "#define SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS   11"

.SS "#define SSL_CTRL_CLEAR_OPTIONS   77"

.SS "#define SSL_CTRL_EXTRA_CHAIN_CERT   14"

.SS "#define SSL_CTRL_GET_CHAIN_CERTS   115"

.SS "#define SSL_CTRL_GET_CLIENT_CERT_REQUEST   9"

.SS "#define SSL_CTRL_GET_CLIENT_CERT_TYPES   103"

.SS "#define SSL_CTRL_GET_CURVES   90"

.SS "#define SSL_CTRL_GET_EC_POINT_FORMATS   111"

.SS "#define SSL_CTRL_GET_EXTRA_CHAIN_CERTS   82"

.SS "#define SSL_CTRL_GET_FLAGS   13"

.SS "#define SSL_CTRL_GET_MAX_CERT_LIST   50"

.SS "#define SSL_CTRL_GET_NUM_RENEGOTIATIONS   10"

.SS "#define SSL_CTRL_GET_PEER_SIGNATURE_NID   108"

.SS "#define SSL_CTRL_GET_RAW_CIPHERLIST   110"

.SS "#define SSL_CTRL_GET_READ_AHEAD   40"

.SS "#define SSL_CTRL_GET_RI_SUPPORT   76"

.SS "#define SSL_CTRL_GET_SERVER_TMP_KEY   109"

.SS "#define SSL_CTRL_GET_SESS_CACHE_MODE   45"

.SS "#define SSL_CTRL_GET_SESS_CACHE_SIZE   43"

.SS "#define SSL_CTRL_GET_SESSION_REUSED   8"

.SS "#define SSL_CTRL_GET_SHARED_CURVE   93"

.SS "#define SSL_CTRL_GET_TLS_EXT_HEARTBEAT_PENDING   86"

.SS "#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS   66"

.SS "#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS   68"

.SS "#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP   70"

.SS "#define SSL_CTRL_GET_TLSEXT_TICKET_KEYS   58"

.SS "#define SSL_CTRL_GET_TOTAL_RENEGOTIATIONS   12"

.SS "#define SSL_CTRL_MODE   33"

.SS "#define SSL_CTRL_NEED_TMP_RSA   1"

.SS "#define SSL_CTRL_OPTIONS   32"

.SS "#define SSL_CTRL_SELECT_CURRENT_CERT   116"

.SS "#define SSL_CTRL_SESS_ACCEPT   24"

.SS "#define SSL_CTRL_SESS_ACCEPT_GOOD   25"

.SS "#define SSL_CTRL_SESS_ACCEPT_RENEGOTIATE   26"

.SS "#define SSL_CTRL_SESS_CACHE_FULL   31"

.SS "#define SSL_CTRL_SESS_CB_HIT   28"

.SS "#define SSL_CTRL_SESS_CONNECT   21"

.SS "#define SSL_CTRL_SESS_CONNECT_GOOD   22"

.SS "#define SSL_CTRL_SESS_CONNECT_RENEGOTIATE   23"

.SS "#define SSL_CTRL_SESS_HIT   27"

.SS "#define SSL_CTRL_SESS_MISSES   29"

.SS "#define SSL_CTRL_SESS_NUMBER   20"

.SS "#define SSL_CTRL_SESS_TIMEOUTS   30"

.SS "#define SSL_CTRL_SET_CHAIN_CERT_STORE   107"

.SS "#define SSL_CTRL_SET_CLIENT_CERT_TYPES   104"

.SS "#define SSL_CTRL_SET_CLIENT_SIGALGS   101"

.SS "#define SSL_CTRL_SET_CLIENT_SIGALGS_LIST   102"

.SS "#define SSL_CTRL_SET_CURRENT_CERT   117"

.SS "#define SSL_CTRL_SET_CURVES   91"

.SS "#define SSL_CTRL_SET_CURVES_LIST   92"

.SS "#define SSL_CTRL_SET_ECDH_AUTO   94"

.SS "#define SSL_CTRL_SET_MAX_CERT_LIST   51"

.SS "#define SSL_CTRL_SET_MAX_SEND_FRAGMENT   52"

.SS "#define SSL_CTRL_SET_MSG_CALLBACK   15"

.SS "#define SSL_CTRL_SET_MSG_CALLBACK_ARG   16"

.SS "#define SSL_CTRL_SET_MTU   17"

.SS "#define SSL_CTRL_SET_READ_AHEAD   41"

.SS "#define SSL_CTRL_SET_SESS_CACHE_MODE   44"

.SS "#define SSL_CTRL_SET_SESS_CACHE_SIZE   42"

.SS "#define SSL_CTRL_SET_SIGALGS   97"

.SS "#define SSL_CTRL_SET_SIGALGS_LIST   98"

.SS "#define SSL_CTRL_SET_SRP_ARG   78"

.SS "#define SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB   77"

.SS "#define SSL_CTRL_SET_SRP_VERIFY_PARAM_CB   76"

.SS "#define SSL_CTRL_SET_TLS_EXT_HEARTBEAT_NO_REQUESTS   87"

.SS "#define SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD   81"

.SS "#define SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH   80"

.SS "#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME   79"

.SS "#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB   75"

.SS "#define SSL_CTRL_SET_TLSEXT_DEBUG_ARG   57"

.SS "#define SSL_CTRL_SET_TLSEXT_DEBUG_CB   56"

.SS "#define SSL_CTRL_SET_TLSEXT_HOSTNAME   55"

.SS "#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT   60"

.SS "#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB   61"

.SS "#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB_ARG   62"

.SS "#define SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG   54"

.SS "#define SSL_CTRL_SET_TLSEXT_SERVERNAME_CB   53"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB   63"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG   64"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS   67"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS   69"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP   71"

.SS "#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE   65"

.SS "#define SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB   72"

.SS "#define SSL_CTRL_SET_TLSEXT_TICKET_KEYS   59"

.SS "#define SSL_CTRL_SET_TMP_DH   3"

.SS "#define SSL_CTRL_SET_TMP_DH_CB   6"

.SS "#define SSL_CTRL_SET_TMP_ECDH   4"

.SS "#define SSL_CTRL_SET_TMP_ECDH_CB   7"

.SS "#define SSL_CTRL_SET_TMP_RSA   2"

.SS "#define SSL_CTRL_SET_TMP_RSA_CB   5"

.SS "#define SSL_CTRL_SET_VERIFY_CERT_STORE   106"

.SS "#define SSL_CTRL_TLS_EXT_SEND_HEARTBEAT   85"

.SS "#define SSL_CTX_add0_chain_cert(ctx, x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,0,(char *)x509)"

.SS "#define SSL_CTX_add1_chain_cert(ctx, x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN_CERT\fP,1,(char *)x509)"

.SS "#define SSL_CTX_add_extra_chain_cert(ctx, x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_EXTRA_CHAIN_CERT\fP,0,(char *)x509)"

.SS "#define SSL_CTX_build_cert_chain(ctx, \fBflags\fP)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_BUILD_CERT_CHAIN\fP, \fBflags\fP, NULL)"

.SS "#define SSL_CTX_clear_cert_flags(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_CERT_FLAGS\fP,(op),NULL)"

.PP
Definition at line 829 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_clear_chain_certs(ctx)   \fBSSL_CTX_set0_chain\fP(ctx,NULL)"

.SS "#define SSL_CTX_clear_extra_chain_certs(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS\fP,0,NULL)"

.SS "#define SSL_CTX_clear_mode(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_MODE\fP,(op),NULL)"

.PP
Definition at line 800 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_clear_options(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CLEAR_OPTIONS\fP,(op),NULL)"

.PP
Definition at line 787 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get0_chain_certs(ctx, px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_CHAIN_CERTS\fP,0,px509)"

.SS "#define SSL_CTX_get_app_data(ctx)   (\fBSSL_CTX_get_ex_data\fP(ctx,0))"

.PP
Definition at line 1712 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_default_read_ahead(ctx)   \fBSSL_CTX_get_read_ahead\fP(ctx)"

.PP
Definition at line 2488 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_extra_chain_certs(ctx, px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_EXTRA_CHAIN_CERTS\fP,0,px509)"

.SS "#define SSL_CTX_get_extra_chain_certs_only(ctx, px509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_EXTRA_CHAIN_CERTS\fP,1,px509)"

.SS "#define SSL_CTX_get_max_cert_list(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_MAX_CERT_LIST\fP,0,NULL)"

.PP
Definition at line 2494 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_mode(ctx)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_MODE\fP,0,NULL)"

.PP
Definition at line 802 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_options(ctx)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_OPTIONS\fP,0,NULL)"

.PP
Definition at line 789 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_read_ahead(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_READ_AHEAD\fP,0,NULL)"

.PP
Definition at line 2490 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_get_session_cache_mode(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_SESS_CACHE_MODE\fP,0,NULL)"

.PP
Definition at line 2485 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_need_tmp_RSA(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_NEED_TMP_RSA\fP,0,NULL)"

.SS "#define SSL_CTX_select_current_cert(ctx, x509)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SELECT_CURRENT_CERT\fP,0,(char *)x509)"

.SS "#define SSL_CTX_sess_accept(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT\fP,0,NULL)"

.PP
Definition at line 1208 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_accept_good(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT_GOOD\fP,0,NULL)"

.PP
Definition at line 1212 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_accept_renegotiate(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_ACCEPT_RENEGOTIATE\fP,0,NULL)"

.PP
Definition at line 1210 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_cache_full(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CACHE_FULL\fP,0,NULL)"

.PP
Definition at line 1222 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_cb_hits(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CB_HIT\fP,0,NULL)"

.PP
Definition at line 1216 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_connect(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT\fP,0,NULL)"

.PP
Definition at line 1202 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_connect_good(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT_GOOD\fP,0,NULL)"

.PP
Definition at line 1204 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_connect_renegotiate(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_CONNECT_RENEGOTIATE\fP,0,NULL)"

.PP
Definition at line 1206 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_get_cache_size(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_GET_SESS_CACHE_SIZE\fP,0,NULL)"

.PP
Definition at line 2481 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_hits(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_HIT\fP,0,NULL)"

.PP
Definition at line 1214 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_misses(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_MISSES\fP,0,NULL)"

.PP
Definition at line 1218 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_number(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_NUMBER\fP,0,NULL)"

.PP
Definition at line 1200 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_set_cache_size(ctx, \fBt\fP)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SESS_CACHE_SIZE\fP,\fBt\fP,NULL)"

.PP
Definition at line 2479 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_sess_timeouts(ctx)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SESS_TIMEOUTS\fP,0,NULL)"

.PP
Definition at line 1220 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set0_chain(ctx, sk)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,0,(char *)sk)"

.SS "#define SSL_CTX_set0_chain_cert_store(ctx, st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,0,(char *)st)"

.SS "#define SSL_CTX_set0_verify_cert_store(ctx, st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,0,(char *)st)"

.SS "#define SSL_CTX_set1_chain(ctx, sk)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,1,(char *)sk)"

.SS "#define SSL_CTX_set1_chain_cert_store(ctx, st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,1,(char *)st)"

.SS "#define SSL_CTX_set1_client_certificate_types(ctx, clist, clistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_CERT_TYPES\fP,clistlen,(char *)clist)"

.SS "#define SSL_CTX_set1_client_sigalgs(ctx, slist, slistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS\fP,slistlen,(int *)slist)"

.SS "#define SSL_CTX_set1_client_sigalgs_list(ctx, s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS_LIST\fP,0,(char *)s)"

.SS "#define SSL_CTX_set1_curves(ctx, clist, clistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES\fP,clistlen,(char *)clist)"

.SS "#define SSL_CTX_set1_curves_list(ctx, s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES_LIST\fP,0,(char *)s)"

.SS "#define SSL_CTX_set1_sigalgs(ctx, slist, slistlen)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS\fP,slistlen,(int *)slist)"

.SS "#define SSL_CTX_set1_sigalgs_list(ctx, s)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS_LIST\fP,0,(char *)s)"

.SS "#define SSL_CTX_set1_verify_cert_store(ctx, st)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,1,(char *)st)"

.SS "#define SSL_CTX_set_app_data(ctx, arg)   (\fBSSL_CTX_set_ex_data\fP(ctx,0,(char *)arg))"

.PP
Definition at line 1713 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_cert_flags(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_CERT_FLAGS\fP,(op),NULL)"

.PP
Definition at line 825 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_current_cert(ctx, op)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURRENT_CERT\fP, op, NULL)"

.SS "#define SSL_CTX_set_default_read_ahead(ctx, m)   \fBSSL_CTX_set_read_ahead\fP(ctx,m)"

.PP
Definition at line 2489 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_ecdh_auto(ctx, onoff)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_ECDH_AUTO\fP,onoff,NULL)"

.SS "#define SSL_CTX_set_max_cert_list(ctx, m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_MAX_CERT_LIST\fP,m,NULL)"

.PP
Definition at line 2496 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_max_send_fragment(ctx, m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_MAX_SEND_FRAGMENT\fP,m,NULL)"

.PP
Definition at line 2503 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_mode(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_MODE\fP,(op),NULL)"

.PP
Definition at line 798 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_msg_callback_arg(ctx, arg)   \fBSSL_CTX_ctrl\fP((ctx), \fBSSL_CTRL_SET_MSG_CALLBACK_ARG\fP, 0, (arg))"

.PP
Definition at line 842 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_options(ctx, op)   \fBSSL_CTX_ctrl\fP((ctx),\fBSSL_CTRL_OPTIONS\fP,(op),NULL)"

.PP
Definition at line 785 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_read_ahead(ctx, m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_READ_AHEAD\fP,m,NULL)"

.PP
Definition at line 2492 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_session_cache_mode(ctx, m)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_SESS_CACHE_MODE\fP,m,NULL)"

.PP
Definition at line 2483 of file ssl/ssl\&.h\&.
.SS "#define SSL_CTX_set_tmp_dh(ctx, dh)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_DH\fP,0,(char *)dh)"

.SS "#define SSL_CTX_set_tmp_ecdh(ctx, ecdh)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_ECDH\fP,0,(char *)ecdh)"

.SS "#define SSL_CTX_set_tmp_rsa(ctx, rsa)   \fBSSL_CTX_ctrl\fP(ctx,\fBSSL_CTRL_SET_TMP_RSA\fP,0,(char *)rsa)"

.SS "#define SSL_DEFAULT_CIPHER_LIST   'ALL:!EXPORT:!LOW:!aNULL:!eNULL:!SSLv2'"

.PP
Definition at line 341 of file ssl/ssl\&.h\&.
.SS "#define SSL_ERROR_NONE   0"

.SS "#define SSL_ERROR_SSL   1"

.SS "#define SSL_ERROR_SYSCALL"
\fBValue:\fP
.PP
.nf
5/* look at error stack/return
                                           * value/errno */
.fi
.SS "#define SSL_ERROR_WANT_ACCEPT   8"

.SS "#define SSL_ERROR_WANT_CONNECT   7"

.SS "#define SSL_ERROR_WANT_READ   2"

.SS "#define SSL_ERROR_WANT_WRITE   3"

.SS "#define SSL_ERROR_WANT_X509_LOOKUP   4"

.SS "#define SSL_ERROR_ZERO_RETURN   6"

.SS "#define SSL_F_CHECK_SUITEB_CIPHER_LIST   331"

.PP
Definition at line 2595 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_CLIENT_CERTIFICATE   100"

.PP
Definition at line 2596 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_CLIENT_FINISHED   167"

.PP
Definition at line 2597 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_CLIENT_HELLO   101"

.PP
Definition at line 2598 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_CLIENT_MASTER_KEY   102"

.PP
Definition at line 2599 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_D2I_SSL_SESSION   103"

.PP
Definition at line 2600 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DO_DTLS1_WRITE   245"

.PP
Definition at line 2601 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DO_SSL3_WRITE   104"

.PP
Definition at line 2602 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_ACCEPT   246"

.PP
Definition at line 2603 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_ADD_CERT_TO_BUF   295"

.PP
Definition at line 2604 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_BUFFER_RECORD   247"

.PP
Definition at line 2605 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_CHECK_TIMEOUT_NUM   316"

.PP
Definition at line 2606 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_CLIENT_HELLO   248"

.PP
Definition at line 2607 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_CONNECT   249"

.PP
Definition at line 2608 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_ENC   250"

.PP
Definition at line 2609 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_GET_HELLO_VERIFY   251"

.PP
Definition at line 2610 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_GET_MESSAGE   252"

.PP
Definition at line 2611 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_GET_MESSAGE_FRAGMENT   253"

.PP
Definition at line 2612 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_GET_RECORD   254"

.PP
Definition at line 2613 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_HANDLE_TIMEOUT   297"

.PP
Definition at line 2614 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_HEARTBEAT   305"

.PP
Definition at line 2615 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_OUTPUT_CERT_CHAIN   255"

.PP
Definition at line 2616 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_PREPROCESS_FRAGMENT   288"

.PP
Definition at line 2617 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE   256"

.PP
Definition at line 2618 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_PROCESS_RECORD   257"

.PP
Definition at line 2619 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_READ_BYTES   258"

.PP
Definition at line 2620 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_READ_FAILED   259"

.PP
Definition at line 2621 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_CERTIFICATE_REQUEST   260"

.PP
Definition at line 2622 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_CLIENT_CERTIFICATE   261"

.PP
Definition at line 2623 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_CLIENT_KEY_EXCHANGE   262"

.PP
Definition at line 2624 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_CLIENT_VERIFY   263"

.PP
Definition at line 2625 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_HELLO_VERIFY_REQUEST   264"

.PP
Definition at line 2626 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_SERVER_CERTIFICATE   265"

.PP
Definition at line 2627 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_SERVER_HELLO   266"

.PP
Definition at line 2628 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_SEND_SERVER_KEY_EXCHANGE   267"

.PP
Definition at line 2629 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_DTLS1_WRITE_APP_DATA_BYTES   268"

.PP
Definition at line 2630 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_CLIENT_FINISHED   105"

.PP
Definition at line 2631 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_CLIENT_HELLO   106"

.PP
Definition at line 2632 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_CLIENT_MASTER_KEY   107"

.PP
Definition at line 2633 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_SERVER_FINISHED   108"

.PP
Definition at line 2634 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_SERVER_HELLO   109"

.PP
Definition at line 2635 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_SERVER_STATIC_DH_KEY   340"

.PP
Definition at line 2636 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_GET_SERVER_VERIFY   110"

.PP
Definition at line 2637 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_I2D_SSL_SESSION   111"

.PP
Definition at line 2638 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_READ_N   112"

.PP
Definition at line 2639 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_REQUEST_CERTIFICATE   113"

.PP
Definition at line 2640 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SERVER_FINISH   239"

.PP
Definition at line 2641 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SERVER_HELLO   114"

.PP
Definition at line 2642 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SERVER_VERIFY   240"

.PP
Definition at line 2643 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_ACCEPT   115"

.PP
Definition at line 2644 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_CLIENT_HELLO   116"

.PP
Definition at line 2645 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_CONNECT   117"

.PP
Definition at line 2646 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_GET_CLIENT_HELLO   118"

.PP
Definition at line 2647 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_GET_SERVER_HELLO   119"

.PP
Definition at line 2648 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_PEEK   237"

.PP
Definition at line 2649 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_READ   120"

.PP
Definition at line 2650 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL23_WRITE   121"

.PP
Definition at line 2651 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_ACCEPT   122"

.PP
Definition at line 2652 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_CONNECT   123"

.PP
Definition at line 2653 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_ENC_INIT   124"

.PP
Definition at line 2654 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_GENERATE_KEY_MATERIAL   241"

.PP
Definition at line 2655 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_PEEK   234"

.PP
Definition at line 2656 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_READ   125"

.PP
Definition at line 2657 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_READ_INTERNAL   236"

.PP
Definition at line 2658 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_SET_CERTIFICATE   126"

.PP
Definition at line 2659 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL2_WRITE   127"

.PP
Definition at line 2660 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_ACCEPT   128"

.PP
Definition at line 2661 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_ADD_CERT_TO_BUF   296"

.PP
Definition at line 2662 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CALLBACK_CTRL   233"

.PP
Definition at line 2663 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CHANGE_CIPHER_STATE   129"

.PP
Definition at line 2664 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM   130"

.PP
Definition at line 2665 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CHECK_CLIENT_HELLO   304"

.PP
Definition at line 2666 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CHECK_FINISHED   339"

.PP
Definition at line 2667 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CLIENT_HELLO   131"

.PP
Definition at line 2668 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CONNECT   132"

.PP
Definition at line 2669 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CTRL   213"

.PP
Definition at line 2670 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_CTX_CTRL   133"

.PP
Definition at line 2671 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_DIGEST_CACHED_RECORDS   293"

.PP
Definition at line 2672 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC   292"

.PP
Definition at line 2673 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_ENC   134"

.PP
Definition at line 2674 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GENERATE_KEY_BLOCK   238"

.PP
Definition at line 2675 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GENERATE_MASTER_SECRET   388"

.PP
Definition at line 2676 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CERT_STATUS   289"

.PP
Definition at line 2678 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CERT_VERIFY   136"

.PP
Definition at line 2679 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CERTIFICATE_REQUEST   135"

.PP
Definition at line 2677 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CLIENT_CERTIFICATE   137"

.PP
Definition at line 2680 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CLIENT_HELLO   138"

.PP
Definition at line 2681 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_CLIENT_KEY_EXCHANGE   139"

.PP
Definition at line 2682 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_FINISHED   140"

.PP
Definition at line 2683 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_KEY_EXCHANGE   141"

.PP
Definition at line 2684 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_MESSAGE   142"

.PP
Definition at line 2685 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_NEW_SESSION_TICKET   283"

.PP
Definition at line 2686 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_NEXT_PROTO   306"

.PP
Definition at line 2687 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_RECORD   143"

.PP
Definition at line 2688 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_SERVER_CERTIFICATE   144"

.PP
Definition at line 2689 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_SERVER_DONE   145"

.PP
Definition at line 2690 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_GET_SERVER_HELLO   146"

.PP
Definition at line 2691 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_HANDSHAKE_MAC   285"

.PP
Definition at line 2692 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_NEW_SESSION_TICKET   287"

.PP
Definition at line 2693 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_OUTPUT_CERT_CHAIN   147"

.PP
Definition at line 2694 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_PEEK   235"

.PP
Definition at line 2695 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_READ_BYTES   148"

.PP
Definition at line 2696 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_READ_N   149"

.PP
Definition at line 2697 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_CERTIFICATE_REQUEST   150"

.PP
Definition at line 2698 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_CLIENT_CERTIFICATE   151"

.PP
Definition at line 2699 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_CLIENT_KEY_EXCHANGE   152"

.PP
Definition at line 2700 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_CLIENT_VERIFY   153"

.PP
Definition at line 2701 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_SERVER_CERTIFICATE   154"

.PP
Definition at line 2702 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_SERVER_HELLO   242"

.PP
Definition at line 2703 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SEND_SERVER_KEY_EXCHANGE   155"

.PP
Definition at line 2704 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SETUP_KEY_BLOCK   157"

.PP
Definition at line 2705 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SETUP_READ_BUFFER   156"

.PP
Definition at line 2706 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_SETUP_WRITE_BUFFER   291"

.PP
Definition at line 2707 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_WRITE_BYTES   158"

.PP
Definition at line 2708 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL3_WRITE_PENDING   159"

.PP
Definition at line 2709 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_CERT_CHAIN   318"

.PP
Definition at line 2710 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_CERT_TO_BUF   319"

.PP
Definition at line 2711 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT   298"

.PP
Definition at line 2712 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT   277"

.PP
Definition at line 2713 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT   307"

.PP
Definition at line 2714 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK   215"

.PP
Definition at line 2715 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK   216"

.PP
Definition at line 2716 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT   299"

.PP
Definition at line 2717 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_SERVERHELLO_TLSEXT   278"

.PP
Definition at line 2718 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT   308"

.PP
Definition at line 2719 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_BAD_METHOD   160"

.PP
Definition at line 2720 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_BUILD_CERT_CHAIN   332"

.PP
Definition at line 2721 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_BYTES_TO_CIPHER_LIST   161"

.PP
Definition at line 2722 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CERT_DUP   221"

.PP
Definition at line 2723 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CERT_INST   222"

.PP
Definition at line 2724 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CERT_INSTANTIATE   214"

.PP
Definition at line 2725 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CERT_NEW   162"

.PP
Definition at line 2726 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CHECK_PRIVATE_KEY   163"

.PP
Definition at line 2727 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT   280"

.PP
Definition at line 2728 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG   279"

.PP
Definition at line 2729 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CIPHER_PROCESS_RULESTR   230"

.PP
Definition at line 2730 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CIPHER_STRENGTH_SORT   231"

.PP
Definition at line 2731 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CLEAR   164"

.PP
Definition at line 2732 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD   165"

.PP
Definition at line 2733 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CONF_CMD   334"

.PP
Definition at line 2734 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CREATE_CIPHER_LIST   166"

.PP
Definition at line 2735 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTRL   232"

.PP
Definition at line 2736 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_CHECK_PRIVATE_KEY   168"

.PP
Definition at line 2737 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_MAKE_PROFILES   309"

.PP
Definition at line 2738 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_NEW   169"

.PP
Definition at line 2739 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_CIPHER_LIST   269"

.PP
Definition at line 2740 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE   290"

.PP
Definition at line 2741 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_PURPOSE   226"

.PP
Definition at line 2742 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT   219"

.PP
Definition at line 2743 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_SSL_VERSION   170"

.PP
Definition at line 2744 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_SET_TRUST   229"

.PP
Definition at line 2745 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_CERTIFICATE   171"

.PP
Definition at line 2746 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1   172"

.PP
Definition at line 2747 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_CERTIFICATE_CHAIN_FILE   220"

.PP
Definition at line 2748 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_CERTIFICATE_FILE   173"

.PP
Definition at line 2749 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_PRIVATEKEY   174"

.PP
Definition at line 2750 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1   175"

.PP
Definition at line 2751 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE   176"

.PP
Definition at line 2752 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT   272"

.PP
Definition at line 2753 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY   177"

.PP
Definition at line 2754 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1   178"

.PP
Definition at line 2755 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE   179"

.PP
Definition at line 2756 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_SERVERINFO   336"

.PP
Definition at line 2757 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_CTX_USE_SERVERINFO_FILE   337"

.PP
Definition at line 2758 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_DO_HANDSHAKE   180"

.PP
Definition at line 2759 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_NEW_SESSION   181"

.PP
Definition at line 2760 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_PREV_SESSION   217"

.PP
Definition at line 2761 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_SERVER_CERT_INDEX   322"

.PP
Definition at line 2762 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_SERVER_SEND_CERT   182"

.PP
Definition at line 2763 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_SERVER_SEND_PKEY   317"

.PP
Definition at line 2764 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_GET_SIGN_PKEY   183"

.PP
Definition at line 2765 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_INIT_WBIO_BUFFER   184"

.PP
Definition at line 2766 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_LOAD_CLIENT_CA_FILE   185"

.PP
Definition at line 2767 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_NEW   186"

.PP
Definition at line 2768 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT   300"

.PP
Definition at line 2769 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT   302"

.PP
Definition at line 2770 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT   310"

.PP
Definition at line 2771 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT   301"

.PP
Definition at line 2772 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT   303"

.PP
Definition at line 2773 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT   311"

.PP
Definition at line 2774 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PEEK   270"

.PP
Definition at line 2775 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PREPARE_CLIENTHELLO_TLSEXT   281"

.PP
Definition at line 2776 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_PREPARE_SERVERHELLO_TLSEXT   282"

.PP
Definition at line 2777 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_READ   223"

.PP
Definition at line 2778 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_RSA_PRIVATE_DECRYPT   187"

.PP
Definition at line 2779 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_RSA_PUBLIC_ENCRYPT   188"

.PP
Definition at line 2780 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT   320"

.PP
Definition at line 2781 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT   321"

.PP
Definition at line 2782 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SESS_CERT_NEW   225"

.PP
Definition at line 2787 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SESSION_DUP   348"

.PP
Definition at line 2783 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SESSION_NEW   189"

.PP
Definition at line 2784 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SESSION_PRINT_FP   190"

.PP
Definition at line 2785 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SESSION_SET1_ID_CONTEXT   312"

.PP
Definition at line 2786 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_CERT   191"

.PP
Definition at line 2788 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_CIPHER_LIST   271"

.PP
Definition at line 2789 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_FD   192"

.PP
Definition at line 2790 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_PKEY   193"

.PP
Definition at line 2791 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_PURPOSE   227"

.PP
Definition at line 2792 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_RFD   194"

.PP
Definition at line 2793 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_SESSION   195"

.PP
Definition at line 2794 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_SESSION_ID_CONTEXT   218"

.PP
Definition at line 2795 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_SESSION_TICKET_EXT   294"

.PP
Definition at line 2796 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_TRUST   228"

.PP
Definition at line 2797 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SET_WFD   196"

.PP
Definition at line 2798 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SHUTDOWN   224"

.PP
Definition at line 2799 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_SRP_CTX_INIT   313"

.PP
Definition at line 2800 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_UNDEFINED_CONST_FUNCTION   243"

.PP
Definition at line 2801 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_UNDEFINED_FUNCTION   197"

.PP
Definition at line 2802 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_UNDEFINED_VOID_FUNCTION   244"

.PP
Definition at line 2803 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_CERTIFICATE   198"

.PP
Definition at line 2804 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_CERTIFICATE_ASN1   199"

.PP
Definition at line 2805 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_CERTIFICATE_FILE   200"

.PP
Definition at line 2806 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_PRIVATEKEY   201"

.PP
Definition at line 2807 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_PRIVATEKEY_ASN1   202"

.PP
Definition at line 2808 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_PRIVATEKEY_FILE   203"

.PP
Definition at line 2809 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_PSK_IDENTITY_HINT   273"

.PP
Definition at line 2810 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_RSAPRIVATEKEY   204"

.PP
Definition at line 2811 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1   205"

.PP
Definition at line 2812 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_USE_RSAPRIVATEKEY_FILE   206"

.PP
Definition at line 2813 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_VERIFY_CERT_CHAIN   207"

.PP
Definition at line 2814 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_SSL_WRITE   208"

.PP
Definition at line 2815 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS12_CHECK_PEER_SIGALG   333"

.PP
Definition at line 2816 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_CERT_VERIFY_MAC   286"

.PP
Definition at line 2817 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_CHANGE_CIPHER_STATE   209"

.PP
Definition at line 2818 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_CHECK_SERVERHELLO_TLSEXT   274"

.PP
Definition at line 2819 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_ENC   210"

.PP
Definition at line 2820 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_EXPORT_KEYING_MATERIAL   314"

.PP
Definition at line 2821 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_GET_CURVELIST   338"

.PP
Definition at line 2822 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_HEARTBEAT   315"

.PP
Definition at line 2823 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_PREPARE_CLIENTHELLO_TLSEXT   275"

.PP
Definition at line 2824 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_PREPARE_SERVERHELLO_TLSEXT   276"

.PP
Definition at line 2825 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_PRF   284"

.PP
Definition at line 2826 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_SET_SERVER_SIGALGS   335"

.PP
Definition at line 2828 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_TLS1_SETUP_KEY_BLOCK   211"

.PP
Definition at line 2827 of file ssl/ssl\&.h\&.
.SS "#define SSL_F_WRITE_PENDING   212"

.PP
Definition at line 2829 of file ssl/ssl\&.h\&.
.SS "#define SSL_FILETYPE_ASN1   \fBX509_FILETYPE_ASN1\fP"

.PP
Definition at line 365 of file ssl/ssl\&.h\&.
.SS "#define SSL_FILETYPE_PEM   \fBX509_FILETYPE_PEM\fP"

.PP
Definition at line 366 of file ssl/ssl\&.h\&.
.SS "#define SSL_get0_certificate_types(s, clist)   \fBSSL_ctrl\fP(s, \fBSSL_CTRL_GET_CLIENT_CERT_TYPES\fP, 0, (char *)clist)"

.SS "#define SSL_get0_chain_certs(ctx, px509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_GET_CHAIN_CERTS\fP,0,px509)"

.SS "#define SSL_get0_ec_point_formats(s, plst)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_EC_POINT_FORMATS\fP,0,(char *)plst)"

.SS "#define SSL_get0_raw_cipherlist(s, plst)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_RAW_CIPHERLIST\fP,0,(char *)plst)"

.SS "#define SSL_get0_session   \fBSSL_get_session\fP/* just peek at pointer */"

.PP
Definition at line 2444 of file ssl/ssl\&.h\&.
.SS "#define SSL_get1_curves(ctx, s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_GET_CURVES\fP,0,(char *)s)"

.SS "#define SSL_get_app_data(s)   (\fBSSL_get_ex_data\fP(s,0))"

.PP
Definition at line 1709 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_cipher(s)   \fBSSL_CIPHER_get_name\fP(\fBSSL_get_current_cipher\fP(s))"

.PP
Definition at line 1792 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_cipher_bits(s, np)   \fBSSL_CIPHER_get_bits\fP(\fBSSL_get_current_cipher\fP(s),np)"

.PP
Definition at line 1794 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_cipher_name(s)   \fBSSL_CIPHER_get_name\fP(\fBSSL_get_current_cipher\fP(s))"

.PP
Definition at line 1798 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_cipher_version(s)   \fBSSL_CIPHER_get_version\fP(\fBSSL_get_current_cipher\fP(s))"

.PP
Definition at line 1796 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_max_cert_list(ssl)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_GET_MAX_CERT_LIST\fP,0,NULL)"

.PP
Definition at line 2498 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_mode(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_MODE\fP,0,NULL)"

.PP
Definition at line 808 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_options(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_OPTIONS\fP,0,NULL)"

.PP
Definition at line 795 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_peer_signature_nid(s, pn)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_PEER_SIGNATURE_NID\fP,0,pn)"

.SS "#define SSL_get_secure_renegotiation_support(ssl)   \fBSSL_ctrl\fP((ssl), \fBSSL_CTRL_GET_RI_SUPPORT\fP, 0, NULL)"

.PP
Definition at line 817 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_server_tmp_key(s, pk)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_SERVER_TMP_KEY\fP,0,pk)"

.SS "#define SSL_get_shared_curve(s, n)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_GET_SHARED_CURVE\fP,n,NULL)"

.SS "#define SSL_get_state(\fBa\fP)   \fBSSL_state\fP(\fBa\fP)"

.PP
Definition at line 1747 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_time(\fBa\fP)   \fBSSL_SESSION_get_time\fP(\fBa\fP)"

.PP
Definition at line 1800 of file ssl/ssl\&.h\&.
.SS "#define SSL_get_timeout(\fBa\fP)   \fBSSL_SESSION_get_timeout\fP(\fBa\fP)"

.PP
Definition at line 1802 of file ssl/ssl\&.h\&.
.SS "#define SSL_heartbeat(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_TLS_EXT_SEND_HEARTBEAT\fP,0,NULL)"

.PP
Definition at line 821 of file ssl/ssl\&.h\&.
.SS "#define SSL_in_accept_init(\fBa\fP)   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_ACCEPT\fP)"

.PP
Definition at line 1752 of file ssl/ssl\&.h\&.
.SS "#define SSL_in_before(\fBa\fP)   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_BEFORE\fP)"

.PP
Definition at line 1750 of file ssl/ssl\&.h\&.
.SS "#define SSL_in_connect_init(\fBa\fP)   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_CONNECT\fP)"

.PP
Definition at line 1751 of file ssl/ssl\&.h\&.
.SS "#define SSL_in_init(\fBa\fP)   (\fBSSL_state\fP(\fBa\fP)&\fBSSL_ST_INIT\fP)"

.PP
Definition at line 1749 of file ssl/ssl\&.h\&.
.SS "#define SSL_is_init_finished(\fBa\fP)   (\fBSSL_state\fP(\fBa\fP) == \fBSSL_ST_OK\fP)"

.PP
Definition at line 1748 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAC_FLAG_READ_MAC_STREAM   1"

.PP
Definition at line 1417 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAC_FLAG_WRITE_MAC_STREAM   2"

.PP
Definition at line 1418 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_BUF_FREELIST_LEN_DEFAULT   32"

.PP
Definition at line 1112 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_CERT_LIST_DEFAULT   1024*100"

.PP
Definition at line 884 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_KEY_ARG_LENGTH   8"

.PP
Definition at line 223 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_KRB5_PRINCIPAL_LENGTH   256"

.PP
Definition at line 217 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_MASTER_KEY_LENGTH   48"

.PP
Definition at line 224 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_SID_CTX_LENGTH   32"

.PP
Definition at line 220 of file ssl/ssl\&.h\&.
.SS "#define SSL_MAX_SSL_SESSION_ID_LENGTH   32"

.PP
Definition at line 219 of file ssl/ssl\&.h\&.
.SS "#define SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES   (512/8)"

.PP
Definition at line 222 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER   0x00000002L"

.PP
Definition at line 687 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_AUTO_RETRY   0x00000004L"

.PP
Definition at line 691 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_ENABLE_PARTIAL_WRITE   0x00000001L"

.PP
Definition at line 680 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_NO_AUTO_CHAIN   0x00000008L"

.PP
Definition at line 693 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_RELEASE_BUFFERS   0x00000010L"

.PP
Definition at line 699 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_SEND_CLIENTHELLO_TIME   0x00000020L"

.PP
Definition at line 705 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_SEND_FALLBACK_SCSV   0x00000080L"

.PP
Definition at line 715 of file ssl/ssl\&.h\&.
.SS "#define SSL_MODE_SEND_SERVERHELLO_TIME   0x00000040L"

.PP
Definition at line 706 of file ssl/ssl\&.h\&.
.SS "#define SSL_need_tmp_RSA(ssl)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_NEED_TMP_RSA\fP,0,NULL)"

.SS "#define SSL_NOTHING   1"

.PP
Definition at line 1406 of file ssl/ssl\&.h\&.
.SS "#define SSL_num_renegotiations(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_NUM_RENEGOTIATIONS\fP,0,NULL)"

.SS "#define SSL_OP_ALL   0x80000BFFL"

.PP
Definition at line 609 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION   0x00040000L"

.PP
Definition at line 625 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_CIPHER_SERVER_PREFERENCE   0x00400000L"

.PP
Definition at line 635 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_CISCO_ANYCONNECT   0x00008000L"

.PP
Definition at line 618 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_COOKIE_EXCHANGE   0x00002000L"

.PP
Definition at line 614 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_CRYPTOPRO_TLSEXT_BUG   0x80000000L"

.PP
Definition at line 674 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS   0x00000800L"

.PP
Definition at line 603 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_EPHEMERAL_RSA   0x0"

.PP
Definition at line 631 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_LEGACY_SERVER_CONNECT   0x00000004L"

.PP
Definition at line 581 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER   0x00000020L"

.PP
Definition at line 584 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_MICROSOFT_SESS_ID_BUG   0x00000001L"

.PP
Definition at line 578 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_MSIE_SSLV2_RSA_PADDING   0x0"

.PP
Definition at line 591 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NETSCAPE_CA_DN_BUG   0x20000000L"

.PP
Definition at line 667 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NETSCAPE_CHALLENGE_BUG   0x00000002L"

.PP
Definition at line 579 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG   0x40000000L"

.PP
Definition at line 668 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG   0x00000008L"

.PP
Definition at line 582 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_COMPRESSION   0x00020000L"

.PP
Definition at line 623 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_DTLSv1   0x04000000L"

.PP
Definition at line 650 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_DTLSv1_2   0x08000000L"

.PP
Definition at line 651 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_QUERY_MTU   0x00001000L"

.PP
Definition at line 612 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION   0x00010000L"

.PP
Definition at line 621 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_SSL_MASK"
\fBValue:\fP
.PP
.nf
(SSL_OP_NO_SSLv2|SSL_OP_NO_SSLv3|\
        SSL_OP_NO_TLSv1|SSL_OP_NO_TLSv1_1|SSL_OP_NO_TLSv1_2)
.fi
.PP
Definition at line 653 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_SSLv2   0x01000000L"

.PP
Definition at line 644 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_SSLv3   0x02000000L"

.PP
Definition at line 645 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_TICKET   0x00004000L"

.PP
Definition at line 616 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_TLSv1   0x04000000L"

.PP
Definition at line 646 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_TLSv1_1   0x10000000L"

.PP
Definition at line 648 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_NO_TLSv1_2   0x08000000L"

.PP
Definition at line 647 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_PKCS1_CHECK_1   0x0"

.PP
Definition at line 664 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_PKCS1_CHECK_2   0x0"

.PP
Definition at line 665 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_SAFARI_ECDHE_ECDSA_BUG   0x00000040L"

.PP
Definition at line 585 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_SINGLE_DH_USE   0x00100000L"

.PP
Definition at line 629 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_SINGLE_ECDH_USE   0x00080000L"

.PP
Definition at line 627 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_SSLEAY_080_CLIENT_DH_BUG   0x00000080L"

.PP
Definition at line 586 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG   0x0"

.PP
Definition at line 593 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_TLS_BLOCK_PADDING_BUG   0x00000200L"

.PP
Definition at line 588 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_TLS_D5_BUG   0x00000100L"

.PP
Definition at line 587 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_TLS_ROLLBACK_BUG   0x00800000L"

.PP
Definition at line 642 of file ssl/ssl\&.h\&.
.SS "#define SSL_OP_TLSEXT_PADDING   0x00000010L"

.PP
Definition at line 583 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_APP_DATA_IN_HANDSHAKE   100"

.PP
Definition at line 2832 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT   272"

.PP
Definition at line 2833 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_ALERT_RECORD   101"

.PP
Definition at line 2834 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_AUTHENTICATION_TYPE   102"

.PP
Definition at line 2835 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_CHANGE_CIPHER_SPEC   103"

.PP
Definition at line 2836 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_CHECKSUM   104"

.PP
Definition at line 2837 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DATA   390"

.PP
Definition at line 2838 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DATA_RETURNED_BY_CALLBACK   106"

.PP
Definition at line 2839 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DECOMPRESSION   107"

.PP
Definition at line 2840 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_G_LENGTH   108"

.PP
Definition at line 2841 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_G_VALUE   375"

.PP
Definition at line 2842 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_P_LENGTH   110"

.PP
Definition at line 2845 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_P_VALUE   395"

.PP
Definition at line 2846 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_PUB_KEY_LENGTH   109"

.PP
Definition at line 2843 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DH_PUB_KEY_VALUE   393"

.PP
Definition at line 2844 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DIGEST_LENGTH   111"

.PP
Definition at line 2847 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_DSA_SIGNATURE   112"

.PP
Definition at line 2848 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_ECC_CERT   304"

.PP
Definition at line 2849 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_ECDSA_SIGNATURE   305"

.PP
Definition at line 2850 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_ECPOINT   306"

.PP
Definition at line 2851 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_HANDSHAKE_LENGTH   332"

.PP
Definition at line 2852 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_HELLO_REQUEST   105"

.PP
Definition at line 2853 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_LENGTH   271"

.PP
Definition at line 2854 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_MAC_DECODE   113"

.PP
Definition at line 2855 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_MAC_LENGTH   333"

.PP
Definition at line 2856 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_MESSAGE_TYPE   114"

.PP
Definition at line 2857 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_PACKET_LENGTH   115"

.PP
Definition at line 2858 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_PROTOCOL_VERSION_NUMBER   116"

.PP
Definition at line 2859 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_PSK_IDENTITY_HINT_LENGTH   316"

.PP
Definition at line 2860 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RESPONSE_ARGUMENT   117"

.PP
Definition at line 2861 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RSA_DECRYPT   118"

.PP
Definition at line 2862 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RSA_E_LENGTH   120"

.PP
Definition at line 2864 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RSA_ENCRYPT   119"

.PP
Definition at line 2863 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RSA_MODULUS_LENGTH   121"

.PP
Definition at line 2865 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_RSA_SIGNATURE   122"

.PP
Definition at line 2866 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SIGNATURE   123"

.PP
Definition at line 2867 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_A_LENGTH   347"

.PP
Definition at line 2868 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_B_LENGTH   348"

.PP
Definition at line 2869 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_G_LENGTH   349"

.PP
Definition at line 2870 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_N_LENGTH   350"

.PP
Definition at line 2871 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_PARAMETERS   371"

.PP
Definition at line 2872 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRP_S_LENGTH   351"

.PP
Definition at line 2873 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRTP_MKI_VALUE   352"

.PP
Definition at line 2874 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST   353"

.PP
Definition at line 2875 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SSL_FILETYPE   124"

.PP
Definition at line 2876 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_SSL_SESSION_ID_LENGTH   125"

.PP
Definition at line 2877 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_STATE   126"

.PP
Definition at line 2878 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_VALUE   384"

.PP
Definition at line 2879 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BAD_WRITE_RETRY   127"

.PP
Definition at line 2880 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BIO_NOT_SET   128"

.PP
Definition at line 2881 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BLOCK_CIPHER_PAD_IS_WRONG   129"

.PP
Definition at line 2882 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_BN_LIB   130"

.PP
Definition at line 2883 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CA_DN_LENGTH_MISMATCH   131"

.PP
Definition at line 2884 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CA_DN_TOO_LONG   132"

.PP
Definition at line 2885 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CCS_RECEIVED_EARLY   133"

.PP
Definition at line 2886 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CERT_CB_ERROR   377"

.PP
Definition at line 2888 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CERT_LENGTH_MISMATCH   135"

.PP
Definition at line 2889 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CERTIFICATE_VERIFY_FAILED   134"

.PP
Definition at line 2887 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CHALLENGE_IS_DIFFERENT   136"

.PP
Definition at line 2890 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CIPHER_CODE_WRONG_LENGTH   137"

.PP
Definition at line 2891 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CIPHER_OR_HASH_UNAVAILABLE   138"

.PP
Definition at line 2892 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CIPHER_TABLE_SRC_ERROR   139"

.PP
Definition at line 2893 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CLIENTHELLO_TLSEXT   226"

.PP
Definition at line 2894 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COMPRESSED_LENGTH_TOO_LONG   140"

.PP
Definition at line 2895 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COMPRESSION_DISABLED   343"

.PP
Definition at line 2896 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COMPRESSION_FAILURE   141"

.PP
Definition at line 2897 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE   307"

.PP
Definition at line 2898 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COMPRESSION_LIBRARY_ERROR   142"

.PP
Definition at line 2899 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CONNECTION_ID_IS_DIFFERENT   143"

.PP
Definition at line 2900 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_CONNECTION_TYPE_NOT_SET   144"

.PP
Definition at line 2901 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_COOKIE_MISMATCH   308"

.PP
Definition at line 2902 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DATA_BETWEEN_CCS_AND_FINISHED   145"

.PP
Definition at line 2903 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DATA_LENGTH_TOO_LONG   146"

.PP
Definition at line 2904 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DECRYPTION_FAILED   147"

.PP
Definition at line 2905 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC   281"

.PP
Definition at line 2906 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DH_KEY_TOO_SMALL   372"

.PP
Definition at line 2907 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG   148"

.PP
Definition at line 2908 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DIGEST_CHECK_FAILED   149"

.PP
Definition at line 2909 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DTLS_MESSAGE_TOO_BIG   334"

.PP
Definition at line 2910 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_DUPLICATE_COMPRESSION_ID   309"

.PP
Definition at line 2911 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECC_CERT_NOT_FOR_KEY_AGREEMENT   317"

.PP
Definition at line 2912 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECC_CERT_NOT_FOR_SIGNING   318"

.PP
Definition at line 2913 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECC_CERT_SHOULD_HAVE_RSA_SIGNATURE   322"

.PP
Definition at line 2914 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECC_CERT_SHOULD_HAVE_SHA1_SIGNATURE   323"

.PP
Definition at line 2915 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE   374"

.PP
Definition at line 2916 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ECGROUP_TOO_LARGE_FOR_CIPHER   310"

.PP
Definition at line 2917 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST   354"

.PP
Definition at line 2918 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ENCRYPTED_LENGTH_TOO_LONG   150"

.PP
Definition at line 2919 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ERROR_GENERATING_TMP_RSA_KEY   282"

.PP
Definition at line 2920 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST   151"

.PP
Definition at line 2921 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_EXCESSIVE_MESSAGE_SIZE   152"

.PP
Definition at line 2922 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_EXTRA_DATA_IN_MESSAGE   153"

.PP
Definition at line 2923 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_GOT_A_FIN_BEFORE_A_CCS   154"

.PP
Definition at line 2924 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_GOT_NEXT_PROTO_BEFORE_A_CCS   355"

.PP
Definition at line 2925 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_GOT_NEXT_PROTO_WITHOUT_EXTENSION   356"

.PP
Definition at line 2926 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_HTTP_REQUEST   156"

.PP
Definition at line 2928 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_HTTPS_PROXY_REQUEST   155"

.PP
Definition at line 2927 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ILLEGAL_PADDING   283"

.PP
Definition at line 2929 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ILLEGAL_SUITEB_DIGEST   380"

.PP
Definition at line 2930 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INAPPROPRIATE_FALLBACK   373"

.PP
Definition at line 2931 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INCONSISTENT_COMPRESSION   340"

.PP
Definition at line 2932 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_CHALLENGE_LENGTH   158"

.PP
Definition at line 2933 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_COMMAND   280"

.PP
Definition at line 2934 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_COMPRESSION_ALGORITHM   341"

.PP
Definition at line 2935 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_NULL_CMD_NAME   385"

.PP
Definition at line 2936 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_PURPOSE   278"

.PP
Definition at line 2937 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_SERVERINFO_DATA   388"

.PP
Definition at line 2938 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_SRP_USERNAME   357"

.PP
Definition at line 2939 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_STATUS_RESPONSE   328"

.PP
Definition at line 2940 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_TICKET_KEYS_LENGTH   325"

.PP
Definition at line 2941 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_INVALID_TRUST   279"

.PP
Definition at line 2942 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KEY_ARG_TOO_LONG   284"

.PP
Definition at line 2943 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5   285"

.PP
Definition at line 2944 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_C_CC_PRINC   286"

.PP
Definition at line 2945 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_C_GET_CRED   287"

.PP
Definition at line 2946 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_C_INIT   288"

.PP
Definition at line 2947 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_C_MK_REQ   289"

.PP
Definition at line 2948 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_BAD_TICKET   290"

.PP
Definition at line 2949 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_INIT   291"

.PP
Definition at line 2950 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_RD_REQ   292"

.PP
Definition at line 2951 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_TKT_EXPIRED   293"

.PP
Definition at line 2952 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_TKT_NYV   294"

.PP
Definition at line 2953 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_KRB5_S_TKT_SKEW   295"

.PP
Definition at line 2954 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_LENGTH_MISMATCH   159"

.PP
Definition at line 2955 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_LENGTH_TOO_SHORT   160"

.PP
Definition at line 2956 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_LIBRARY_BUG   274"

.PP
Definition at line 2957 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_LIBRARY_HAS_NO_CIPHERS   161"

.PP
Definition at line 2958 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MESSAGE_TOO_LONG   296"

.PP
Definition at line 2959 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_DH_DSA_CERT   162"

.PP
Definition at line 2960 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_DH_KEY   163"

.PP
Definition at line 2961 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_DH_RSA_CERT   164"

.PP
Definition at line 2962 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_DSA_SIGNING_CERT   165"

.PP
Definition at line 2963 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_ECDH_CERT   382"

.PP
Definition at line 2964 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_ECDSA_SIGNING_CERT   381"

.PP
Definition at line 2965 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_EXPORT_TMP_DH_KEY   166"

.PP
Definition at line 2966 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_EXPORT_TMP_RSA_KEY   167"

.PP
Definition at line 2967 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_RSA_CERTIFICATE   168"

.PP
Definition at line 2968 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_RSA_ENCRYPTING_CERT   169"

.PP
Definition at line 2969 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_RSA_SIGNING_CERT   170"

.PP
Definition at line 2970 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_SRP_PARAM   358"

.PP
Definition at line 2971 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_TMP_DH_KEY   171"

.PP
Definition at line 2972 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_TMP_ECDH_KEY   311"

.PP
Definition at line 2973 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_TMP_RSA_KEY   172"

.PP
Definition at line 2974 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_TMP_RSA_PKEY   173"

.PP
Definition at line 2975 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MISSING_VERIFY_MESSAGE   174"

.PP
Definition at line 2976 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_MULTIPLE_SGC_RESTARTS   346"

.PP
Definition at line 2977 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CERTIFICATE_ASSIGNED   177"

.PP
Definition at line 2980 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CERTIFICATE_RETURNED   178"

.PP
Definition at line 2981 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CERTIFICATE_SET   179"

.PP
Definition at line 2982 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CERTIFICATE_SPECIFIED   180"

.PP
Definition at line 2983 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CERTIFICATES_RETURNED   176"

.PP
Definition at line 2979 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CIPHER_LIST   184"

.PP
Definition at line 2987 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CIPHER_MATCH   185"

.PP
Definition at line 2988 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CIPHERS_AVAILABLE   181"

.PP
Definition at line 2984 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CIPHERS_PASSED   182"

.PP
Definition at line 2985 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CIPHERS_SPECIFIED   183"

.PP
Definition at line 2986 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CLIENT_CERT_METHOD   331"

.PP
Definition at line 2989 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_CLIENT_CERT_RECEIVED   186"

.PP
Definition at line 2990 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_COMPRESSION_SPECIFIED   187"

.PP
Definition at line 2991 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER   330"

.PP
Definition at line 2992 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_METHOD_SPECIFIED   188"

.PP
Definition at line 2993 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_PEM_EXTENSIONS   389"

.PP
Definition at line 2994 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_PRIVATE_KEY_ASSIGNED   190"

.PP
Definition at line 2996 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_PRIVATEKEY   189"

.PP
Definition at line 2995 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_PROTOCOLS_AVAILABLE   191"

.PP
Definition at line 2997 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_PUBLICKEY   192"

.PP
Definition at line 2998 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_RENEGOTIATION   339"

.PP
Definition at line 2999 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_REQUIRED_DIGEST   324"

.PP
Definition at line 3000 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_SHARED_CIPHER   193"

.PP
Definition at line 3001 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_SHARED_SIGATURE_ALGORITHMS   376"

.PP
Definition at line 3002 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_SRTP_PROFILES   359"

.PP
Definition at line 3003 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NO_VERIFY_CALLBACK   194"

.PP
Definition at line 3004 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NON_SSLV2_INITIAL_PACKET   175"

.PP
Definition at line 2978 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NULL_SSL_CTX   195"

.PP
Definition at line 3005 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_NULL_SSL_METHOD_PASSED   196"

.PP
Definition at line 3006 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED   197"

.PP
Definition at line 3007 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED   344"

.PP
Definition at line 3008 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ONLY_DTLS_1_2_ALLOWED_IN_SUITEB_MODE   387"

.PP
Definition at line 3009 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ONLY_TLS_1_2_ALLOWED_IN_SUITEB_MODE   379"

.PP
Definition at line 3010 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_ONLY_TLS_ALLOWED_IN_FIPS_MODE   297"

.PP
Definition at line 3011 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_OPAQUE_PRF_INPUT_TOO_LONG   327"

.PP
Definition at line 3012 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PACKET_LENGTH_TOO_LONG   198"

.PP
Definition at line 3013 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PARSE_TLSEXT   227"

.PP
Definition at line 3014 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PATH_TOO_LONG   270"

.PP
Definition at line 3015 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE   199"

.PP
Definition at line 3016 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_ERROR   200"

.PP
Definition at line 3017 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_ERROR_CERTIFICATE   201"

.PP
Definition at line 3018 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_ERROR_NO_CERTIFICATE   202"

.PP
Definition at line 3019 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_ERROR_NO_CIPHER   203"

.PP
Definition at line 3020 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE   204"

.PP
Definition at line 3021 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEM_NAME_BAD_PREFIX   391"

.PP
Definition at line 3022 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PEM_NAME_TOO_SHORT   392"

.PP
Definition at line 3023 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PRE_MAC_LENGTH_TOO_LONG   205"

.PP
Definition at line 3024 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PROBLEMS_MAPPING_CIPHER_FUNCTIONS   206"

.PP
Definition at line 3025 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PROTOCOL_IS_SHUTDOWN   207"

.PP
Definition at line 3026 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PSK_IDENTITY_NOT_FOUND   223"

.PP
Definition at line 3027 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PSK_NO_CLIENT_CB   224"

.PP
Definition at line 3028 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PSK_NO_SERVER_CB   225"

.PP
Definition at line 3029 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PUBLIC_KEY_ENCRYPT_ERROR   208"

.PP
Definition at line 3030 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PUBLIC_KEY_IS_NOT_RSA   209"

.PP
Definition at line 3031 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_PUBLIC_KEY_NOT_RSA   210"

.PP
Definition at line 3032 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_READ_BIO_NOT_SET   211"

.PP
Definition at line 3033 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_READ_TIMEOUT_EXPIRED   312"

.PP
Definition at line 3034 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_READ_WRONG_PACKET_TYPE   212"

.PP
Definition at line 3035 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RECORD_LENGTH_MISMATCH   213"

.PP
Definition at line 3036 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RECORD_TOO_LARGE   214"

.PP
Definition at line 3037 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RECORD_TOO_SMALL   298"

.PP
Definition at line 3038 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RENEGOTIATE_EXT_TOO_LONG   335"

.PP
Definition at line 3039 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RENEGOTIATION_ENCODING_ERR   336"

.PP
Definition at line 3040 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_RENEGOTIATION_MISMATCH   337"

.PP
Definition at line 3041 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_REQUIRED_CIPHER_MISSING   215"

.PP
Definition at line 3042 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_REQUIRED_COMPRESSSION_ALGORITHM_MISSING   342"

.PP
Definition at line 3043 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_REUSE_CERT_LENGTH_NOT_ZERO   216"

.PP
Definition at line 3044 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_REUSE_CERT_TYPE_NOT_ZERO   217"

.PP
Definition at line 3045 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_REUSE_CIPHER_LIST_NOT_ZERO   218"

.PP
Definition at line 3046 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING   345"

.PP
Definition at line 3047 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SERVERHELLO_TLSEXT   275"

.PP
Definition at line 3048 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED   277"

.PP
Definition at line 3049 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SHORT_READ   219"

.PP
Definition at line 3050 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SHUTDOWN_WHILE_IN_INIT   407"

.PP
Definition at line 3051 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SIGNATURE_ALGORITHMS_ERROR   360"

.PP
Definition at line 3052 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE   220"

.PP
Definition at line 3053 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SRP_A_CALC   361"

.PP
Definition at line 3054 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES   362"

.PP
Definition at line 3055 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG   363"

.PP
Definition at line 3056 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE   364"

.PP
Definition at line 3057 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL23_DOING_SESSION_ID_REUSE   221"

.PP
Definition at line 3058 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL2_CONNECTION_ID_TOO_LONG   299"

.PP
Definition at line 3059 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL3_EXT_INVALID_ECPOINTFORMAT   321"

.PP
Definition at line 3060 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL3_EXT_INVALID_SERVERNAME   319"

.PP
Definition at line 3061 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE   320"

.PP
Definition at line 3062 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL3_SESSION_ID_TOO_LONG   300"

.PP
Definition at line 3063 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL3_SESSION_ID_TOO_SHORT   222"

.PP
Definition at line 3064 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION   228"

.PP
Definition at line 3076 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_HANDSHAKE_FAILURE   229"

.PP
Definition at line 3077 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS   230"

.PP
Definition at line 3078 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_SESSION_ID_CALLBACK_FAILED   301"

.PP
Definition at line 3079 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_SESSION_ID_CONFLICT   302"

.PP
Definition at line 3080 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG   273"

.PP
Definition at line 3081 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH   303"

.PP
Definition at line 3082 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSL_SESSION_ID_IS_DIFFERENT   231"

.PP
Definition at line 3083 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_BAD_CERTIFICATE   1042"

.PP
Definition at line 3065 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_BAD_RECORD_MAC   1020"

.PP
Definition at line 3066 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED   1045"

.PP
Definition at line 3067 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED   1044"

.PP
Definition at line 3068 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN   1046"

.PP
Definition at line 3069 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE   1030"

.PP
Definition at line 3070 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE   1040"

.PP
Definition at line 3071 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER   1047"

.PP
Definition at line 3072 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_NO_CERTIFICATE   1041"

.PP
Definition at line 3073 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE   1010"

.PP
Definition at line 3074 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE   1043"

.PP
Definition at line 3075 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER   232"

.PP
Definition at line 3102 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT   365"

.PP
Definition at line 3103 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_HEARTBEAT_PENDING   366"

.PP
Definition at line 3104 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_ILLEGAL_EXPORTER_LABEL   367"

.PP
Definition at line 3105 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST   157"

.PP
Definition at line 3106 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST   233"

.PP
Definition at line 3107 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG   234"

.PP
Definition at line 3108 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_ACCESS_DENIED   1049"

.PP
Definition at line 3084 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_DECODE_ERROR   1050"

.PP
Definition at line 3085 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_DECRYPT_ERROR   1051"

.PP
Definition at line 3087 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_DECRYPTION_FAILED   1021"

.PP
Definition at line 3086 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION   1060"

.PP
Definition at line 3088 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK   1086"

.PP
Definition at line 3089 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY   1071"

.PP
Definition at line 3090 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_INTERNAL_ERROR   1080"

.PP
Definition at line 3091 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_NO_RENEGOTIATION   1100"

.PP
Definition at line 3092 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_PROTOCOL_VERSION   1070"

.PP
Definition at line 3093 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_RECORD_OVERFLOW   1022"

.PP
Definition at line 3094 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_UNKNOWN_CA   1048"

.PP
Definition at line 3095 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_ALERT_USER_CANCELLED   1090"

.PP
Definition at line 3096 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE   1114"

.PP
Definition at line 3097 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE   1113"

.PP
Definition at line 3098 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE   1111"

.PP
Definition at line 3099 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_UNRECOGNIZED_NAME   1112"

.PP
Definition at line 3100 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TLSV1_UNSUPPORTED_EXTENSION   1110"

.PP
Definition at line 3101 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER   235"

.PP
Definition at line 3109 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_DECODE_DH_CERTS   236"

.PP
Definition at line 3110 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_DECODE_ECDH_CERTS   313"

.PP
Definition at line 3111 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_EXTRACT_PUBLIC_KEY   237"

.PP
Definition at line 3112 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_FIND_DH_PARAMETERS   238"

.PP
Definition at line 3113 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS   314"

.PP
Definition at line 3114 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS   239"

.PP
Definition at line 3115 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_FIND_SSL_METHOD   240"

.PP
Definition at line 3116 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_LOAD_SSL2_MD5_ROUTINES   241"

.PP
Definition at line 3117 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES   242"

.PP
Definition at line 3118 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES   243"

.PP
Definition at line 3119 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNEXPECTED_MESSAGE   244"

.PP
Definition at line 3120 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNEXPECTED_RECORD   245"

.PP
Definition at line 3121 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNINITIALIZED   276"

.PP
Definition at line 3122 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_ALERT_TYPE   246"

.PP
Definition at line 3123 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_CERTIFICATE_TYPE   247"

.PP
Definition at line 3124 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_CIPHER_RETURNED   248"

.PP
Definition at line 3125 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_CIPHER_TYPE   249"

.PP
Definition at line 3126 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_CMD_NAME   386"

.PP
Definition at line 3127 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_DIGEST   368"

.PP
Definition at line 3128 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE   250"

.PP
Definition at line 3129 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_PKEY_TYPE   251"

.PP
Definition at line 3130 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_PROTOCOL   252"

.PP
Definition at line 3131 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_REMOTE_ERROR_TYPE   253"

.PP
Definition at line 3132 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_SSL_VERSION   254"

.PP
Definition at line 3133 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNKNOWN_STATE   255"

.PP
Definition at line 3134 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED   338"

.PP
Definition at line 3135 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_CIPHER   256"

.PP
Definition at line 3136 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM   257"

.PP
Definition at line 3137 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_DIGEST_TYPE   326"

.PP
Definition at line 3138 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_ELLIPTIC_CURVE   315"

.PP
Definition at line 3139 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_PROTOCOL   258"

.PP
Definition at line 3140 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_SSL_VERSION   259"

.PP
Definition at line 3141 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_UNSUPPORTED_STATUS_TYPE   329"

.PP
Definition at line 3142 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_USE_SRTP_NOT_NEGOTIATED   369"

.PP
Definition at line 3143 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRITE_BIO_NOT_SET   260"

.PP
Definition at line 3144 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_CERTIFICATE_TYPE   383"

.PP
Definition at line 3145 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_CIPHER_RETURNED   261"

.PP
Definition at line 3146 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_CURVE   378"

.PP
Definition at line 3147 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_MESSAGE_TYPE   262"

.PP
Definition at line 3148 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_NUMBER_OF_KEY_BITS   263"

.PP
Definition at line 3149 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_SIGNATURE_LENGTH   264"

.PP
Definition at line 3150 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_SIGNATURE_SIZE   265"

.PP
Definition at line 3151 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_SIGNATURE_TYPE   370"

.PP
Definition at line 3152 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_SSL_VERSION   266"

.PP
Definition at line 3153 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_WRONG_VERSION_NUMBER   267"

.PP
Definition at line 3154 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_X509_LIB   268"

.PP
Definition at line 3155 of file ssl/ssl\&.h\&.
.SS "#define SSL_R_X509_VERIFICATION_SETUP_PROBLEMS   269"

.PP
Definition at line 3156 of file ssl/ssl\&.h\&.
.SS "#define SSL_READING   3"

.PP
Definition at line 1408 of file ssl/ssl\&.h\&.
.SS "#define SSL_RECEIVED_SHUTDOWN   2"

.PP
Definition at line 351 of file ssl/ssl\&.h\&.
.SS "#define SSL_select_current_cert(ctx, x509)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SELECT_CURRENT_CERT\fP,0,(char *)x509)"

.SS "#define SSL_SENT_SHUTDOWN   1"

.PP
Definition at line 350 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_BOTH   (\fBSSL_SESS_CACHE_CLIENT\fP|\fBSSL_SESS_CACHE_SERVER\fP)"

.PP
Definition at line 1191 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_CLIENT   0x0001"

.PP
Definition at line 1189 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_NO_AUTO_CLEAR   0x0080"

.PP
Definition at line 1192 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_NO_INTERNAL   (\fBSSL_SESS_CACHE_NO_INTERNAL_LOOKUP\fP|\fBSSL_SESS_CACHE_NO_INTERNAL_STORE\fP)"

.PP
Definition at line 1196 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_NO_INTERNAL_LOOKUP   0x0100"

.PP
Definition at line 1194 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_NO_INTERNAL_STORE   0x0200"

.PP
Definition at line 1195 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_OFF   0x0000"

.PP
Definition at line 1188 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESS_CACHE_SERVER   0x0002"

.PP
Definition at line 1190 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESSION_ASN1_VERSION   0x0001"

.PP
Definition at line 178 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESSION_CACHE_MAX_SIZE_DEFAULT   (1024*20)"

.PP
Definition at line 888 of file ssl/ssl\&.h\&.
.SS "#define SSL_SESSION_get_app_data(s)   (\fBSSL_SESSION_get_ex_data\fP(s,0))"

.PP
Definition at line 1711 of file ssl/ssl\&.h\&.
.SS "#define SSL_session_reused(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_SESSION_REUSED\fP,0,NULL)"

.SS "#define SSL_SESSION_set_app_data(s, \fBa\fP)   (\fBSSL_SESSION_set_ex_data\fP(s,0,(char *)\fBa\fP))"

.PP
Definition at line 1710 of file ssl/ssl\&.h\&.
.SS "#define SSL_set0_chain(ctx, sk)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,0,(char *)sk)"

.SS "#define SSL_set0_chain_cert_store(s, st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,0,(char *)st)"

.SS "#define SSL_set0_verify_cert_store(s, st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,0,(char *)st)"

.SS "#define SSL_set1_chain(ctx, sk)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_CHAIN\fP,1,(char *)sk)"

.SS "#define SSL_set1_chain_cert_store(s, st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CHAIN_CERT_STORE\fP,1,(char *)st)"

.SS "#define SSL_set1_client_certificate_types(s, clist, clistlen)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_CLIENT_CERT_TYPES\fP,clistlen,(char *)clist)"

.SS "#define SSL_set1_client_sigalgs(ctx, slist, slistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS\fP,clistlen,(int *)slist)"

.SS "#define SSL_set1_client_sigalgs_list(ctx, s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CLIENT_SIGALGS_LIST\fP,0,(char *)s)"

.SS "#define SSL_set1_curves(ctx, clist, clistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES\fP,clistlen,(char *)clist)"

.SS "#define SSL_set1_curves_list(ctx, s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURVES_LIST\fP,0,(char *)s)"

.SS "#define SSL_set1_sigalgs(ctx, slist, slistlen)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS\fP,slistlen,(int *)slist)"

.SS "#define SSL_set1_sigalgs_list(ctx, s)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_SIGALGS_LIST\fP,0,(char *)s)"

.SS "#define SSL_set1_verify_cert_store(s, st)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_VERIFY_CERT_STORE\fP,1,(char *)st)"

.SS "#define SSL_set_app_data(s, arg)   (\fBSSL_set_ex_data\fP(s,0,(char *)arg))"

.PP
Definition at line 1708 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_cert_flags(s, op)   \fBSSL_ctrl\fP((s),\fBSSL_CTRL_CERT_FLAGS\fP,(op),NULL)"

.PP
Definition at line 827 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_current_cert(ctx, op)   \fBSSL_ctrl\fP(ctx,\fBSSL_CTRL_SET_CURRENT_CERT\fP, op, NULL)"

.SS "#define SSL_set_ecdh_auto(s, onoff)   \fBSSL_ctrl\fP(s,\fBSSL_CTRL_SET_ECDH_AUTO\fP,onoff,NULL)"

.SS "#define SSL_set_max_cert_list(ssl, m)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_MAX_CERT_LIST\fP,m,NULL)"

.PP
Definition at line 2500 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_max_send_fragment(ssl, m)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_MAX_SEND_FRAGMENT\fP,m,NULL)"

.PP
Definition at line 2505 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_mode(ssl, op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_MODE\fP,(op),NULL)"

.PP
Definition at line 806 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_msg_callback_arg(ssl, arg)   \fBSSL_ctrl\fP((ssl), \fBSSL_CTRL_SET_MSG_CALLBACK_ARG\fP, 0, (arg))"

.PP
Definition at line 843 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_mtu(ssl, mtu)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_SET_MTU\fP,(mtu),NULL)"

.PP
Definition at line 810 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_options(ssl, op)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_OPTIONS\fP,(op),NULL)"

.PP
Definition at line 791 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_time(\fBa\fP, b)   \fBSSL_SESSION_set_time\fP((\fBa\fP),(b))"

.PP
Definition at line 1801 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_timeout(\fBa\fP, b)   \fBSSL_SESSION_set_timeout\fP((\fBa\fP),(b))"

.PP
Definition at line 1803 of file ssl/ssl\&.h\&.
.SS "#define SSL_set_tmp_dh(ssl, dh)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_DH\fP,0,(char *)dh)"

.SS "#define SSL_set_tmp_ecdh(ssl, ecdh)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_ECDH\fP,0,(char *)ecdh)"

.SS "#define SSL_set_tmp_rsa(ssl, rsa)   \fBSSL_ctrl\fP(ssl,\fBSSL_CTRL_SET_TMP_RSA\fP,0,(char *)rsa)"

.SS "#define SSL_ST_ACCEPT   0x2000"

.PP
Definition at line 1724 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_BEFORE   0x4000"

.PP
Definition at line 1727 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_CONNECT   0x1000"

.PP
Definition at line 1723 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_ERR   0x05"

.PP
Definition at line 1730 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_INIT   (\fBSSL_ST_CONNECT\fP|\fBSSL_ST_ACCEPT\fP)"

.PP
Definition at line 1726 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_MASK   0x0FFF"

.PP
Definition at line 1725 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_OK   0x03"

.PP
Definition at line 1728 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_READ_BODY   0xF1"

.PP
Definition at line 1759 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_READ_DONE   0xF2"

.PP
Definition at line 1760 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_READ_HEADER   0xF0"

.PP
Definition at line 1758 of file ssl/ssl\&.h\&.
.SS "#define SSL_ST_RENEGOTIATE   (0x04|SSL_ST_INIT)"

.PP
Definition at line 1729 of file ssl/ssl\&.h\&.
.SS "#define SSL_total_renegotiations(ssl)   \fBSSL_ctrl\fP((ssl),\fBSSL_CTRL_GET_TOTAL_RENEGOTIATIONS\fP,0,NULL)"

.SS "#define SSL_TXT_3DES   '3DES'"

.PP
Definition at line 288 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aDH   'aDH'"

.PP
Definition at line 262 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_ADH   'ADH'"

.PP
Definition at line 276 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aDSS   'aDSS'"

.PP
Definition at line 261 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aECDH   'aECDH'"

.PP
Definition at line 263 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_AECDH   'AECDH'"

.PP
Definition at line 281 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aECDSA   'aECDSA'"

.PP
Definition at line 265 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_AES   'AES'"

.PP
Definition at line 295 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_AES128   'AES128'"

.PP
Definition at line 293 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_AES256   'AES256'"

.PP
Definition at line 294 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_AES_GCM   'AESGCM'"

.PP
Definition at line 296 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aFZA   'aFZA'/* unused! */"

.PP
Definition at line 236 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aGOST   'aGOST'"

.PP
Definition at line 269 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aGOST01   'aGOST01'"

.PP
Definition at line 268 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aGOST94   'aGOST94'"

.PP
Definition at line 267 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aKRB5   'aKRB5'"

.PP
Definition at line 264 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_ALL   'ALL'"

.PP
Definition at line 318 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aNULL   'aNULL'"

.PP
Definition at line 240 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aPSK   'aPSK'"

.PP
Definition at line 266 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aRSA   'aRSA'"

.PP
Definition at line 260 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_aSRP   'aSRP'"

.PP
Definition at line 270 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_CAMELLIA   'CAMELLIA'"

.PP
Definition at line 299 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_CAMELLIA128   'CAMELLIA128'"

.PP
Definition at line 297 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_CAMELLIA256   'CAMELLIA256'"

.PP
Definition at line 298 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_CMPALL   'COMPLEMENTOFALL'"

.PP
Definition at line 334 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_CMPDEF   'COMPLEMENTOFDEFAULT'"

.PP
Definition at line 335 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DES   'DES'"

.PP
Definition at line 287 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DES_192_EDE3_CBC_WITH_MD5   \fBSSL2_TXT_DES_192_EDE3_CBC_WITH_MD5\fP"

.PP
Definition at line 189 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DES_192_EDE3_CBC_WITH_SHA   \fBSSL2_TXT_DES_192_EDE3_CBC_WITH_SHA\fP"

.PP
Definition at line 190 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DES_64_CBC_WITH_MD5   \fBSSL2_TXT_DES_64_CBC_WITH_MD5\fP"

.PP
Definition at line 187 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DES_64_CBC_WITH_SHA   \fBSSL2_TXT_DES_64_CBC_WITH_SHA\fP"

.PP
Definition at line 188 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DH   'DH'"

.PP
Definition at line 273 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DHE   'DHE'/* alias for EDH */"

.PP
Definition at line 275 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_DSS   'DSS'"

.PP
Definition at line 272 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_ECDH   'ECDH'"

.PP
Definition at line 278 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_ECDHE   'ECDHE'/* alias for ECDHE' */"

.PP
Definition at line 280 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_ECDSA   'ECDSA'"

.PP
Definition at line 282 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EDH   'EDH'/* same as 'kEDH:\-ADH' */"

.PP
Definition at line 274 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EECDH   'EECDH'/* same as 'kEECDH:\-AECDH' */"

.PP
Definition at line 279 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_eFZA   'eFZA'/* unused! */"

.PP
Definition at line 237 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_eNULL   'eNULL'"

.PP
Definition at line 241 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EXP   'EXP'"

.PP
Definition at line 315 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EXP40   'EXPORT40'"

.PP
Definition at line 228 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EXP56   'EXPORT56'"

.PP
Definition at line 229 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_EXPORT   'EXPORT'"

.PP
Definition at line 316 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_FIPS   'FIPS'"

.PP
Definition at line 233 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_FZA   'FZA'/* unused! */"

.PP
Definition at line 238 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_GOST89MAC   'GOST89MAC'"

.PP
Definition at line 305 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_GOST94   'GOST94'"

.PP
Definition at line 304 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_HIGH   'HIGH'"

.PP
Definition at line 232 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_IDEA   'IDEA'"

.PP
Definition at line 291 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_IDEA_128_CBC_WITH_MD5   \fBSSL2_TXT_IDEA_128_CBC_WITH_MD5\fP"

.PP
Definition at line 186 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kDH   'kDH'"

.PP
Definition at line 247 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kDHd   'kDHd'"

.PP
Definition at line 246 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kDHE   'kDHE'/* alias for kEDH */"

.PP
Definition at line 249 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kDHr   'kDHr'"

.PP
Definition at line 245 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kECDH   'kECDH'"

.PP
Definition at line 253 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kECDHe   'kECDHe'"

.PP
Definition at line 252 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kECDHE   'kECDHE'/* alias for kEECDH */"

.PP
Definition at line 255 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kECDHr   'kECDHr'"

.PP
Definition at line 251 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kEDH   'kEDH'"

.PP
Definition at line 248 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kEECDH   'kEECDH'"

.PP
Definition at line 254 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kFZA   'kFZA'/* unused! */"

.PP
Definition at line 235 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kGOST   'kGOST'"

.PP
Definition at line 257 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kKRB5   'kKRB5'"

.PP
Definition at line 250 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kPSK   'kPSK'"

.PP
Definition at line 256 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5   'KRB5'"

.PP
Definition at line 283 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_192_CBC3_MD5   \fBSSL3_TXT_KRB5_DES_192_CBC3_MD5\fP"

.PP
Definition at line 216 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_192_CBC3_MD5   \fBSSL3_TXT_KRB5_DES_192_CBC3_MD5\fP"

.PP
Definition at line 216 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_192_CBC3_SHA   \fBSSL3_TXT_KRB5_DES_192_CBC3_SHA\fP"

.PP
Definition at line 215 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_192_CBC3_SHA   \fBSSL3_TXT_KRB5_DES_192_CBC3_SHA\fP"

.PP
Definition at line 215 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_40_CBC_MD5   \fBSSL3_TXT_KRB5_DES_40_CBC_MD5\fP"

.PP
Definition at line 212 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_40_CBC_MD5   \fBSSL3_TXT_KRB5_DES_40_CBC_MD5\fP"

.PP
Definition at line 212 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_40_CBC_SHA   \fBSSL3_TXT_KRB5_DES_40_CBC_SHA\fP"

.PP
Definition at line 211 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_40_CBC_SHA   \fBSSL3_TXT_KRB5_DES_40_CBC_SHA\fP"

.PP
Definition at line 211 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_64_CBC_MD5   \fBSSL3_TXT_KRB5_DES_64_CBC_MD5\fP"

.PP
Definition at line 214 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_64_CBC_MD5   \fBSSL3_TXT_KRB5_DES_64_CBC_MD5\fP"

.PP
Definition at line 214 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_64_CBC_SHA   \fBSSL3_TXT_KRB5_DES_64_CBC_SHA\fP"

.PP
Definition at line 213 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_DES_64_CBC_SHA   \fBSSL3_TXT_KRB5_DES_64_CBC_SHA\fP"

.PP
Definition at line 213 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_IDEA_128_CBC_MD5   \fBSSL3_TXT_KRB5_IDEA_128_CBC_MD5\fP"

.PP
Definition at line 202 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_IDEA_128_CBC_SHA   \fBSSL3_TXT_KRB5_IDEA_128_CBC_SHA\fP"

.PP
Definition at line 198 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC2_40_CBC_MD5   \fBSSL3_TXT_KRB5_RC2_40_CBC_MD5\fP"

.PP
Definition at line 208 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC2_40_CBC_SHA   \fBSSL3_TXT_KRB5_RC2_40_CBC_SHA\fP"

.PP
Definition at line 205 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC4_128_MD5   \fBSSL3_TXT_KRB5_RC4_128_MD5\fP"

.PP
Definition at line 201 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC4_128_SHA   \fBSSL3_TXT_KRB5_RC4_128_SHA\fP"

.PP
Definition at line 197 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC4_40_MD5   \fBSSL3_TXT_KRB5_RC4_40_MD5\fP"

.PP
Definition at line 209 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_KRB5_RC4_40_SHA   \fBSSL3_TXT_KRB5_RC4_40_SHA\fP"

.PP
Definition at line 206 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kRSA   'kRSA'"

.PP
Definition at line 244 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_kSRP   'kSRP'"

.PP
Definition at line 258 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_LOW   'LOW'"

.PP
Definition at line 230 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_MD5   'MD5'"

.PP
Definition at line 301 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_MEDIUM   'MEDIUM'"

.PP
Definition at line 231 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_NULL   'NULL'"

.PP
Definition at line 242 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_NULL_WITH_MD5   \fBSSL2_TXT_NULL_WITH_MD5\fP"

.PP
Definition at line 181 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_PSK   'PSK'"

.PP
Definition at line 284 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC2   'RC2'"

.PP
Definition at line 290 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC2_128_CBC_EXPORT40_WITH_MD5   \fBSSL2_TXT_RC2_128_CBC_EXPORT40_WITH_MD5\fP"

.PP
Definition at line 185 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC2_128_CBC_WITH_MD5   \fBSSL2_TXT_RC2_128_CBC_WITH_MD5\fP"

.PP
Definition at line 184 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC4   'RC4'"

.PP
Definition at line 289 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC4_128_EXPORT40_WITH_MD5   \fBSSL2_TXT_RC4_128_EXPORT40_WITH_MD5\fP"

.PP
Definition at line 183 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RC4_128_WITH_MD5   \fBSSL2_TXT_RC4_128_WITH_MD5\fP"

.PP
Definition at line 182 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_RSA   'RSA'"

.PP
Definition at line 277 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SEED   'SEED'"

.PP
Definition at line 292 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SHA   'SHA'/* same as 'SHA1' */"

.PP
Definition at line 303 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SHA1   'SHA1'"

.PP
Definition at line 302 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SHA256   'SHA256'"

.PP
Definition at line 306 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SHA384   'SHA384'"

.PP
Definition at line 307 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SRP   'SRP'"

.PP
Definition at line 285 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SSLV2   'SSLv2'"

.PP
Definition at line 309 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_SSLV3   'SSLv3'"

.PP
Definition at line 310 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_TLSV1   'TLSv1'"

.PP
Definition at line 311 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_TLSV1_1   'TLSv1\&.1'"

.PP
Definition at line 312 of file ssl/ssl\&.h\&.
.SS "#define SSL_TXT_TLSV1_2   'TLSv1\&.2'"

.PP
Definition at line 313 of file ssl/ssl\&.h\&.
.SS "#define SSL_VERIFY_CLIENT_ONCE   0x04"

.PP
Definition at line 1778 of file ssl/ssl\&.h\&.
.SS "#define SSL_VERIFY_FAIL_IF_NO_PEER_CERT   0x02"

.PP
Definition at line 1777 of file ssl/ssl\&.h\&.
.SS "#define SSL_VERIFY_NONE   0x00"

.PP
Definition at line 1775 of file ssl/ssl\&.h\&.
.SS "#define SSL_VERIFY_PEER   0x01"

.PP
Definition at line 1776 of file ssl/ssl\&.h\&.
.SS "#define SSL_want_nothing(s)   (\fBSSL_want\fP(s) == \fBSSL_NOTHING\fP)"

.PP
Definition at line 1412 of file ssl/ssl\&.h\&.
.SS "#define SSL_want_read(s)   (\fBSSL_want\fP(s) == \fBSSL_READING\fP)"

.PP
Definition at line 1413 of file ssl/ssl\&.h\&.
.SS "#define SSL_want_write(s)   (\fBSSL_want\fP(s) == \fBSSL_WRITING\fP)"

.PP
Definition at line 1414 of file ssl/ssl\&.h\&.
.SS "#define SSL_want_x509_lookup(s)   (\fBSSL_want\fP(s) == \fBSSL_X509_LOOKUP\fP)"

.PP
Definition at line 1415 of file ssl/ssl\&.h\&.
.SS "#define SSL_WRITING   2"

.PP
Definition at line 1407 of file ssl/ssl\&.h\&.
.SS "#define SSL_X509_LOOKUP   4"

.PP
Definition at line 1409 of file ssl/ssl\&.h\&.
.SS "#define SSLeay_add_ssl_algorithms()   \fBSSL_library_init\fP()"

.PP
Definition at line 1781 of file ssl/ssl\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef int(* custom_ext_add_cb) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char **out, size_t *outlen, int *al, \fBvoid\fP *add_arg)"

.PP
Definition at line 402 of file ssl/ssl\&.h\&.
.SS "typedef \fBvoid\fP(* custom_ext_free_cb) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char *out, \fBvoid\fP *add_arg)"

.PP
Definition at line 406 of file ssl/ssl\&.h\&.
.SS "typedef int(* custom_ext_parse_cb) (\fBSSL\fP *s, unsigned int ext_type, const unsigned char *in, size_t inlen, int *al, \fBvoid\fP *parse_arg)"

.PP
Definition at line 409 of file ssl/ssl\&.h\&.
.SS "typedef int(* GEN_SESSION_CB) (const \fBSSL\fP *ssl, unsigned char *id, unsigned int *id_len)"

.PP
Definition at line 905 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBsrp_ctx_st\fP  \fBSRP_CTX\fP"

.SS "typedef struct \fBsrtp_protection_profile_st\fP  \fBSRTP_PROTECTION_PROFILE\fP"

.SS "typedef struct \fBssl_cipher_st\fP \fBSSL_CIPHER\fP"

.PP
Definition at line 375 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBssl_comp_st\fP \fBSSL_COMP\fP"

.PP
Definition at line 908 of file ssl/ssl\&.h\&.
.SS "typedef struct ssl_conf_ctx_st \fBSSL_CONF_CTX\fP"

.PP
Definition at line 378 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBssl_st\fP* \fBssl_crock_st\fP"

.PP
Definition at line 372 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBssl_method_st\fP \fBSSL_METHOD\fP"

.PP
Definition at line 374 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBssl_session_st\fP \fBSSL_SESSION\fP"

.PP
Definition at line 376 of file ssl/ssl\&.h\&.
.SS "typedef int(* tls_session_secret_cb_fn) (\fBSSL\fP *s, \fBvoid\fP *secret, int *secret_len, \fBSTACK_OF\fP(\fBSSL_CIPHER\fP)*peer_ciphers, \fBSSL_CIPHER\fP **cipher, \fBvoid\fP *arg)"

.PP
Definition at line 393 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBtls_session_ticket_ext_st\fP \fBTLS_SESSION_TICKET_EXT\fP"

.PP
Definition at line 373 of file ssl/ssl\&.h\&.
.SS "typedef int(* tls_session_ticket_ext_cb_fn) (\fBSSL\fP *s, const unsigned char *data, int \fBlen\fP, \fBvoid\fP *arg)"

.PP
Definition at line 390 of file ssl/ssl\&.h\&.
.SS "typedef struct \fBtls_sigalgs_st\fP \fBTLS_SIGALGS\fP"

.PP
Definition at line 377 of file ssl/ssl\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBBIO\fP* BIO_new_buffer_ssl_connect (\fBSSL_CTX\fP * ctx)"

.SS "\fBBIO\fP* BIO_new_ssl (\fBSSL_CTX\fP * ctx, int client)"

.SS "\fBBIO\fP* BIO_new_ssl_connect (\fBSSL_CTX\fP * ctx)"

.SS "int BIO_ssl_copy_session_id (\fBBIO\fP * to, \fBBIO\fP * from)"

.SS "\fBvoid\fP BIO_ssl_shutdown (\fBBIO\fP * ssl_bio)"

.SS "\fBSSL_SESSION\fP* d2i_SSL_SESSION (\fBSSL_SESSION\fP ** a, const unsigned char ** pp, long length)"

.SS "DECLARE_LHASH_OF (\fBSSL_SESSION\fP)"

.SS "DECLARE_PEM_rw (\fBSSL_SESSION\fP, \fBSSL_SESSION\fP)"

.SS "const \fBSSL_METHOD\fP* DTLS_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLS_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLS_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_2_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_2_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_2_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* DTLSv1_server_method (\fBvoid\fP)"

.SS "\fBvoid\fP ERR_load_SSL_strings (\fBvoid\fP)"

.SS "int i2d_SSL_SESSION (\fBSSL_SESSION\fP * in, unsigned char ** pp)"

.SS "LHASH_OF (\fBSSL_SESSION\fP)"

.SS "int SRP_Calc_A_param (\fBSSL\fP * s)"

.SS "int SRP_generate_client_master_secret (\fBSSL\fP * s, unsigned char * master_key)"

.SS "int SRP_generate_server_master_secret (\fBSSL\fP * s, unsigned char * master_key)"

.SS "int SSL_accept (\fBSSL\fP * ssl)"

.SS "int SSL_add_client_CA (\fBSSL\fP * ssl, \fBX509\fP * x)"

.SS "int SSL_add_dir_cert_subjects_to_stack (\fBSTACK_OF\fP(\fBX509_NAME\fP)* stackCAs, const char * dir)"

.SS "int SSL_add_file_cert_subjects_to_stack (\fBSTACK_OF\fP(\fBX509_NAME\fP)* stackCAs, const char * file)"

.SS "const char* SSL_alert_desc_string (int value)"

.SS "const char* SSL_alert_desc_string_long (int value)"

.SS "const char* SSL_alert_type_string (int value)"

.SS "const char* SSL_alert_type_string_long (int value)"

.SS "int SSL_cache_hit (\fBSSL\fP * s)"

.SS "long SSL_callback_ctrl (\fBSSL\fP *, int, \fBvoid\fP(*)(\fBvoid\fP))"

.SS "\fBvoid\fP SSL_certs_clear (\fBSSL\fP * s)"

.SS "int SSL_check_private_key (const \fBSSL\fP * ctx)"

.SS "char* SSL_CIPHER_description (const \fBSSL_CIPHER\fP *, char * buf, int size)"

.SS "const \fBSSL_CIPHER\fP* SSL_CIPHER_find (\fBSSL\fP * ssl, const unsigned char * ptr)"

.SS "int SSL_CIPHER_get_bits (const \fBSSL_CIPHER\fP * c, int * alg_bits)"

.SS "unsigned long SSL_CIPHER_get_id (const \fBSSL_CIPHER\fP * c)"

.SS "const char* SSL_CIPHER_get_name (const \fBSSL_CIPHER\fP * c)"

.SS "char* SSL_CIPHER_get_version (const \fBSSL_CIPHER\fP * c)"

.SS "const char* SSL_CIPHER_standard_name (const \fBSSL_CIPHER\fP * c)"

.SS "int SSL_clear (\fBSSL\fP * s)"

.SS "int SSL_COMP_add_compression_method (int id, \fBCOMP_METHOD\fP * cm)"

.SS "\fBvoid\fP SSL_COMP_free_compression_methods (\fBvoid\fP)"

.SS "const char* SSL_COMP_get_name (const \fBCOMP_METHOD\fP * comp)"

.SS "int SSL_CONF_cmd (\fBSSL_CONF_CTX\fP * cctx, const char * cmd, const char * value)"

.SS "int SSL_CONF_cmd_argv (\fBSSL_CONF_CTX\fP * cctx, int * pargc, char *** pargv)"

.SS "int SSL_CONF_cmd_value_type (\fBSSL_CONF_CTX\fP * cctx, const char * cmd)"

.SS "unsigned int SSL_CONF_CTX_clear_flags (\fBSSL_CONF_CTX\fP * cctx, unsigned int flags)"

.SS "int SSL_CONF_CTX_finish (\fBSSL_CONF_CTX\fP * cctx)"

.SS "\fBvoid\fP SSL_CONF_CTX_free (\fBSSL_CONF_CTX\fP * cctx)"

.SS "\fBSSL_CONF_CTX\fP* SSL_CONF_CTX_new (\fBvoid\fP)"

.SS "int SSL_CONF_CTX_set1_prefix (\fBSSL_CONF_CTX\fP * cctx, const char * pre)"

.SS "unsigned int SSL_CONF_CTX_set_flags (\fBSSL_CONF_CTX\fP * cctx, unsigned int flags)"

.SS "\fBvoid\fP SSL_CONF_CTX_set_ssl (\fBSSL_CONF_CTX\fP * cctx, \fBSSL\fP * ssl)"

.SS "\fBvoid\fP SSL_CONF_CTX_set_ssl_ctx (\fBSSL_CONF_CTX\fP * cctx, \fBSSL_CTX\fP * ctx)"

.SS "int SSL_connect (\fBSSL\fP * ssl)"

.SS "\fBvoid\fP SSL_copy_session_id (\fBSSL\fP * to, const \fBSSL\fP * from)"

.SS "long SSL_ctrl (\fBSSL\fP * ssl, int cmd, long larg, \fBvoid\fP * parg)"

.SS "int SSL_CTX_add_client_CA (\fBSSL_CTX\fP * ctx, \fBX509\fP * x)"

.SS "int SSL_CTX_add_client_custom_ext (\fBSSL_CTX\fP * ctx, unsigned int ext_type, \fBcustom_ext_add_cb\fP add_cb, \fBcustom_ext_free_cb\fP free_cb, \fBvoid\fP * add_arg, \fBcustom_ext_parse_cb\fP parse_cb, \fBvoid\fP * parse_arg)"

.SS "int SSL_CTX_add_server_custom_ext (\fBSSL_CTX\fP * ctx, unsigned int ext_type, \fBcustom_ext_add_cb\fP add_cb, \fBcustom_ext_free_cb\fP free_cb, \fBvoid\fP * add_arg, \fBcustom_ext_parse_cb\fP parse_cb, \fBvoid\fP * parse_arg)"

.SS "int SSL_CTX_add_session (\fBSSL_CTX\fP * s, \fBSSL_SESSION\fP * c)"

.SS "long SSL_CTX_callback_ctrl (\fBSSL_CTX\fP *, int, \fBvoid\fP(*)(\fBvoid\fP))"

.SS "int SSL_CTX_check_private_key (const \fBSSL_CTX\fP * ctx)"

.SS "long SSL_CTX_ctrl (\fBSSL_CTX\fP * ctx, int cmd, long larg, \fBvoid\fP * parg)"

.SS "\fBvoid\fP SSL_CTX_flush_sessions (\fBSSL_CTX\fP * ctx, long tm)"

.SS "\fBvoid\fP SSL_CTX_free (\fBSSL_CTX\fP *)"

.SS "\fBX509\fP* SSL_CTX_get0_certificate (const \fBSSL_CTX\fP * ctx)"

.SS "\fBX509_VERIFY_PARAM\fP* SSL_CTX_get0_param (\fBSSL_CTX\fP * ctx)"

.SS "\fBEVP_PKEY\fP* SSL_CTX_get0_privatekey (const \fBSSL_CTX\fP * ctx)"

.SS "\fBX509_STORE\fP* SSL_CTX_get_cert_store (const \fBSSL_CTX\fP *)"

.SS "\fBvoid\fP* SSL_CTX_get_ex_data (const \fBSSL_CTX\fP * ssl, int idx)"

.SS "int SSL_CTX_get_ex_new_index (long argl, \fBvoid\fP * argp, \fBCRYPTO_EX_new\fP * new_func, \fBCRYPTO_EX_dup\fP * dup_func, \fBCRYPTO_EX_free\fP * free_func)"

.SS "int SSL_CTX_get_quiet_shutdown (const \fBSSL_CTX\fP * ctx)"

.SS "const \fBSSL_METHOD\fP* SSL_CTX_get_ssl_method (\fBSSL_CTX\fP * ctx)"

.SS "long SSL_CTX_get_timeout (const \fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_get_verify_depth (const \fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_get_verify_mode (const \fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_load_verify_locations (\fBSSL_CTX\fP * ctx, const char * CAfile, const char * CApath)"

.SS "\fBSSL_CTX\fP* SSL_CTX_new (const \fBSSL_METHOD\fP * meth)"

.SS "int SSL_CTX_remove_session (\fBSSL_CTX\fP *, \fBSSL_SESSION\fP * c)"

.SS "\fBvoid\fP SSL_CTX_sess_set_get_cb (\fBSSL_CTX\fP * ctx, \fBSSL_SESSION\fP *(*)(struct \fBssl_st\fssl,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   unsigned chardata, int \fBlen\fint *copy) get_session_cb)"

.SS "\fBvoid\fP SSL_CTX_sess_set_new_cb (\fBSSL_CTX\fP * ctx, int(*)(struct \fBssl_st\fP *sslfBSSL_SESSION\fP *sess) new_session_cb)"

.SS "\fBvoid\fP SSL_CTX_sess_set_remove_cb (\fBSSL_CTX\fP * ctx, \fBvoid\fP(*)(struct \fBssl_ctx_st\fP                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   *ctxfBSSL_SESSION\fsess) remove_session_cb)"

.SS "int SSL_CTX_set1_param (\fBSSL_CTX\fP * ctx, \fBX509_VERIFY_PARAM\fP * vpm)"

.SS "int SSL_CTX_set_alpn_protos (\fBSSL_CTX\fP * ctx, const unsigned char * protos, unsigned protos_len)"

.SS "\fBvoid\fP SSL_CTX_set_alpn_select_cb (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *sslconst unsigned char **outunsigned char *outlenconst unsigned char *inunsigned int inlenfBvoid\fP *arg) cb, \fBvoid\fP * arg)"

.SS "\fBvoid\fP SSL_CTX_set_cert_cb (\fBSSL_CTX\fP * c, int(*)(\fBSSL\fP *ssl, \fBvoid\fP *arg) cb, \fBvoid\fP * arg)"

.SS "\fBvoid\fP SSL_CTX_set_cert_store (\fBSSL_CTX\fP *, \fBX509_STORE\fP *)"

.SS "\fBvoid\fP SSL_CTX_set_cert_verify_callback (\fBSSL_CTX\fP * ctx, int(*)(\fBX509_STORE_CTX\fP *, \fBvoid\fP *) cb, \fBvoid\fP * arg)"

.SS "int SSL_CTX_set_cipher_list (\fBSSL_CTX\fP *, const char * str)"

.SS "\fBvoid\fP SSL_CTX_set_client_CA_list (\fBSSL_CTX\fP * ctx, \fBSTACK_OF\fP(\fBX509_NAME\fP)* name_list)"

.SS "\fBvoid\fP SSL_CTX_set_client_cert_cb (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *ssl, \fBX509\fP **xfBEVP_PKEY\fP **pkey) client_cert_cb)"

.SS "int SSL_CTX_set_client_cert_engine (\fBSSL_CTX\fP * ctx, \fBENGINE\fP * e)"

.SS "\fBvoid\fP SSL_CTX_set_cookie_generate_cb (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *sslunsigned charcookieunsigned intcookie_len) app_gen_cookie_cb)"

.SS "\fBvoid\fP SSL_CTX_set_cookie_verify_cb (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *sslunsigned charcookieunsigned intcookie_len) app_verify_cookie_cb)"

.SS "\fBvoid\fP SSL_CTX_set_default_passwd_cb (\fBSSL_CTX\fP * ctx, \fBpem_password_cb\fP * cb)"

.SS "\fBvoid\fP SSL_CTX_set_default_passwd_cb_userdata (\fBSSL_CTX\fP * ctx, \fBvoid\fP * u)"

.SS "int SSL_CTX_set_default_verify_paths (\fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_set_ex_data (\fBSSL_CTX\fP * ssl, int idx, \fBvoid\fP * data)"

.SS "int SSL_CTX_set_generate_session_id (\fBSSL_CTX\fP *, \fBGEN_SESSION_CB\fP)"

.SS "\fBvoid\fP SSL_CTX_set_info_callback (\fBSSL_CTX\fP * ctx, \fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fint val) cb)"

.SS "\fBvoid\fP SSL_CTX_set_msg_callback (\fBSSL_CTX\fP * ctx, \fBvoid\fP(*)(int write_p, int \fBversion\fint content_type, const \fBvoid\fP *bufsize_t \fBlen\fP, \fBSSL\fP *ssl, \fBvoid\fP *arg) cb)"

.SS "\fBvoid\fP SSL_CTX_set_next_proto_select_cb (\fBSSL_CTX\fP * s, int(*)(\fBSSL\fP *sslunsigned char **outunsigned char *outlenconst unsigned char *inunsigned int inlenfBvoid\fP *arg) cb, \fBvoid\fP * arg)"

.SS "\fBvoid\fP SSL_CTX_set_next_protos_advertised_cb (\fBSSL_CTX\fP * s, int(*)(\fBSSL\fP *sslconst unsigned charout,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   unsigned int *outlenfBvoid\fP *arg) cb, \fBvoid\fP * arg)"

.SS "\fBvoid\fP SSL_CTX_set_psk_client_callback (\fBSSL_CTX\fP * ctx, unsigned int(*)(\fBSSL\fsslconstcharhintcharidentity,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   unsignedintmax_identity_lenunsignedcharpskunsignedint                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   max_psk_len) psk_client_callback)"

.SS "\fBvoid\fP SSL_CTX_set_psk_server_callback (\fBSSL_CTX\fP * ctx, unsigned int(*)(\fBSSL\fsslconstcharidentityunsignedcharpskunsignedintmax_psk_len) psk_server_callback)"

.SS "int SSL_CTX_set_purpose (\fBSSL_CTX\fP * s, int purpose)"

.SS "\fBvoid\fP SSL_CTX_set_quiet_shutdown (\fBSSL_CTX\fP * ctx, int mode)"

.SS "int SSL_CTX_set_session_id_context (\fBSSL_CTX\fP * ctx, const unsigned char * sid_ctx, unsigned int sid_ctx_len)"

.SS "int SSL_CTX_set_srp_cb_arg (\fBSSL_CTX\fP * ctx, \fBvoid\fP * arg)"

.SS "int SSL_CTX_set_srp_client_pwd_callback (\fBSSL_CTX\fP * ctx, char *(*)(\fBSSL\fP *, \fBvoid\fP *) cb)"

.SS "int SSL_CTX_set_srp_password (\fBSSL_CTX\fP * ctx, char * password)"

.SS "int SSL_CTX_set_srp_strength (\fBSSL_CTX\fP * ctx, int strength)"

.SS "int SSL_CTX_set_srp_username (\fBSSL_CTX\fP * ctx, char * name)"

.SS "int SSL_CTX_set_srp_username_callback (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *, int *, \fBvoid\fP *) cb)"

.SS "int SSL_CTX_set_srp_verify_param_callback (\fBSSL_CTX\fP * ctx, int(*)(\fBSSL\fP *, \fBvoid\fP *) cb)"

.SS "int SSL_CTX_set_ssl_version (\fBSSL_CTX\fP * ctx, const \fBSSL_METHOD\fP * meth)"

.SS "long SSL_CTX_set_timeout (\fBSSL_CTX\fP * ctx, long t)"

.SS "\fBvoid\fP SSL_CTX_set_tmp_dh_callback (\fBSSL_CTX\fP * ctx, \fBDH\fP *(*)(\fBSSL\fP *ssl, int is_exportint keylength) dh)"

.SS "\fBvoid\fP SSL_CTX_set_tmp_ecdh_callback (\fBSSL_CTX\fP * ctx, \fBEC_KEY\fP *(*)(\fBSSL\fP *ssl, int is_exportint keylength) ecdh)"

.SS "\fBvoid\fP SSL_CTX_set_tmp_rsa_callback (\fBSSL_CTX\fP * ctx, \fBRSA\fP *(*)(\fBSSL\fP *ssl, int is_exportint keylength) cb)"

.SS "int SSL_CTX_set_trust (\fBSSL_CTX\fP * s, int trust)"

.SS "\fBvoid\fP SSL_CTX_set_verify (\fBSSL_CTX\fP * ctx, int mode, int(*)(int, \fBX509_STORE_CTX\fP *) callback)"

.SS "\fBvoid\fP SSL_CTX_set_verify_depth (\fBSSL_CTX\fP * ctx, int depth)"

.SS "int SSL_CTX_SRP_CTX_free (\fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_SRP_CTX_init (\fBSSL_CTX\fP * ctx)"

.SS "int SSL_CTX_use_certificate (\fBSSL_CTX\fP * ctx, \fBX509\fP * x)"

.SS "int SSL_CTX_use_certificate_ASN1 (\fBSSL_CTX\fP * ctx, int len, const unsigned char * d)"

.SS "int SSL_CTX_use_certificate_chain_file (\fBSSL_CTX\fP * ctx, const char * file)"

.SS "int SSL_CTX_use_certificate_file (\fBSSL_CTX\fP * ctx, const char * file, int type)"

.SS "int SSL_CTX_use_PrivateKey (\fBSSL_CTX\fP * ctx, \fBEVP_PKEY\fP * pkey)"

.SS "int SSL_CTX_use_PrivateKey_ASN1 (int pk, \fBSSL_CTX\fP * ctx, const unsigned char * d, long len)"

.SS "int SSL_CTX_use_PrivateKey_file (\fBSSL_CTX\fP * ctx, const char * file, int type)"

.SS "int SSL_CTX_use_psk_identity_hint (\fBSSL_CTX\fP * ctx, const char * identity_hint)"

.SS "int SSL_CTX_use_RSAPrivateKey (\fBSSL_CTX\fP * ctx, \fBRSA\fP * rsa)"

.SS "int SSL_CTX_use_RSAPrivateKey_ASN1 (\fBSSL_CTX\fP * ctx, const unsigned char * d, long len)"

.SS "int SSL_CTX_use_RSAPrivateKey_file (\fBSSL_CTX\fP * ctx, const char * file, int type)"

.SS "int SSL_CTX_use_serverinfo (\fBSSL_CTX\fP * ctx, const unsigned char * serverinfo, size_t serverinfo_length)"

.SS "int SSL_CTX_use_serverinfo_file (\fBSSL_CTX\fP * ctx, const char * file)"

.SS "int SSL_do_handshake (\fBSSL\fP * s)"

.SS "\fBSSL\fP* SSL_dup (\fBSSL\fP * ssl)"

.SS "int SSL_extension_supported (unsigned int ext_type)"

.SS "\fBvoid\fP SSL_free (\fBSSL\fP * ssl)"

.SS "\fBvoid\fP SSL_get0_alpn_selected (const \fBSSL\fP * ssl, const unsigned char ** data, unsigned * len)"

.SS "\fBvoid\fP SSL_get0_next_proto_negotiated (const \fBSSL\fP * s, const unsigned char ** data, unsigned * len)"

.SS "\fBX509_VERIFY_PARAM\fP* SSL_get0_param (\fBSSL\fP * ssl)"

.SS "\fBSSL_SESSION\fP* SSL_get1_session (\fBSSL\fP * ssl)"

.SS "\fBX509\fP* SSL_get_certificate (const \fBSSL\fP * ssl)"

.SS "const char* SSL_get_cipher_list (const \fBSSL\fP * s, int n)"

.SS "const \fBSSL_CIPHER\fP* SSL_get_current_cipher (const \fBSSL\fP * s)"

.SS "const \fBCOMP_METHOD\fP* SSL_get_current_compression (\fBSSL\fP * s)"

.SS "const \fBCOMP_METHOD\fP* SSL_get_current_expansion (\fBSSL\fP * s)"

.SS "long SSL_get_default_timeout (const \fBSSL\fP * s)"

.SS "int SSL_get_error (const \fBSSL\fP * s, int ret_code)"

.SS "\fBvoid\fP* SSL_get_ex_data (const \fBSSL\fP * ssl, int idx)"

.SS "int SSL_get_ex_data_X509_STORE_CTX_idx (\fBvoid\fP)"

.SS "int SSL_get_ex_new_index (long argl, \fBvoid\fP * argp, \fBCRYPTO_EX_new\fP * new_func, \fBCRYPTO_EX_dup\fP * dup_func, \fBCRYPTO_EX_free\fP * free_func)"

.SS "int SSL_get_fd (const \fBSSL\fP * s)"

.SS "size_t SSL_get_finished (const \fBSSL\fP * s, \fBvoid\fP * buf, size_t count)"

.SS "size_t SSL_get_peer_finished (const \fBSSL\fP * s, \fBvoid\fP * buf, size_t count)"

.SS "struct \fBevp_pkey_st\fP* SSL_get_privatekey (const \fBSSL\fP * ssl)"

.SS "const char* SSL_get_psk_identity (const \fBSSL\fP * s)"

.SS "const char* SSL_get_psk_identity_hint (const \fBSSL\fP * s)"

.SS "int SSL_get_quiet_shutdown (const \fBSSL\fP * ssl)"

.SS "\fBBIO\fP* SSL_get_rbio (const \fBSSL\fP * s)"

.SS "int SSL_get_read_ahead (const \fBSSL\fP * s)"

.SS "int SSL_get_rfd (const \fBSSL\fP * s)"

.SS "\fBSSL_SESSION\fP* SSL_get_session (const \fBSSL\fP * ssl)"

.SS "char* SSL_get_shared_ciphers (const \fBSSL\fP * s, char * buf, int len)"

.SS "int SSL_get_shutdown (const \fBSSL\fP * ssl)"

.SS "\fBBIGNUM\fP* SSL_get_srp_g (\fBSSL\fP * s)"

.SS "\fBBIGNUM\fP* SSL_get_srp_N (\fBSSL\fP * s)"

.SS "char* SSL_get_srp_userinfo (\fBSSL\fP * s)"

.SS "char* SSL_get_srp_username (\fBSSL\fP * s)"

.SS "\fBSSL_CTX\fP* SSL_get_SSL_CTX (const \fBSSL\fP * ssl)"

.SS "const \fBSSL_METHOD\fP* SSL_get_ssl_method (\fBSSL\fP * s)"

.SS "int SSL_get_verify_depth (const \fBSSL\fP * s)"

.SS "int SSL_get_verify_mode (const \fBSSL\fP * s)"

.SS "long SSL_get_verify_result (const \fBSSL\fP * ssl)"

.SS "const char* SSL_get_version (const \fBSSL\fP * s)"

.SS "\fBBIO\fP* SSL_get_wbio (const \fBSSL\fP * s)"

.SS "int SSL_get_wfd (const \fBSSL\fP * s)"

.SS "int SSL_has_matching_session_id (const \fBSSL\fP * ssl, const unsigned char * id, unsigned int id_len)"

.SS "int SSL_is_server (\fBSSL\fP * s)"

.SS "int SSL_library_init (\fBvoid\fP)"

.SS "\fBvoid\fP SSL_load_error_strings (\fBvoid\fP)"

.SS "\fBSSL\fP* SSL_new (\fBSSL_CTX\fP * ctx)"

.SS "int SSL_peek (\fBSSL\fP * ssl, \fBvoid\fP * buf, int num)"

.SS "int SSL_pending (const \fBSSL\fP * s)"

.SS "int SSL_read (\fBSSL\fP * ssl, \fBvoid\fP * buf, int num)"

.SS "int SSL_renegotiate (\fBSSL\fP * s)"

.SS "int SSL_renegotiate_abbreviated (\fBSSL\fP * s)"

.SS "int SSL_renegotiate_pending (\fBSSL\fP * s)"

.SS "const char* SSL_rstate_string (const \fBSSL\fP * s)"

.SS "const char* SSL_rstate_string_long (const \fBSSL\fP * s)"

.SS "int SSL_select_next_proto (unsigned char ** out, unsigned char * outlen, const unsigned char * in, unsigned int inlen, const unsigned char * client, unsigned int client_len)"

.SS "\fBvoid\fP SSL_SESSION_free (\fBSSL_SESSION\fP * ses)"

.SS "\fBX509\fP* SSL_SESSION_get0_peer (\fBSSL_SESSION\fP * s)"

.SS "unsigned int SSL_SESSION_get_compress_id (const \fBSSL_SESSION\fP * s)"

.SS "\fBvoid\fP* SSL_SESSION_get_ex_data (const \fBSSL_SESSION\fP * ss, int idx)"

.SS "int SSL_SESSION_get_ex_new_index (long argl, \fBvoid\fP * argp, \fBCRYPTO_EX_new\fP * new_func, \fBCRYPTO_EX_dup\fP * dup_func, \fBCRYPTO_EX_free\fP * free_func)"

.SS "const unsigned char* SSL_SESSION_get_id (const \fBSSL_SESSION\fP * s, unsigned int * len)"

.SS "long SSL_SESSION_get_time (const \fBSSL_SESSION\fP * s)"

.SS "long SSL_SESSION_get_timeout (const \fBSSL_SESSION\fP * s)"

.SS "\fBSSL_SESSION\fP* SSL_SESSION_new (\fBvoid\fP)"

.SS "int SSL_SESSION_print (\fBBIO\fP * fp, const \fBSSL_SESSION\fP * ses)"

.SS "int SSL_SESSION_print_fp (FILE * fp, const \fBSSL_SESSION\fP * ses)"

.SS "int SSL_SESSION_set1_id_context (\fBSSL_SESSION\fP * s, const unsigned char * sid_ctx, unsigned int sid_ctx_len)"

.SS "int SSL_SESSION_set_ex_data (\fBSSL_SESSION\fP * ss, int idx, \fBvoid\fP * data)"

.SS "long SSL_SESSION_set_time (\fBSSL_SESSION\fP * s, long t)"

.SS "long SSL_SESSION_set_timeout (\fBSSL_SESSION\fP * s, long t)"

.SS "int SSL_set1_param (\fBSSL\fP * ssl, \fBX509_VERIFY_PARAM\fP * vpm)"

.SS "\fBvoid\fP SSL_set_accept_state (\fBSSL\fP * s)"

.SS "int SSL_set_alpn_protos (\fBSSL\fP * ssl, const unsigned char * protos, unsigned protos_len)"

.SS "\fBvoid\fP SSL_set_bio (\fBSSL\fP * s, \fBBIO\fP * rbio, \fBBIO\fP * wbio)"

.SS "\fBvoid\fP SSL_set_cert_cb (\fBSSL\fP * s, int(*)(\fBSSL\fP *ssl, \fBvoid\fP *arg) cb, \fBvoid\fP * arg)"

.SS "int SSL_set_cipher_list (\fBSSL\fP * s, const char * str)"

.SS "\fBvoid\fP SSL_set_client_CA_list (\fBSSL\fP * s, \fBSTACK_OF\fP(\fBX509_NAME\fP)* name_list)"

.SS "\fBvoid\fP SSL_set_connect_state (\fBSSL\fP * s)"

.SS "\fBvoid\fP SSL_set_debug (\fBSSL\fP * s, int debug)"

.SS "int SSL_set_ex_data (\fBSSL\fP * ssl, int idx, \fBvoid\fP * data)"

.SS "int SSL_set_fd (\fBSSL\fP * s, int fd)"

.SS "int SSL_set_generate_session_id (\fBSSL\fP *, \fBGEN_SESSION_CB\fP)"

.SS "\fBvoid\fP SSL_set_info_callback (\fBSSL\fP * ssl, \fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fP, int val) cb)"

.SS "\fBvoid\fP SSL_set_msg_callback (\fBSSL\fP * ssl, \fBvoid\fP(*)(int write_p, int \fBversion\fint content_type, const \fBvoid\fP *bufsize_t \fBlen\fP, \fBSSL\fP *ssl, \fBvoid\fP *arg) cb)"

.SS "\fBvoid\fP SSL_set_psk_client_callback (\fBSSL\fP * ssl, unsigned int(*)(\fBSSL\fsslconstcharhintcharidentityunsigned                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   intmax_identity_lenunsignedcharpskunsignedintmax_psk_len) psk_client_callback)"

.SS "\fBvoid\fP SSL_set_psk_server_callback (\fBSSL\fP * ssl, unsigned int(*)(\fBSSL\fsslconstchar                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   *identityunsignedcharpskunsignedintmax_psk_len) psk_server_callback)"

.SS "int SSL_set_purpose (\fBSSL\fP * s, int purpose)"

.SS "\fBvoid\fP SSL_set_quiet_shutdown (\fBSSL\fP * ssl, int mode)"

.SS "\fBvoid\fP SSL_set_read_ahead (\fBSSL\fP * s, int yes)"

.SS "int SSL_set_rfd (\fBSSL\fP * s, int fd)"

.SS "int SSL_set_session (\fBSSL\fP * to, \fBSSL_SESSION\fP * session)"

.SS "int SSL_set_session_id_context (\fBSSL\fP * ssl, const unsigned char * sid_ctx, unsigned int sid_ctx_len)"

.SS "int SSL_set_session_secret_cb (\fBSSL\fP * s, \fBtls_session_secret_cb_fn\fP tls_session_secret_cb, \fBvoid\fP * arg)"

.SS "int SSL_set_session_ticket_ext (\fBSSL\fP * s, \fBvoid\fP * ext_data, int ext_len)"

.SS "int SSL_set_session_ticket_ext_cb (\fBSSL\fP * s, \fBtls_session_ticket_ext_cb_fn\fP cb, \fBvoid\fP * arg)"

.SS "\fBvoid\fP SSL_set_shutdown (\fBSSL\fP * ssl, int mode)"

.SS "int SSL_set_srp_server_param (\fBSSL\fP * s, const \fBBIGNUM\fP * N, const \fBBIGNUM\fP * g, \fBBIGNUM\fP * sa, \fBBIGNUM\fP * v, char * info)"

.SS "int SSL_set_srp_server_param_pw (\fBSSL\fP * s, const char * user, const char * pass, const char * grp)"

.SS "\fBSSL_CTX\fP* SSL_set_SSL_CTX (\fBSSL\fP * ssl, \fBSSL_CTX\fP * ctx)"

.SS "int SSL_set_ssl_method (\fBSSL\fP * s, const \fBSSL_METHOD\fP * method)"

.SS "\fBvoid\fP SSL_set_state (\fBSSL\fP * ssl, int state)"

.SS "\fBvoid\fP SSL_set_tmp_dh_callback (\fBSSL\fP * ssl, \fBDH\fP *(*)(\fBSSL\fP *ssl, int is_exportint keylength) dh)"

.SS "\fBvoid\fP SSL_set_tmp_ecdh_callback (\fBSSL\fP * ssl, \fBEC_KEY\fP *(*)(\fBSSL\fP *ssl, int is_exportint keylength) ecdh)"

.SS "\fBvoid\fP SSL_set_tmp_rsa_callback (\fBSSL\fP * ssl, \fBRSA\fP *(*)(\fBSSL\fP *ssl, int is_export,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   int keylength) cb)"

.SS "int SSL_set_trust (\fBSSL\fP * s, int trust)"

.SS "\fBvoid\fP SSL_set_verify (\fBSSL\fP * s, int mode, int(*)(int ok, \fBX509_STORE_CTX\fP *ctx) callback)"

.SS "\fBvoid\fP SSL_set_verify_depth (\fBSSL\fP * s, int depth)"

.SS "\fBvoid\fP SSL_set_verify_result (\fBSSL\fP * ssl, long v)"

.SS "int SSL_set_wfd (\fBSSL\fP * s, int fd)"

.SS "int SSL_shutdown (\fBSSL\fP * s)"

.SS "int SSL_SRP_CTX_free (\fBSSL\fP * ctx)"

.SS "int SSL_SRP_CTX_init (\fBSSL\fP * s)"

.SS "int SSL_srp_server_param_with_username (\fBSSL\fP * s, int * ad)"

.SS "int SSL_state (const \fBSSL\fP * ssl)"

.SS "const char* SSL_state_string (const \fBSSL\fP * s)"

.SS "const char* SSL_state_string_long (const \fBSSL\fP * s)"

.SS "const struct \fBopenssl_ssl_test_functions\fP* SSL_test_functions (\fBvoid\fP)"

.SS "\fBvoid\fP SSL_trace (int write_p, int version, int content_type, const \fBvoid\fP * buf, size_t len, \fBSSL\fP * ssl, \fBvoid\fP * arg)"

.SS "int SSL_use_certificate (\fBSSL\fP * ssl, \fBX509\fP * x)"

.SS "int SSL_use_certificate_ASN1 (\fBSSL\fP * ssl, const unsigned char * d, int len)"

.SS "int SSL_use_certificate_file (\fBSSL\fP * ssl, const char * file, int type)"

.SS "int SSL_use_PrivateKey (\fBSSL\fP * ssl, \fBEVP_PKEY\fP * pkey)"

.SS "int SSL_use_PrivateKey_ASN1 (int pk, \fBSSL\fP * ssl, const unsigned char * d, long len)"

.SS "int SSL_use_PrivateKey_file (\fBSSL\fP * ssl, const char * file, int type)"

.SS "int SSL_use_psk_identity_hint (\fBSSL\fP * s, const char * identity_hint)"

.SS "int SSL_use_RSAPrivateKey (\fBSSL\fP * ssl, \fBRSA\fP * rsa)"

.SS "int SSL_use_RSAPrivateKey_ASN1 (\fBSSL\fP * ssl, unsigned char * d, long len)"

.SS "int SSL_use_RSAPrivateKey_file (\fBSSL\fP * ssl, const char * file, int type)"

.SS "int SSL_version (const \fBSSL\fP * ssl)"

.SS "int SSL_want (const \fBSSL\fP * s)"

.SS "int SSL_write (\fBSSL\fP * ssl, const \fBvoid\fP * buf, int num)"

.SS "const \fBSSL_METHOD\fP* SSLv23_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv23_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv23_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv2_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv2_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv2_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv3_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv3_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* SSLv3_server_method (\fBvoid\fP)"

.SS "STACK_OF (\fBX509_NAME\fP) const"

.SS "STACK_OF (\fBX509\fP) const"

.SS "STACK_OF (\fBSSL_CIPHER\fP) const"

.SS "STACK_OF (\fBSSL_COMP\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_1_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_1_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_1_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_2_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_2_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_2_server_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_client_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_method (\fBvoid\fP)"

.SS "const \fBSSL_METHOD\fP* TLSv1_server_method (\fBvoid\fP)"

.SH "Variable Documentation"
.PP 
.SS "int(*)(\fBSSL\fP *ssl, \fBX509\fP **x509, \fBEVP_PKEY\fP **pkey) SSL_CTX_get_client_cert_cb(\fBSSL_CTX\fP *ctx)"

.PP
Definition at line 1254 of file ssl/ssl\&.h\&.
.SS "\fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fP, int val) SSL_CTX_get_info_callback(\fBSSL_CTX\fP *ctx)"

.PP
Definition at line 1249 of file ssl/ssl\&.h\&.
.SS "int(*)(int, \fBX509_STORE_CTX\fP *) SSL_CTX_get_verify_callback(const \fBSSL_CTX\fP *ctx)"

.PP
Definition at line 2260 of file ssl/ssl\&.h\&.
.SS "\fBSSL_SESSION\fP*(*)(struct \fBssl_st\fP *ssl, unsigned char *Data, int \fBlen\fP, int *copy) SSL_CTX_sess_get_get_cb(\fBSSL_CTX\fP *ctx)"

.PP
Definition at line 1243 of file ssl/ssl\&.h\&.
.SS "int(*)(struct \fBssl_st\fP *ssl, \fBSSL_SESSION\fP *sess) SSL_CTX_sess_get_new_cb(\fBSSL_CTX\fP *ctx)"

.PP
Definition at line 1228 of file ssl/ssl\&.h\&.
.SS "\fBvoid\fP(*)(struct \fBssl_ctx_st\fP *ctx, \fBSSL_SESSION\fP *sess) SSL_CTX_sess_get_remove_cb(\fBSSL_CTX\fP *ctx)"

.PP
Definition at line 1235 of file ssl/ssl\&.h\&.
.SS "\fBvoid\fP(*)(const \fBSSL\fP *ssl, int \fBtype\fP, int val) SSL_get_info_callback(const \fBSSL\fP *ssl)"

.PP
Definition at line 2451 of file ssl/ssl\&.h\&.
.SS "int(*)(int, \fBX509_STORE_CTX\fP *) SSL_get_verify_callback(const \fBSSL\fP *s)"

.PP
Definition at line 2169 of file ssl/ssl\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

.TH "evp_pkey_asn1_method_st" 3 "Fri Aug 19 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
evp_pkey_asn1_method_st \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <asn1_locl\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBpkey_id\fP"
.br
.ti -1c
.RI "int \fBpkey_base_id\fP"
.br
.ti -1c
.RI "unsigned long \fBpkey_flags\fP"
.br
.ti -1c
.RI "char * \fBpem_str\fP"
.br
.ti -1c
.RI "char * \fBinfo\fP"
.br
.ti -1c
.RI "int(* \fBpub_decode\fP )(\fBEVP_PKEY\fP *pk, \fBX509_PUBKEY\fP *pub)"
.br
.ti -1c
.RI "int(* \fBpub_encode\fP )(\fBX509_PUBKEY\fP *pub, const \fBEVP_PKEY\fP *pk)"
.br
.ti -1c
.RI "int(* \fBpub_cmp\fP )(const \fBEVP_PKEY\fP *\fBa\fP, const \fBEVP_PKEY\fP *b)"
.br
.ti -1c
.RI "int(* \fBpub_print\fP )(\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"
.br
.ti -1c
.RI "int(* \fBpriv_decode\fP )(\fBEVP_PKEY\fP *pk, \fBPKCS8_PRIV_KEY_INFO\fP *p8inf)"
.br
.ti -1c
.RI "int(* \fBpriv_encode\fP )(\fBPKCS8_PRIV_KEY_INFO\fP *p8, const \fBEVP_PKEY\fP *pk)"
.br
.ti -1c
.RI "int(* \fBpriv_print\fP )(\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"
.br
.ti -1c
.RI "int(* \fBpkey_size\fP )(const \fBEVP_PKEY\fP *pk)"
.br
.ti -1c
.RI "int(* \fBpkey_bits\fP )(const \fBEVP_PKEY\fP *pk)"
.br
.ti -1c
.RI "int(* \fBparam_decode\fP )(\fBEVP_PKEY\fP *pkey, const unsigned char **pder, int derlen)"
.br
.ti -1c
.RI "int(* \fBparam_encode\fP )(const \fBEVP_PKEY\fP *pkey, unsigned char **pder)"
.br
.ti -1c
.RI "int(* \fBparam_missing\fP )(const \fBEVP_PKEY\fP *pk)"
.br
.ti -1c
.RI "int(* \fBparam_copy\fP )(\fBEVP_PKEY\fP *to, const \fBEVP_PKEY\fP *from)"
.br
.ti -1c
.RI "int(* \fBparam_cmp\fP )(const \fBEVP_PKEY\fP *\fBa\fP, const \fBEVP_PKEY\fP *b)"
.br
.ti -1c
.RI "int(* \fBparam_print\fP )(\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"
.br
.ti -1c
.RI "int(* \fBsig_print\fP )(\fBBIO\fP *out, const \fBX509_ALGOR\fP *sigalg, const \fBASN1_STRING\fP *sig, int indent, \fBASN1_PCTX\fP *pctx)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBpkey_free\fP )(\fBEVP_PKEY\fP *pkey)"
.br
.ti -1c
.RI "int(* \fBpkey_ctrl\fP )(\fBEVP_PKEY\fP *pkey, int op, long arg1, \fBvoid\fP *arg2)"
.br
.ti -1c
.RI "int(* \fBold_priv_decode\fP )(\fBEVP_PKEY\fP *pkey, const unsigned char **pder, int derlen)"
.br
.ti -1c
.RI "int(* \fBold_priv_encode\fP )(const \fBEVP_PKEY\fP *pkey, unsigned char **pder)"
.br
.ti -1c
.RI "int(* \fBitem_verify\fP )(\fBEVP_MD_CTX\fP *ctx, const \fBASN1_ITEM\fP *it, \fBvoid\fP *asn, \fBX509_ALGOR\fP *\fBa\fP, \fBASN1_BIT_STRING\fP *sig, \fBEVP_PKEY\fP *pkey)"
.br
.ti -1c
.RI "int(* \fBitem_sign\fP )(\fBEVP_MD_CTX\fP *ctx, const \fBASN1_ITEM\fP *it, \fBvoid\fP *asn, \fBX509_ALGOR\fP *alg1, \fBX509_ALGOR\fP *alg2, \fBASN1_BIT_STRING\fP *sig)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 77 of file asn1_locl\&.h\&.
.SH "Field Documentation"
.PP 
.SS "int pkey_id"

.PP
Definition at line 78 of file asn1_locl\&.h\&.
.SS "int pkey_base_id"

.PP
Definition at line 79 of file asn1_locl\&.h\&.
.SS "unsigned long pkey_flags"

.PP
Definition at line 80 of file asn1_locl\&.h\&.
.SS "char* pem_str"

.PP
Definition at line 81 of file asn1_locl\&.h\&.
.SS "char* info"

.PP
Definition at line 82 of file asn1_locl\&.h\&.
.SS "int(* pub_decode) (\fBEVP_PKEY\fP *pk, \fBX509_PUBKEY\fP *pub)"

.PP
Definition at line 83 of file asn1_locl\&.h\&.
.SS "int(* pub_encode) (\fBX509_PUBKEY\fP *pub, const \fBEVP_PKEY\fP *pk)"

.PP
Definition at line 84 of file asn1_locl\&.h\&.
.SS "int(* pub_cmp) (const \fBEVP_PKEY\fP *\fBa\fP, const \fBEVP_PKEY\fP *b)"

.PP
Definition at line 85 of file asn1_locl\&.h\&.
.SS "int(* pub_print) (\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"

.PP
Definition at line 86 of file asn1_locl\&.h\&.
.SS "int(* priv_decode) (\fBEVP_PKEY\fP *pk, \fBPKCS8_PRIV_KEY_INFO\fP *p8inf)"

.PP
Definition at line 88 of file asn1_locl\&.h\&.
.SS "int(* priv_encode) (\fBPKCS8_PRIV_KEY_INFO\fP *p8, const \fBEVP_PKEY\fP *pk)"

.PP
Definition at line 89 of file asn1_locl\&.h\&.
.SS "int(* priv_print) (\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"

.PP
Definition at line 90 of file asn1_locl\&.h\&.
.SS "int(* pkey_size) (const \fBEVP_PKEY\fP *pk)"

.PP
Definition at line 92 of file asn1_locl\&.h\&.
.SS "int(* pkey_bits) (const \fBEVP_PKEY\fP *pk)"

.PP
Definition at line 93 of file asn1_locl\&.h\&.
.SS "int(* param_decode) (\fBEVP_PKEY\fP *pkey, const unsigned char **pder, int derlen)"

.PP
Definition at line 94 of file asn1_locl\&.h\&.
.SS "int(* param_encode) (const \fBEVP_PKEY\fP *pkey, unsigned char **pder)"

.PP
Definition at line 96 of file asn1_locl\&.h\&.
.SS "int(* param_missing) (const \fBEVP_PKEY\fP *pk)"

.PP
Definition at line 97 of file asn1_locl\&.h\&.
.SS "int(* param_copy) (\fBEVP_PKEY\fP *to, const \fBEVP_PKEY\fP *from)"

.PP
Definition at line 98 of file asn1_locl\&.h\&.
.SS "int(* param_cmp) (const \fBEVP_PKEY\fP *\fBa\fP, const \fBEVP_PKEY\fP *b)"

.PP
Definition at line 99 of file asn1_locl\&.h\&.
.SS "int(* param_print) (\fBBIO\fP *out, const \fBEVP_PKEY\fP *pkey, int indent, \fBASN1_PCTX\fP *pctx)"

.PP
Definition at line 100 of file asn1_locl\&.h\&.
.SS "int(* sig_print) (\fBBIO\fP *out, const \fBX509_ALGOR\fP *sigalg, const \fBASN1_STRING\fP *sig, int indent, \fBASN1_PCTX\fP *pctx)"

.PP
Definition at line 102 of file asn1_locl\&.h\&.
.SS "\fBvoid\fP(* pkey_free) (\fBEVP_PKEY\fP *pkey)"

.PP
Definition at line 105 of file asn1_locl\&.h\&.
.SS "int(* pkey_ctrl) (\fBEVP_PKEY\fP *pkey, int op, long arg1, \fBvoid\fP *arg2)"

.PP
Definition at line 106 of file asn1_locl\&.h\&.
.SS "int(* old_priv_decode) (\fBEVP_PKEY\fP *pkey, const unsigned char **pder, int derlen)"

.PP
Definition at line 108 of file asn1_locl\&.h\&.
.SS "int(* old_priv_encode) (const \fBEVP_PKEY\fP *pkey, unsigned char **pder)"

.PP
Definition at line 110 of file asn1_locl\&.h\&.
.SS "int(* item_verify) (\fBEVP_MD_CTX\fP *ctx, const \fBASN1_ITEM\fP *it, \fBvoid\fP *asn, \fBX509_ALGOR\fP *\fBa\fP, \fBASN1_BIT_STRING\fP *sig, \fBEVP_PKEY\fP *pkey)"

.PP
Definition at line 112 of file asn1_locl\&.h\&.
.SS "int(* item_sign) (\fBEVP_MD_CTX\fP *ctx, const \fBASN1_ITEM\fP *it, \fBvoid\fP *asn, \fBX509_ALGOR\fP *alg1, \fBX509_ALGOR\fP *alg2, \fBASN1_BIT_STRING\fP *sig)"

.PP
Definition at line 114 of file asn1_locl\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

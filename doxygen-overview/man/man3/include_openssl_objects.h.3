.TH "objects.h" 3 "Fri Aug 12 2016" "s2n-doxygen-full" \" -*- nroff -*-
.ad l
.nh
.SH NAME
objects.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <openssl/obj_mac\&.h>\fP
.br
\fC#include <openssl/bio\&.h>\fP
.br
\fC#include <openssl/asn1\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBobj_name_st\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUSE_OBJ_MAC\fP"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_UNDEF\fP   0x00"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_MD_METH\fP   0x01"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_CIPHER_METH\fP   0x02"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_PKEY_METH\fP   0x03"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_COMP_METH\fP   0x04"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_TYPE_NUM\fP   0x05"
.br
.ti -1c
.RI "#define \fBOBJ_NAME_ALIAS\fP   0x8000"
.br
.ti -1c
.RI "#define \fBOBJ_BSEARCH_VALUE_ON_NOMATCH\fP   0x01"
.br
.ti -1c
.RI "#define \fBOBJ_BSEARCH_FIRST_VALUE_ON_MATCH\fP   0x02"
.br
.ti -1c
.RI "#define \fBOBJ_create_and_add_object\fP(\fBa\fP,  b,  \fBc\fP)   \fBOBJ_create\fP(\fBa\fP,b,\fBc\fP)"
.br
.ti -1c
.RI "#define \fB_DECLARE_OBJ_BSEARCH_CMP_FN\fP(scope,  type1,  type2,  \fBnm\fP)    "
.br
.ti -1c
.RI "#define \fBDECLARE_OBJ_BSEARCH_CMP_FN\fP(type1,  type2,  cmp)     \fB_DECLARE_OBJ_BSEARCH_CMP_FN\fP(static, type1, type2, cmp)"
.br
.ti -1c
.RI "#define \fBDECLARE_OBJ_BSEARCH_GLOBAL_CMP_FN\fP(type1,  type2,  \fBnm\fP)         type2 * \fBOBJ_bsearch_\fP##\fBnm\fP(type1 *key, type2 const *base, int \fBnum\fP)"
.br
.ti -1c
.RI "#define \fBIMPLEMENT_OBJ_BSEARCH_CMP_FN\fP(type1,  type2,  \fBnm\fP)"
.br
.ti -1c
.RI "#define \fBIMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN\fP(type1,  type2,  \fBnm\fP)  "
.br
.ti -1c
.RI "#define \fBOBJ_bsearch\fP(type1,  key,  type2,  base,  \fBnum\fP,  cmp)                                                        "
.br
.ti -1c
.RI "#define \fBOBJ_bsearch_ex\fP(type1,  key,  type2,  base,  \fBnum\fP,  cmp,  \fBflags\fP)                                        "
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_ADD_OBJECT\fP   105"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_CREATE\fP   100"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_DUP\fP   101"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_NAME_NEW_INDEX\fP   106"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_NID2LN\fP   102"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_NID2OBJ\fP   103"
.br
.ti -1c
.RI "#define \fBOBJ_F_OBJ_NID2SN\fP   104"
.br
.ti -1c
.RI "#define \fBOBJ_R_MALLOC_FAILURE\fP   100"
.br
.ti -1c
.RI "#define \fBOBJ_R_UNKNOWN_NID\fP   101"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBobj_name_st\fP \fBOBJ_NAME\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBOBJ_NAME_init\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBOBJ_NAME_new_index\fP (unsigned long(*hash_func)(const char *), int(*cmp_func)(const char *, const char *), \fBvoid\fP(*\fBfree_func\fP)(const char *, int, const char *))"
.br
.ti -1c
.RI "const char * \fBOBJ_NAME_get\fP (const char *name, int \fBtype\fP)"
.br
.ti -1c
.RI "int \fBOBJ_NAME_add\fP (const char *name, int \fBtype\fP, const char *data)"
.br
.ti -1c
.RI "int \fBOBJ_NAME_remove\fP (const char *name, int \fBtype\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOBJ_NAME_cleanup\fP (int \fBtype\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOBJ_NAME_do_all\fP (int \fBtype\fP, \fBvoid\fP(*fn)(const \fBOBJ_NAME\fP *, \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOBJ_NAME_do_all_sorted\fP (int \fBtype\fP, \fBvoid\fP(*fn)(const \fBOBJ_NAME\fP *, \fBvoid\fP *arg), \fBvoid\fP *arg)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBOBJ_dup\fP (const \fBASN1_OBJECT\fP *o)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBOBJ_nid2obj\fP (int n)"
.br
.ti -1c
.RI "const char * \fBOBJ_nid2ln\fP (int n)"
.br
.ti -1c
.RI "const char * \fBOBJ_nid2sn\fP (int n)"
.br
.ti -1c
.RI "int \fBOBJ_obj2nid\fP (const \fBASN1_OBJECT\fP *o)"
.br
.ti -1c
.RI "\fBASN1_OBJECT\fP * \fBOBJ_txt2obj\fP (const char *s, int no_name)"
.br
.ti -1c
.RI "int \fBOBJ_obj2txt\fP (char *buf, int buf_len, const \fBASN1_OBJECT\fP *\fBa\fP, int no_name)"
.br
.ti -1c
.RI "int \fBOBJ_txt2nid\fP (const char *s)"
.br
.ti -1c
.RI "int \fBOBJ_ln2nid\fP (const char *s)"
.br
.ti -1c
.RI "int \fBOBJ_sn2nid\fP (const char *s)"
.br
.ti -1c
.RI "int \fBOBJ_cmp\fP (const \fBASN1_OBJECT\fP *\fBa\fP, const \fBASN1_OBJECT\fP *b)"
.br
.ti -1c
.RI "const \fBvoid\fP * \fBOBJ_bsearch_\fP (const \fBvoid\fP *key, const \fBvoid\fP *base, int \fBnum\fP, int size, int(*cmp)(const \fBvoid\fP *, const \fBvoid\fP *))"
.br
.ti -1c
.RI "const \fBvoid\fP * \fBOBJ_bsearch_ex_\fP (const \fBvoid\fP *key, const \fBvoid\fP *base, int \fBnum\fP, int size, int(*cmp)(const \fBvoid\fP *, const \fBvoid\fP *), int \fBflags\fP)"
.br
.ti -1c
.RI "int \fBOBJ_new_nid\fP (int \fBnum\fP)"
.br
.ti -1c
.RI "int \fBOBJ_add_object\fP (const \fBASN1_OBJECT\fP *\fBobj\fP)"
.br
.ti -1c
.RI "int \fBOBJ_create\fP (const char *oid, const char *sn, const char *ln)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOBJ_cleanup\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBOBJ_create_objects\fP (\fBBIO\fP *in)"
.br
.ti -1c
.RI "int \fBOBJ_find_sigid_algs\fP (int signid, int *pdig_nid, int *ppkey_nid)"
.br
.ti -1c
.RI "int \fBOBJ_find_sigid_by_algs\fP (int *psignid, int dig_nid, int pkey_nid)"
.br
.ti -1c
.RI "int \fBOBJ_add_sigid\fP (int signid, int dig_id, int pkey_id)"
.br
.ti -1c
.RI "\fBvoid\fP \fBOBJ_sigid_free\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcheck_defer\fP (int \fBnid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBERR_load_OBJ_strings\fP (\fBvoid\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBobj_cleanup_defer\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _DECLARE_OBJ_BSEARCH_CMP_FN(scope, type1, type2, \fBnm\fP)"
\fBValue:\fP
.PP
.nf
static int nm##_cmp_BSEARCH_CMP_FN(const void *, const void *); \
  static int nm##_cmp(type1 const *, type2 const *); \
  scope type2 * OBJ_bsearch_##nm(type1 *key, type2 const *base, int num)
.fi
.PP
Definition at line 1025 of file include/openssl/objects\&.h\&.
.SS "#define DECLARE_OBJ_BSEARCH_CMP_FN(type1, type2, cmp)   \fB_DECLARE_OBJ_BSEARCH_CMP_FN\fP(static, type1, type2, cmp)"

.PP
Definition at line 1030 of file include/openssl/objects\&.h\&.
.SS "#define DECLARE_OBJ_BSEARCH_GLOBAL_CMP_FN(type1, type2, \fBnm\fP)   type2 * \fBOBJ_bsearch_\fP##\fBnm\fP(type1 *key, type2 const *base, int \fBnum\fP)"

.PP
Definition at line 1032 of file include/openssl/objects\&.h\&.
.SS "#define IMPLEMENT_OBJ_BSEARCH_CMP_FN(type1, type2, \fBnm\fP)"
\fBValue:\fP
.PP
.nf
static int nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
      { \
      type1 const *a = a_; \
      type2 const *b = b_; \
      return nm##_cmp(a,b); \
      } \
  static type2 *OBJ_bsearch_##nm(type1 *key, type2 const *base, int num) \
      { \
      return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), \
                                        nm##_cmp_BSEARCH_CMP_FN); \
      } \
      extern void dummy_prototype(void)
.fi
.PP
Definition at line 1062 of file include/openssl/objects\&.h\&.
.SS "#define IMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN(type1, type2, \fBnm\fP)"
\fBValue:\fP
.PP
.nf
static int nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
      { \
      type1 const *a = a_; \
      type2 const *b = b_; \
      return nm##_cmp(a,b); \
      } \
  type2 *OBJ_bsearch_##nm(type1 *key, type2 const *base, int num) \
      { \
      return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), \
                                        nm##_cmp_BSEARCH_CMP_FN); \
      } \
      extern void dummy_prototype(void)
.fi
.PP
Definition at line 1076 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_bsearch(type1, key, type2, base, \fBnum\fP, cmp)"
\fBValue:\fP
.PP
.nf
((type2 *)OBJ_bsearch_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), \
                         num,sizeof(type2),                             \
                         ((void)CHECKED_PTR_OF(type1,cmp##_type_1),     \
                          (void)CHECKED_PTR_OF(type2,cmp##_type_2),     \
                          cmp##_BSEARCH_CMP_FN)))
.fi
.PP
Definition at line 1090 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_bsearch_ex(type1, key, type2, base, \fBnum\fP, cmp, \fBflags\fP)"
\fBValue:\fP
.PP
.nf
((type2 *)OBJ_bsearch_ex_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), \
                         num,sizeof(type2),                             \
                         ((void)CHECKED_PTR_OF(type1,cmp##_type_1),     \
                          (void)type_2=CHECKED_PTR_OF(type2,cmp##_type_2), \
                          cmp##_BSEARCH_CMP_FN)),flags)
.fi
.PP
Definition at line 1097 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_BSEARCH_FIRST_VALUE_ON_MATCH   0x02"

.PP
Definition at line 977 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_BSEARCH_VALUE_ON_NOMATCH   0x01"

.PP
Definition at line 976 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_create_and_add_object(\fBa\fP, b, \fBc\fP)   \fBOBJ_create\fP(\fBa\fP,b,\fBc\fP)"

.PP
Definition at line 991 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_ADD_OBJECT   105"

.PP
Definition at line 1128 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_CREATE   100"

.PP
Definition at line 1129 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_DUP   101"

.PP
Definition at line 1130 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_NAME_NEW_INDEX   106"

.PP
Definition at line 1131 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_NID2LN   102"

.PP
Definition at line 1132 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_NID2OBJ   103"

.PP
Definition at line 1133 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_F_OBJ_NID2SN   104"

.PP
Definition at line 1134 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_ALIAS   0x8000"

.PP
Definition at line 974 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_CIPHER_METH   0x02"

.PP
Definition at line 969 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_COMP_METH   0x04"

.PP
Definition at line 971 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_MD_METH   0x01"

.PP
Definition at line 968 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_NUM   0x05"

.PP
Definition at line 972 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_PKEY_METH   0x03"

.PP
Definition at line 970 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_NAME_TYPE_UNDEF   0x00"

.PP
Definition at line 967 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_R_MALLOC_FAILURE   100"

.PP
Definition at line 1137 of file include/openssl/objects\&.h\&.
.SS "#define OBJ_R_UNKNOWN_NID   101"

.PP
Definition at line 1138 of file include/openssl/objects\&.h\&.
.SS "#define USE_OBJ_MAC"

.PP
Definition at line 62 of file include/openssl/objects\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBobj_name_st\fP  \fBOBJ_NAME\fP"

.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP check_defer (int nid)"

.SS "\fBvoid\fP ERR_load_OBJ_strings (\fBvoid\fP)"

.SS "int OBJ_add_object (const \fBASN1_OBJECT\fP * obj)"

.SS "int OBJ_add_sigid (int signid, int dig_id, int pkey_id)"

.SS "const \fBvoid\fP* OBJ_bsearch_ (const \fBvoid\fP * key, const \fBvoid\fP * base, int num, int size, int(*)(const \fBvoid\fP *, const \fBvoid\fP *) cmp)"

.SS "const \fBvoid\fP* OBJ_bsearch_ex_ (const \fBvoid\fP * key, const \fBvoid\fP * base, int num, int size, int(*)(const \fBvoid\fP *, const \fBvoid\fP *) cmp, int flags)"

.SS "\fBvoid\fP OBJ_cleanup (\fBvoid\fP)"

.SS "int OBJ_cmp (const \fBASN1_OBJECT\fP * a, const \fBASN1_OBJECT\fP * b)"

.SS "int OBJ_create (const char * oid, const char * sn, const char * ln)"

.SS "int OBJ_create_objects (\fBBIO\fP * in)"

.SS "\fBASN1_OBJECT\fP* OBJ_dup (const \fBASN1_OBJECT\fP * o)"

.SS "int OBJ_find_sigid_algs (int signid, int * pdig_nid, int * ppkey_nid)"

.SS "int OBJ_find_sigid_by_algs (int * psignid, int dig_nid, int pkey_nid)"

.SS "int OBJ_ln2nid (const char * s)"

.SS "int OBJ_NAME_add (const char * name, int type, const char * data)"

.SS "\fBvoid\fP OBJ_NAME_cleanup (int type)"

.SS "\fBvoid\fP OBJ_NAME_do_all (int type, \fBvoid\fP(*)(const \fBOBJ_NAME\fP *, \fBvoid\fP *arg) fn, \fBvoid\fP * arg)"

.SS "\fBvoid\fP OBJ_NAME_do_all_sorted (int type, \fBvoid\fP(*)(const \fBOBJ_NAME\fP *, \fBvoid\fP *arg) fn, \fBvoid\fP * arg)"

.SS "const char* OBJ_NAME_get (const char * name, int type)"

.SS "int OBJ_NAME_init (\fBvoid\fP)"

.SS "int OBJ_NAME_new_index (unsigned long(*)(const char *) hash_func, int(*)(const char *, const char *) cmp_func, \fBvoid\fP(*)(const char *, int, const char *) free_func)"

.SS "int OBJ_NAME_remove (const char * name, int type)"

.SS "int OBJ_new_nid (int num)"

.SS "const char* OBJ_nid2ln (int n)"

.SS "\fBASN1_OBJECT\fP* OBJ_nid2obj (int n)"

.SS "const char* OBJ_nid2sn (int n)"

.SS "int OBJ_obj2nid (const \fBASN1_OBJECT\fP * o)"

.SS "int OBJ_obj2txt (char * buf, int buf_len, const \fBASN1_OBJECT\fP * a, int no_name)"

.SS "\fBvoid\fP OBJ_sigid_free (\fBvoid\fP)"

.SS "int OBJ_sn2nid (const char * s)"

.SS "int OBJ_txt2nid (const char * s)"

.SS "\fBASN1_OBJECT\fP* OBJ_txt2obj (const char * s, int no_name)"

.SH "Variable Documentation"
.PP 
.SS "int obj_cleanup_defer"

.SH "Author"
.PP 
Generated automatically by Doxygen for s2n-doxygen-full from the source code\&.

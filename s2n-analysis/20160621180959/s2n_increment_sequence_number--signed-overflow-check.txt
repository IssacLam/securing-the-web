CBMC version 5.4 64-bit x86_64 linux
Parsing ./s2n/crypto/s2n_sequence.c
Converting
Type-checking s2n_sequence
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop s2n_increment_sequence_number.0 iteration 1 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 2 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 3 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 4 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 5 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 6 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 7 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 8 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Unwinding loop s2n_increment_sequence_number.0 iteration 9 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
Not unwinding loop s2n_increment_sequence_number.0 iteration 10 (10 max) file ./s2n/crypto/s2n_sequence.c line 22 function s2n_increment_sequence_number thread 0
size of program expression: 244 steps
simple slicing removed 126 assignments
Generated 11 VCC(s), 11 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
2371 variables, 7028 clauses
SAT checker: instance is SATISFIABLE
Solving with MiniSAT 2.2.1 with simplifier
2371 variables, 0 clauses
SAT checker inconsistent: instance is UNSATISFIABLE
Runtime decision procedure: 0.016s

** Results:
[s2n_increment_sequence_number.overflow.1] arithmetic overflow on unsigned to signed type conversion in (signed int)(sequence_number->size - (unsigned int)1): FAILURE
[s2n_increment_sequence_number.overflow.2] arithmetic overflow on signed - in i - 1: SUCCESS

** 1 of 2 failed (2 iterations)
VERIFICATION FAILED

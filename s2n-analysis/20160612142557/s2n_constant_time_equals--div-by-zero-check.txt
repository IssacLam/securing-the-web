CBMC version 5.4 64-bit x86_64 macos
Parsing ./utils/s2n_safety.c
Converting
Type-checking s2n_safety
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop s2n_constant_time_equals.0 iteration 1 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 2 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 3 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 4 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 5 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 6 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 7 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 8 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Unwinding loop s2n_constant_time_equals.0 iteration 9 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
Not unwinding loop s2n_constant_time_equals.0 iteration 10 (10 max) file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
size of program expression: 111 steps
simple slicing removed 5 assignments
Generated 1 VCC(s), 1 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
999 variables, 2503 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.011s
Building error trace

Counterexample:

State 18 file ./utils/s2n_safety.c line 40 thread 0
----------------------------------------------------
  a=((const unsigned char *)NULL) + 1024 (0000000000000000000000000000000000000000000000000000010000000000)

State 19 file ./utils/s2n_safety.c line 40 thread 0
----------------------------------------------------
  b=((const unsigned char *)NULL) + 4398046511104 (0000000000000000000001000000000000000000000000000000000000000000)

State 20 file ./utils/s2n_safety.c line 40 thread 0
----------------------------------------------------
  len=7u (00000000000000000000000000000111)

State 22 file ./utils/s2n_safety.c line 43 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=0 (00000000)

State 23 file ./utils/s2n_safety.c line 43 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=0 (00000000)

State 24 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 25 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 27 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=0 (00000000)

State 28 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=1 (00000000000000000000000000000001)

State 31 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=0 (00000000)

State 32 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=2 (00000000000000000000000000000010)

State 35 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=128 (10000000)

State 36 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=3 (00000000000000000000000000000011)

State 39 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=128 (10000000)

State 40 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=4 (00000000000000000000000000000100)

State 43 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=129 (10000001)

State 44 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=5 (00000000000000000000000000000101)

State 47 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=129 (10000001)

State 48 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=6 (00000000000000000000000000000110)

State 51 file ./utils/s2n_safety.c line 45 function s2n_constant_time_equals thread 0
----------------------------------------------------
  xor=129 (10000001)

State 52 file ./utils/s2n_safety.c line 44 function s2n_constant_time_equals thread 0
----------------------------------------------------
  i=7 (00000000000000000000000000000111)

Violated property:
  file ./utils/s2n_safety.c line 47 function s2n_constant_time_equals
  ERROR: s2n_constant_time_equals
  (signed int)xor > 0 && (exists { signed int s2n_constant_time_equals$$1$$2$$j; s2n_constant_time_equals$$1$$2$$j >= 0 && (unsigned int)s2n_constant_time_equals$$1$$2$$j < len ==> a[(signed long int)s2n_constant_time_equals$$1$$2$$j] != b[(signed long int)s2n_constant_time_equals$$1$$2$$j] }) || (signed int)xor == 0 && (forall { signed int j; j >= 0 && (unsigned int)j < len ==> a[(signed long int)j] == b[(signed long int)j] })

VERIFICATION FAILED
